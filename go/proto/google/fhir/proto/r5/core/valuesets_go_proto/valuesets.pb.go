//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/r5/core/valuesets.proto

package valuesets_go_proto

import (
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdverseEventStatusValueSet_Value int32

const (
	AdverseEventStatusValueSet_INVALID_UNINITIALIZED AdverseEventStatusValueSet_Value = 0
	AdverseEventStatusValueSet_IN_PROGRESS           AdverseEventStatusValueSet_Value = 1
	AdverseEventStatusValueSet_COMPLETED             AdverseEventStatusValueSet_Value = 2
	AdverseEventStatusValueSet_ENTERED_IN_ERROR      AdverseEventStatusValueSet_Value = 3
	AdverseEventStatusValueSet_UNKNOWN               AdverseEventStatusValueSet_Value = 4
)

// Enum value maps for AdverseEventStatusValueSet_Value.
var (
	AdverseEventStatusValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "IN_PROGRESS",
		2: "COMPLETED",
		3: "ENTERED_IN_ERROR",
		4: "UNKNOWN",
	}
	AdverseEventStatusValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"IN_PROGRESS":           1,
		"COMPLETED":             2,
		"ENTERED_IN_ERROR":      3,
		"UNKNOWN":               4,
	}
)

func (x AdverseEventStatusValueSet_Value) Enum() *AdverseEventStatusValueSet_Value {
	p := new(AdverseEventStatusValueSet_Value)
	*p = x
	return p
}

func (x AdverseEventStatusValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdverseEventStatusValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[0].Descriptor()
}

func (AdverseEventStatusValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[0]
}

func (x AdverseEventStatusValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdverseEventStatusValueSet_Value.Descriptor instead.
func (AdverseEventStatusValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{0, 0}
}

type AppointmentResponseStatusValueSet_Value int32

const (
	AppointmentResponseStatusValueSet_INVALID_UNINITIALIZED AppointmentResponseStatusValueSet_Value = 0
	AppointmentResponseStatusValueSet_ACCEPTED              AppointmentResponseStatusValueSet_Value = 1
	AppointmentResponseStatusValueSet_DECLINED              AppointmentResponseStatusValueSet_Value = 2
	AppointmentResponseStatusValueSet_TENTATIVE             AppointmentResponseStatusValueSet_Value = 3
	AppointmentResponseStatusValueSet_NEEDS_ACTION          AppointmentResponseStatusValueSet_Value = 4
	AppointmentResponseStatusValueSet_ENTERED_IN_ERROR      AppointmentResponseStatusValueSet_Value = 5
)

// Enum value maps for AppointmentResponseStatusValueSet_Value.
var (
	AppointmentResponseStatusValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "ACCEPTED",
		2: "DECLINED",
		3: "TENTATIVE",
		4: "NEEDS_ACTION",
		5: "ENTERED_IN_ERROR",
	}
	AppointmentResponseStatusValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"ACCEPTED":              1,
		"DECLINED":              2,
		"TENTATIVE":             3,
		"NEEDS_ACTION":          4,
		"ENTERED_IN_ERROR":      5,
	}
)

func (x AppointmentResponseStatusValueSet_Value) Enum() *AppointmentResponseStatusValueSet_Value {
	p := new(AppointmentResponseStatusValueSet_Value)
	*p = x
	return p
}

func (x AppointmentResponseStatusValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentResponseStatusValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[1].Descriptor()
}

func (AppointmentResponseStatusValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[1]
}

func (x AppointmentResponseStatusValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentResponseStatusValueSet_Value.Descriptor instead.
func (AppointmentResponseStatusValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{1, 0}
}

type BodyLengthUnitsValueSet_Value int32

const (
	BodyLengthUnitsValueSet_INVALID_UNINITIALIZED BodyLengthUnitsValueSet_Value = 0
	BodyLengthUnitsValueSet_CM                    BodyLengthUnitsValueSet_Value = 1
	BodyLengthUnitsValueSet_IN_I                  BodyLengthUnitsValueSet_Value = 2
)

// Enum value maps for BodyLengthUnitsValueSet_Value.
var (
	BodyLengthUnitsValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "CM",
		2: "IN_I",
	}
	BodyLengthUnitsValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"CM":                    1,
		"IN_I":                  2,
	}
)

func (x BodyLengthUnitsValueSet_Value) Enum() *BodyLengthUnitsValueSet_Value {
	p := new(BodyLengthUnitsValueSet_Value)
	*p = x
	return p
}

func (x BodyLengthUnitsValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BodyLengthUnitsValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[2].Descriptor()
}

func (BodyLengthUnitsValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[2]
}

func (x BodyLengthUnitsValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BodyLengthUnitsValueSet_Value.Descriptor instead.
func (BodyLengthUnitsValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{2, 0}
}

type BodyTemperatureUnitsValueSet_Value int32

const (
	BodyTemperatureUnitsValueSet_INVALID_UNINITIALIZED BodyTemperatureUnitsValueSet_Value = 0
	BodyTemperatureUnitsValueSet_CEL                   BodyTemperatureUnitsValueSet_Value = 1
	BodyTemperatureUnitsValueSet_DEG_F                 BodyTemperatureUnitsValueSet_Value = 2
)

// Enum value maps for BodyTemperatureUnitsValueSet_Value.
var (
	BodyTemperatureUnitsValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "CEL",
		2: "DEG_F",
	}
	BodyTemperatureUnitsValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"CEL":                   1,
		"DEG_F":                 2,
	}
)

func (x BodyTemperatureUnitsValueSet_Value) Enum() *BodyTemperatureUnitsValueSet_Value {
	p := new(BodyTemperatureUnitsValueSet_Value)
	*p = x
	return p
}

func (x BodyTemperatureUnitsValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BodyTemperatureUnitsValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[3].Descriptor()
}

func (BodyTemperatureUnitsValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[3]
}

func (x BodyTemperatureUnitsValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BodyTemperatureUnitsValueSet_Value.Descriptor instead.
func (BodyTemperatureUnitsValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{3, 0}
}

type BodyWeightUnitsValueSet_Value int32

const (
	BodyWeightUnitsValueSet_INVALID_UNINITIALIZED BodyWeightUnitsValueSet_Value = 0
	BodyWeightUnitsValueSet_KG                    BodyWeightUnitsValueSet_Value = 1
	BodyWeightUnitsValueSet_LB_AV                 BodyWeightUnitsValueSet_Value = 2
	BodyWeightUnitsValueSet_G                     BodyWeightUnitsValueSet_Value = 3
)

// Enum value maps for BodyWeightUnitsValueSet_Value.
var (
	BodyWeightUnitsValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "KG",
		2: "LB_AV",
		3: "G",
	}
	BodyWeightUnitsValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"KG":                    1,
		"LB_AV":                 2,
		"G":                     3,
	}
)

func (x BodyWeightUnitsValueSet_Value) Enum() *BodyWeightUnitsValueSet_Value {
	p := new(BodyWeightUnitsValueSet_Value)
	*p = x
	return p
}

func (x BodyWeightUnitsValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BodyWeightUnitsValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[4].Descriptor()
}

func (BodyWeightUnitsValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[4]
}

func (x BodyWeightUnitsValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BodyWeightUnitsValueSet_Value.Descriptor instead.
func (BodyWeightUnitsValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{4, 0}
}

type CarePlanIntentValueSet_Value int32

const (
	CarePlanIntentValueSet_INVALID_UNINITIALIZED CarePlanIntentValueSet_Value = 0
	CarePlanIntentValueSet_PROPOSAL              CarePlanIntentValueSet_Value = 1
	CarePlanIntentValueSet_PLAN                  CarePlanIntentValueSet_Value = 2
	CarePlanIntentValueSet_ORDER                 CarePlanIntentValueSet_Value = 3
	CarePlanIntentValueSet_OPTION                CarePlanIntentValueSet_Value = 4
	CarePlanIntentValueSet_DIRECTIVE             CarePlanIntentValueSet_Value = 5
)

// Enum value maps for CarePlanIntentValueSet_Value.
var (
	CarePlanIntentValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "PROPOSAL",
		2: "PLAN",
		3: "ORDER",
		4: "OPTION",
		5: "DIRECTIVE",
	}
	CarePlanIntentValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"PROPOSAL":              1,
		"PLAN":                  2,
		"ORDER":                 3,
		"OPTION":                4,
		"DIRECTIVE":             5,
	}
)

func (x CarePlanIntentValueSet_Value) Enum() *CarePlanIntentValueSet_Value {
	p := new(CarePlanIntentValueSet_Value)
	*p = x
	return p
}

func (x CarePlanIntentValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CarePlanIntentValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[5].Descriptor()
}

func (CarePlanIntentValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[5]
}

func (x CarePlanIntentValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CarePlanIntentValueSet_Value.Descriptor instead.
func (CarePlanIntentValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{5, 0}
}

type ColorCodesOrRGBValueSet_Value int32

const (
	ColorCodesOrRGBValueSet_INVALID_UNINITIALIZED ColorCodesOrRGBValueSet_Value = 0
	ColorCodesOrRGBValueSet_ALICEBLUE             ColorCodesOrRGBValueSet_Value = 1
	ColorCodesOrRGBValueSet_ANTIQUEWHITE          ColorCodesOrRGBValueSet_Value = 2
	ColorCodesOrRGBValueSet_AQUA                  ColorCodesOrRGBValueSet_Value = 3
	ColorCodesOrRGBValueSet_AQUAMARINE            ColorCodesOrRGBValueSet_Value = 4
	ColorCodesOrRGBValueSet_AZURE                 ColorCodesOrRGBValueSet_Value = 5
	ColorCodesOrRGBValueSet_BEIGE                 ColorCodesOrRGBValueSet_Value = 6
	ColorCodesOrRGBValueSet_BISQUE                ColorCodesOrRGBValueSet_Value = 7
	ColorCodesOrRGBValueSet_BLACK                 ColorCodesOrRGBValueSet_Value = 8
	ColorCodesOrRGBValueSet_BLANCHEDALMOND        ColorCodesOrRGBValueSet_Value = 9
	ColorCodesOrRGBValueSet_BLUE                  ColorCodesOrRGBValueSet_Value = 10
	ColorCodesOrRGBValueSet_BLUEVIOLET            ColorCodesOrRGBValueSet_Value = 11
	ColorCodesOrRGBValueSet_BROWN                 ColorCodesOrRGBValueSet_Value = 12
	ColorCodesOrRGBValueSet_BURLYWOOD             ColorCodesOrRGBValueSet_Value = 13
	ColorCodesOrRGBValueSet_CADETBLUE             ColorCodesOrRGBValueSet_Value = 14
	ColorCodesOrRGBValueSet_CHARTREUSE            ColorCodesOrRGBValueSet_Value = 15
	ColorCodesOrRGBValueSet_CHOCOLATE             ColorCodesOrRGBValueSet_Value = 16
	ColorCodesOrRGBValueSet_CORAL                 ColorCodesOrRGBValueSet_Value = 17
	ColorCodesOrRGBValueSet_CORNFLOWERBLUE        ColorCodesOrRGBValueSet_Value = 18
	ColorCodesOrRGBValueSet_CORNSILK              ColorCodesOrRGBValueSet_Value = 19
	ColorCodesOrRGBValueSet_CRIMSON               ColorCodesOrRGBValueSet_Value = 20
	ColorCodesOrRGBValueSet_CYAN                  ColorCodesOrRGBValueSet_Value = 21
	ColorCodesOrRGBValueSet_DARKBLUE              ColorCodesOrRGBValueSet_Value = 22
	ColorCodesOrRGBValueSet_DARKCYAN              ColorCodesOrRGBValueSet_Value = 23
	ColorCodesOrRGBValueSet_DARKGOLDENROD         ColorCodesOrRGBValueSet_Value = 24
	ColorCodesOrRGBValueSet_DARKGRAY              ColorCodesOrRGBValueSet_Value = 25
	ColorCodesOrRGBValueSet_DARKGREEN             ColorCodesOrRGBValueSet_Value = 26
	ColorCodesOrRGBValueSet_DARKGREY              ColorCodesOrRGBValueSet_Value = 27
	ColorCodesOrRGBValueSet_DARKKHAKI             ColorCodesOrRGBValueSet_Value = 28
	ColorCodesOrRGBValueSet_DARKMAGENTA           ColorCodesOrRGBValueSet_Value = 29
	ColorCodesOrRGBValueSet_DARKOLIVEGREEN        ColorCodesOrRGBValueSet_Value = 30
	ColorCodesOrRGBValueSet_DARKORANGE            ColorCodesOrRGBValueSet_Value = 31
	ColorCodesOrRGBValueSet_DARKORCHID            ColorCodesOrRGBValueSet_Value = 32
	ColorCodesOrRGBValueSet_DARKRED               ColorCodesOrRGBValueSet_Value = 33
	ColorCodesOrRGBValueSet_DARKSALMON            ColorCodesOrRGBValueSet_Value = 34
	ColorCodesOrRGBValueSet_DARKSEAGREEN          ColorCodesOrRGBValueSet_Value = 35
	ColorCodesOrRGBValueSet_DARKSLATEBLUE         ColorCodesOrRGBValueSet_Value = 36
	ColorCodesOrRGBValueSet_DARKSLATEGRAY         ColorCodesOrRGBValueSet_Value = 37
	ColorCodesOrRGBValueSet_DARKSLATEGREY         ColorCodesOrRGBValueSet_Value = 38
	ColorCodesOrRGBValueSet_DARKTURQUOISE         ColorCodesOrRGBValueSet_Value = 39
	ColorCodesOrRGBValueSet_DARKVIOLET            ColorCodesOrRGBValueSet_Value = 40
	ColorCodesOrRGBValueSet_DEEPPINK              ColorCodesOrRGBValueSet_Value = 41
	ColorCodesOrRGBValueSet_DEEPSKYBLUE           ColorCodesOrRGBValueSet_Value = 42
	ColorCodesOrRGBValueSet_DIMGRAY               ColorCodesOrRGBValueSet_Value = 43
	ColorCodesOrRGBValueSet_DIMGREY               ColorCodesOrRGBValueSet_Value = 44
	ColorCodesOrRGBValueSet_DODGERBLUE            ColorCodesOrRGBValueSet_Value = 45
	ColorCodesOrRGBValueSet_FIREBRICK             ColorCodesOrRGBValueSet_Value = 46
	ColorCodesOrRGBValueSet_FLORALWHITE           ColorCodesOrRGBValueSet_Value = 47
	ColorCodesOrRGBValueSet_FORESTGREEN           ColorCodesOrRGBValueSet_Value = 48
	ColorCodesOrRGBValueSet_FUCHSIA               ColorCodesOrRGBValueSet_Value = 49
	ColorCodesOrRGBValueSet_GAINSBORO             ColorCodesOrRGBValueSet_Value = 50
	ColorCodesOrRGBValueSet_GHOSTWHITE            ColorCodesOrRGBValueSet_Value = 51
	ColorCodesOrRGBValueSet_GOLD                  ColorCodesOrRGBValueSet_Value = 52
	ColorCodesOrRGBValueSet_GOLDENROD             ColorCodesOrRGBValueSet_Value = 53
	ColorCodesOrRGBValueSet_GRAY                  ColorCodesOrRGBValueSet_Value = 54
	ColorCodesOrRGBValueSet_GREEN                 ColorCodesOrRGBValueSet_Value = 55
	ColorCodesOrRGBValueSet_GREENYELLOW           ColorCodesOrRGBValueSet_Value = 56
	ColorCodesOrRGBValueSet_GREY                  ColorCodesOrRGBValueSet_Value = 57
	ColorCodesOrRGBValueSet_HONEYDEW              ColorCodesOrRGBValueSet_Value = 58
	ColorCodesOrRGBValueSet_HOTPINK               ColorCodesOrRGBValueSet_Value = 59
	ColorCodesOrRGBValueSet_INDIANRED             ColorCodesOrRGBValueSet_Value = 60
	ColorCodesOrRGBValueSet_INDIGO                ColorCodesOrRGBValueSet_Value = 61
	ColorCodesOrRGBValueSet_IVORY                 ColorCodesOrRGBValueSet_Value = 62
	ColorCodesOrRGBValueSet_KHAKI                 ColorCodesOrRGBValueSet_Value = 63
	ColorCodesOrRGBValueSet_LAVENDER              ColorCodesOrRGBValueSet_Value = 64
	ColorCodesOrRGBValueSet_LAVENDERBLUSH         ColorCodesOrRGBValueSet_Value = 65
	ColorCodesOrRGBValueSet_LAWNGREEN             ColorCodesOrRGBValueSet_Value = 66
	ColorCodesOrRGBValueSet_LEMONCHIFFON          ColorCodesOrRGBValueSet_Value = 67
	ColorCodesOrRGBValueSet_LIGHTBLUE             ColorCodesOrRGBValueSet_Value = 68
	ColorCodesOrRGBValueSet_LIGHTCORAL            ColorCodesOrRGBValueSet_Value = 69
	ColorCodesOrRGBValueSet_LIGHTCYAN             ColorCodesOrRGBValueSet_Value = 70
	ColorCodesOrRGBValueSet_LIGHTGOLDENRODYELLOW  ColorCodesOrRGBValueSet_Value = 71
	ColorCodesOrRGBValueSet_LIGHTGRAY             ColorCodesOrRGBValueSet_Value = 72
	ColorCodesOrRGBValueSet_LIGHTGREEN            ColorCodesOrRGBValueSet_Value = 73
	ColorCodesOrRGBValueSet_LIGHTGREY             ColorCodesOrRGBValueSet_Value = 74
	ColorCodesOrRGBValueSet_LIGHTPINK             ColorCodesOrRGBValueSet_Value = 75
	ColorCodesOrRGBValueSet_LIGHTSALMON           ColorCodesOrRGBValueSet_Value = 76
	ColorCodesOrRGBValueSet_LIGHTSEAGREEN         ColorCodesOrRGBValueSet_Value = 77
	ColorCodesOrRGBValueSet_LIGHTSKYBLUE          ColorCodesOrRGBValueSet_Value = 78
	ColorCodesOrRGBValueSet_LIGHTSLATEGRAY        ColorCodesOrRGBValueSet_Value = 79
	ColorCodesOrRGBValueSet_LIGHTSLATEGREY        ColorCodesOrRGBValueSet_Value = 80
	ColorCodesOrRGBValueSet_LIGHTSTEELBLUE        ColorCodesOrRGBValueSet_Value = 81
	ColorCodesOrRGBValueSet_LIGHTYELLOW           ColorCodesOrRGBValueSet_Value = 82
	ColorCodesOrRGBValueSet_LIME                  ColorCodesOrRGBValueSet_Value = 83
	ColorCodesOrRGBValueSet_LIMEGREEN             ColorCodesOrRGBValueSet_Value = 84
	ColorCodesOrRGBValueSet_LINEN                 ColorCodesOrRGBValueSet_Value = 85
	ColorCodesOrRGBValueSet_MAGENTA               ColorCodesOrRGBValueSet_Value = 86
	ColorCodesOrRGBValueSet_MAROON                ColorCodesOrRGBValueSet_Value = 87
	ColorCodesOrRGBValueSet_MEDIUMAQUAMARINE      ColorCodesOrRGBValueSet_Value = 88
	ColorCodesOrRGBValueSet_MEDIUMBLUE            ColorCodesOrRGBValueSet_Value = 89
	ColorCodesOrRGBValueSet_MEDIUMORCHID          ColorCodesOrRGBValueSet_Value = 90
	ColorCodesOrRGBValueSet_MEDIUMPURPLE          ColorCodesOrRGBValueSet_Value = 91
	ColorCodesOrRGBValueSet_MEDIUMSEAGREEN        ColorCodesOrRGBValueSet_Value = 92
	ColorCodesOrRGBValueSet_MEDIUMSLATEBLUE       ColorCodesOrRGBValueSet_Value = 93
	ColorCodesOrRGBValueSet_MEDIUMSPRINGGREEN     ColorCodesOrRGBValueSet_Value = 94
	ColorCodesOrRGBValueSet_MEDIUMTURQUOISE       ColorCodesOrRGBValueSet_Value = 95
	ColorCodesOrRGBValueSet_MEDIUMVIOLETRED       ColorCodesOrRGBValueSet_Value = 96
	ColorCodesOrRGBValueSet_MIDNIGHTBLUE          ColorCodesOrRGBValueSet_Value = 97
	ColorCodesOrRGBValueSet_MINTCREAM             ColorCodesOrRGBValueSet_Value = 98
	ColorCodesOrRGBValueSet_MISTYROSE             ColorCodesOrRGBValueSet_Value = 99
	ColorCodesOrRGBValueSet_MOCCASIN              ColorCodesOrRGBValueSet_Value = 100
	ColorCodesOrRGBValueSet_NAVAJOWHITE           ColorCodesOrRGBValueSet_Value = 101
	ColorCodesOrRGBValueSet_NAVY                  ColorCodesOrRGBValueSet_Value = 102
	ColorCodesOrRGBValueSet_OLDLACE               ColorCodesOrRGBValueSet_Value = 103
	ColorCodesOrRGBValueSet_OLIVE                 ColorCodesOrRGBValueSet_Value = 104
	ColorCodesOrRGBValueSet_OLIVEDRAB             ColorCodesOrRGBValueSet_Value = 105
	ColorCodesOrRGBValueSet_ORANGE                ColorCodesOrRGBValueSet_Value = 106
	ColorCodesOrRGBValueSet_ORANGERED             ColorCodesOrRGBValueSet_Value = 107
	ColorCodesOrRGBValueSet_ORCHID                ColorCodesOrRGBValueSet_Value = 108
	ColorCodesOrRGBValueSet_PALEGOLDENROD         ColorCodesOrRGBValueSet_Value = 109
	ColorCodesOrRGBValueSet_PALEGREEN             ColorCodesOrRGBValueSet_Value = 110
	ColorCodesOrRGBValueSet_PALETURQUOISE         ColorCodesOrRGBValueSet_Value = 111
	ColorCodesOrRGBValueSet_PALEVIOLETRED         ColorCodesOrRGBValueSet_Value = 112
	ColorCodesOrRGBValueSet_PAPAYAWHIP            ColorCodesOrRGBValueSet_Value = 113
	ColorCodesOrRGBValueSet_PEACHPUFF             ColorCodesOrRGBValueSet_Value = 114
	ColorCodesOrRGBValueSet_PERU                  ColorCodesOrRGBValueSet_Value = 115
	ColorCodesOrRGBValueSet_PINK                  ColorCodesOrRGBValueSet_Value = 116
	ColorCodesOrRGBValueSet_PLUM                  ColorCodesOrRGBValueSet_Value = 117
	ColorCodesOrRGBValueSet_POWDERBLUE            ColorCodesOrRGBValueSet_Value = 118
	ColorCodesOrRGBValueSet_PURPLE                ColorCodesOrRGBValueSet_Value = 119
	ColorCodesOrRGBValueSet_REBECCAPURPLE         ColorCodesOrRGBValueSet_Value = 120
	ColorCodesOrRGBValueSet_RED                   ColorCodesOrRGBValueSet_Value = 121
	ColorCodesOrRGBValueSet_ROSYBROWN             ColorCodesOrRGBValueSet_Value = 122
	ColorCodesOrRGBValueSet_ROYALBLUE             ColorCodesOrRGBValueSet_Value = 123
	ColorCodesOrRGBValueSet_SADDLEBROWN           ColorCodesOrRGBValueSet_Value = 124
	ColorCodesOrRGBValueSet_SALMON                ColorCodesOrRGBValueSet_Value = 125
	ColorCodesOrRGBValueSet_SANDYBROWN            ColorCodesOrRGBValueSet_Value = 126
	ColorCodesOrRGBValueSet_SEAGREEN              ColorCodesOrRGBValueSet_Value = 127
	ColorCodesOrRGBValueSet_SEASHELL              ColorCodesOrRGBValueSet_Value = 128
	ColorCodesOrRGBValueSet_SIENNA                ColorCodesOrRGBValueSet_Value = 129
	ColorCodesOrRGBValueSet_SILVER                ColorCodesOrRGBValueSet_Value = 130
	ColorCodesOrRGBValueSet_SKYBLUE               ColorCodesOrRGBValueSet_Value = 131
	ColorCodesOrRGBValueSet_SLATEBLUE             ColorCodesOrRGBValueSet_Value = 132
	ColorCodesOrRGBValueSet_SLATEGRAY             ColorCodesOrRGBValueSet_Value = 133
	ColorCodesOrRGBValueSet_SLATEGREY             ColorCodesOrRGBValueSet_Value = 134
	ColorCodesOrRGBValueSet_SNOW                  ColorCodesOrRGBValueSet_Value = 135
	ColorCodesOrRGBValueSet_SPRINGGREEN           ColorCodesOrRGBValueSet_Value = 136
	ColorCodesOrRGBValueSet_STEELBLUE             ColorCodesOrRGBValueSet_Value = 137
	ColorCodesOrRGBValueSet_TAN                   ColorCodesOrRGBValueSet_Value = 138
	ColorCodesOrRGBValueSet_TEAL                  ColorCodesOrRGBValueSet_Value = 139
	ColorCodesOrRGBValueSet_THISTLE               ColorCodesOrRGBValueSet_Value = 140
	ColorCodesOrRGBValueSet_TOMATO                ColorCodesOrRGBValueSet_Value = 141
	ColorCodesOrRGBValueSet_TURQUOISE             ColorCodesOrRGBValueSet_Value = 142
	ColorCodesOrRGBValueSet_VIOLET                ColorCodesOrRGBValueSet_Value = 143
	ColorCodesOrRGBValueSet_WHEAT                 ColorCodesOrRGBValueSet_Value = 144
	ColorCodesOrRGBValueSet_WHITE                 ColorCodesOrRGBValueSet_Value = 145
	ColorCodesOrRGBValueSet_WHITESMOKE            ColorCodesOrRGBValueSet_Value = 146
	ColorCodesOrRGBValueSet_YELLOW                ColorCodesOrRGBValueSet_Value = 147
	ColorCodesOrRGBValueSet_YELLOWGREEN           ColorCodesOrRGBValueSet_Value = 148
)

// Enum value maps for ColorCodesOrRGBValueSet_Value.
var (
	ColorCodesOrRGBValueSet_Value_name = map[int32]string{
		0:   "INVALID_UNINITIALIZED",
		1:   "ALICEBLUE",
		2:   "ANTIQUEWHITE",
		3:   "AQUA",
		4:   "AQUAMARINE",
		5:   "AZURE",
		6:   "BEIGE",
		7:   "BISQUE",
		8:   "BLACK",
		9:   "BLANCHEDALMOND",
		10:  "BLUE",
		11:  "BLUEVIOLET",
		12:  "BROWN",
		13:  "BURLYWOOD",
		14:  "CADETBLUE",
		15:  "CHARTREUSE",
		16:  "CHOCOLATE",
		17:  "CORAL",
		18:  "CORNFLOWERBLUE",
		19:  "CORNSILK",
		20:  "CRIMSON",
		21:  "CYAN",
		22:  "DARKBLUE",
		23:  "DARKCYAN",
		24:  "DARKGOLDENROD",
		25:  "DARKGRAY",
		26:  "DARKGREEN",
		27:  "DARKGREY",
		28:  "DARKKHAKI",
		29:  "DARKMAGENTA",
		30:  "DARKOLIVEGREEN",
		31:  "DARKORANGE",
		32:  "DARKORCHID",
		33:  "DARKRED",
		34:  "DARKSALMON",
		35:  "DARKSEAGREEN",
		36:  "DARKSLATEBLUE",
		37:  "DARKSLATEGRAY",
		38:  "DARKSLATEGREY",
		39:  "DARKTURQUOISE",
		40:  "DARKVIOLET",
		41:  "DEEPPINK",
		42:  "DEEPSKYBLUE",
		43:  "DIMGRAY",
		44:  "DIMGREY",
		45:  "DODGERBLUE",
		46:  "FIREBRICK",
		47:  "FLORALWHITE",
		48:  "FORESTGREEN",
		49:  "FUCHSIA",
		50:  "GAINSBORO",
		51:  "GHOSTWHITE",
		52:  "GOLD",
		53:  "GOLDENROD",
		54:  "GRAY",
		55:  "GREEN",
		56:  "GREENYELLOW",
		57:  "GREY",
		58:  "HONEYDEW",
		59:  "HOTPINK",
		60:  "INDIANRED",
		61:  "INDIGO",
		62:  "IVORY",
		63:  "KHAKI",
		64:  "LAVENDER",
		65:  "LAVENDERBLUSH",
		66:  "LAWNGREEN",
		67:  "LEMONCHIFFON",
		68:  "LIGHTBLUE",
		69:  "LIGHTCORAL",
		70:  "LIGHTCYAN",
		71:  "LIGHTGOLDENRODYELLOW",
		72:  "LIGHTGRAY",
		73:  "LIGHTGREEN",
		74:  "LIGHTGREY",
		75:  "LIGHTPINK",
		76:  "LIGHTSALMON",
		77:  "LIGHTSEAGREEN",
		78:  "LIGHTSKYBLUE",
		79:  "LIGHTSLATEGRAY",
		80:  "LIGHTSLATEGREY",
		81:  "LIGHTSTEELBLUE",
		82:  "LIGHTYELLOW",
		83:  "LIME",
		84:  "LIMEGREEN",
		85:  "LINEN",
		86:  "MAGENTA",
		87:  "MAROON",
		88:  "MEDIUMAQUAMARINE",
		89:  "MEDIUMBLUE",
		90:  "MEDIUMORCHID",
		91:  "MEDIUMPURPLE",
		92:  "MEDIUMSEAGREEN",
		93:  "MEDIUMSLATEBLUE",
		94:  "MEDIUMSPRINGGREEN",
		95:  "MEDIUMTURQUOISE",
		96:  "MEDIUMVIOLETRED",
		97:  "MIDNIGHTBLUE",
		98:  "MINTCREAM",
		99:  "MISTYROSE",
		100: "MOCCASIN",
		101: "NAVAJOWHITE",
		102: "NAVY",
		103: "OLDLACE",
		104: "OLIVE",
		105: "OLIVEDRAB",
		106: "ORANGE",
		107: "ORANGERED",
		108: "ORCHID",
		109: "PALEGOLDENROD",
		110: "PALEGREEN",
		111: "PALETURQUOISE",
		112: "PALEVIOLETRED",
		113: "PAPAYAWHIP",
		114: "PEACHPUFF",
		115: "PERU",
		116: "PINK",
		117: "PLUM",
		118: "POWDERBLUE",
		119: "PURPLE",
		120: "REBECCAPURPLE",
		121: "RED",
		122: "ROSYBROWN",
		123: "ROYALBLUE",
		124: "SADDLEBROWN",
		125: "SALMON",
		126: "SANDYBROWN",
		127: "SEAGREEN",
		128: "SEASHELL",
		129: "SIENNA",
		130: "SILVER",
		131: "SKYBLUE",
		132: "SLATEBLUE",
		133: "SLATEGRAY",
		134: "SLATEGREY",
		135: "SNOW",
		136: "SPRINGGREEN",
		137: "STEELBLUE",
		138: "TAN",
		139: "TEAL",
		140: "THISTLE",
		141: "TOMATO",
		142: "TURQUOISE",
		143: "VIOLET",
		144: "WHEAT",
		145: "WHITE",
		146: "WHITESMOKE",
		147: "YELLOW",
		148: "YELLOWGREEN",
	}
	ColorCodesOrRGBValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"ALICEBLUE":             1,
		"ANTIQUEWHITE":          2,
		"AQUA":                  3,
		"AQUAMARINE":            4,
		"AZURE":                 5,
		"BEIGE":                 6,
		"BISQUE":                7,
		"BLACK":                 8,
		"BLANCHEDALMOND":        9,
		"BLUE":                  10,
		"BLUEVIOLET":            11,
		"BROWN":                 12,
		"BURLYWOOD":             13,
		"CADETBLUE":             14,
		"CHARTREUSE":            15,
		"CHOCOLATE":             16,
		"CORAL":                 17,
		"CORNFLOWERBLUE":        18,
		"CORNSILK":              19,
		"CRIMSON":               20,
		"CYAN":                  21,
		"DARKBLUE":              22,
		"DARKCYAN":              23,
		"DARKGOLDENROD":         24,
		"DARKGRAY":              25,
		"DARKGREEN":             26,
		"DARKGREY":              27,
		"DARKKHAKI":             28,
		"DARKMAGENTA":           29,
		"DARKOLIVEGREEN":        30,
		"DARKORANGE":            31,
		"DARKORCHID":            32,
		"DARKRED":               33,
		"DARKSALMON":            34,
		"DARKSEAGREEN":          35,
		"DARKSLATEBLUE":         36,
		"DARKSLATEGRAY":         37,
		"DARKSLATEGREY":         38,
		"DARKTURQUOISE":         39,
		"DARKVIOLET":            40,
		"DEEPPINK":              41,
		"DEEPSKYBLUE":           42,
		"DIMGRAY":               43,
		"DIMGREY":               44,
		"DODGERBLUE":            45,
		"FIREBRICK":             46,
		"FLORALWHITE":           47,
		"FORESTGREEN":           48,
		"FUCHSIA":               49,
		"GAINSBORO":             50,
		"GHOSTWHITE":            51,
		"GOLD":                  52,
		"GOLDENROD":             53,
		"GRAY":                  54,
		"GREEN":                 55,
		"GREENYELLOW":           56,
		"GREY":                  57,
		"HONEYDEW":              58,
		"HOTPINK":               59,
		"INDIANRED":             60,
		"INDIGO":                61,
		"IVORY":                 62,
		"KHAKI":                 63,
		"LAVENDER":              64,
		"LAVENDERBLUSH":         65,
		"LAWNGREEN":             66,
		"LEMONCHIFFON":          67,
		"LIGHTBLUE":             68,
		"LIGHTCORAL":            69,
		"LIGHTCYAN":             70,
		"LIGHTGOLDENRODYELLOW":  71,
		"LIGHTGRAY":             72,
		"LIGHTGREEN":            73,
		"LIGHTGREY":             74,
		"LIGHTPINK":             75,
		"LIGHTSALMON":           76,
		"LIGHTSEAGREEN":         77,
		"LIGHTSKYBLUE":          78,
		"LIGHTSLATEGRAY":        79,
		"LIGHTSLATEGREY":        80,
		"LIGHTSTEELBLUE":        81,
		"LIGHTYELLOW":           82,
		"LIME":                  83,
		"LIMEGREEN":             84,
		"LINEN":                 85,
		"MAGENTA":               86,
		"MAROON":                87,
		"MEDIUMAQUAMARINE":      88,
		"MEDIUMBLUE":            89,
		"MEDIUMORCHID":          90,
		"MEDIUMPURPLE":          91,
		"MEDIUMSEAGREEN":        92,
		"MEDIUMSLATEBLUE":       93,
		"MEDIUMSPRINGGREEN":     94,
		"MEDIUMTURQUOISE":       95,
		"MEDIUMVIOLETRED":       96,
		"MIDNIGHTBLUE":          97,
		"MINTCREAM":             98,
		"MISTYROSE":             99,
		"MOCCASIN":              100,
		"NAVAJOWHITE":           101,
		"NAVY":                  102,
		"OLDLACE":               103,
		"OLIVE":                 104,
		"OLIVEDRAB":             105,
		"ORANGE":                106,
		"ORANGERED":             107,
		"ORCHID":                108,
		"PALEGOLDENROD":         109,
		"PALEGREEN":             110,
		"PALETURQUOISE":         111,
		"PALEVIOLETRED":         112,
		"PAPAYAWHIP":            113,
		"PEACHPUFF":             114,
		"PERU":                  115,
		"PINK":                  116,
		"PLUM":                  117,
		"POWDERBLUE":            118,
		"PURPLE":                119,
		"REBECCAPURPLE":         120,
		"RED":                   121,
		"ROSYBROWN":             122,
		"ROYALBLUE":             123,
		"SADDLEBROWN":           124,
		"SALMON":                125,
		"SANDYBROWN":            126,
		"SEAGREEN":              127,
		"SEASHELL":              128,
		"SIENNA":                129,
		"SILVER":                130,
		"SKYBLUE":               131,
		"SLATEBLUE":             132,
		"SLATEGRAY":             133,
		"SLATEGREY":             134,
		"SNOW":                  135,
		"SPRINGGREEN":           136,
		"STEELBLUE":             137,
		"TAN":                   138,
		"TEAL":                  139,
		"THISTLE":               140,
		"TOMATO":                141,
		"TURQUOISE":             142,
		"VIOLET":                143,
		"WHEAT":                 144,
		"WHITE":                 145,
		"WHITESMOKE":            146,
		"YELLOW":                147,
		"YELLOWGREEN":           148,
	}
)

func (x ColorCodesOrRGBValueSet_Value) Enum() *ColorCodesOrRGBValueSet_Value {
	p := new(ColorCodesOrRGBValueSet_Value)
	*p = x
	return p
}

func (x ColorCodesOrRGBValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColorCodesOrRGBValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[6].Descriptor()
}

func (ColorCodesOrRGBValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[6]
}

func (x ColorCodesOrRGBValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColorCodesOrRGBValueSet_Value.Descriptor instead.
func (ColorCodesOrRGBValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{6, 0}
}

type CommonLanguagesValueSet_Value int32

const (
	CommonLanguagesValueSet_INVALID_UNINITIALIZED CommonLanguagesValueSet_Value = 0
	CommonLanguagesValueSet_AR                    CommonLanguagesValueSet_Value = 1
	CommonLanguagesValueSet_BG                    CommonLanguagesValueSet_Value = 2
	CommonLanguagesValueSet_BG_BG                 CommonLanguagesValueSet_Value = 3
	CommonLanguagesValueSet_BN                    CommonLanguagesValueSet_Value = 4
	CommonLanguagesValueSet_CS                    CommonLanguagesValueSet_Value = 5
	CommonLanguagesValueSet_CS_CZ                 CommonLanguagesValueSet_Value = 6
	CommonLanguagesValueSet_BS                    CommonLanguagesValueSet_Value = 7
	CommonLanguagesValueSet_BS_BA                 CommonLanguagesValueSet_Value = 8
	CommonLanguagesValueSet_DA                    CommonLanguagesValueSet_Value = 9
	CommonLanguagesValueSet_DA_DK                 CommonLanguagesValueSet_Value = 10
	CommonLanguagesValueSet_DE                    CommonLanguagesValueSet_Value = 11
	CommonLanguagesValueSet_DE_AT                 CommonLanguagesValueSet_Value = 12
	CommonLanguagesValueSet_DE_CH                 CommonLanguagesValueSet_Value = 13
	CommonLanguagesValueSet_DE_DE                 CommonLanguagesValueSet_Value = 14
	CommonLanguagesValueSet_EL                    CommonLanguagesValueSet_Value = 15
	CommonLanguagesValueSet_EL_GR                 CommonLanguagesValueSet_Value = 16
	CommonLanguagesValueSet_EN                    CommonLanguagesValueSet_Value = 17
	CommonLanguagesValueSet_EN_AU                 CommonLanguagesValueSet_Value = 18
	CommonLanguagesValueSet_EN_CA                 CommonLanguagesValueSet_Value = 19
	CommonLanguagesValueSet_EN_GB                 CommonLanguagesValueSet_Value = 20
	CommonLanguagesValueSet_EN_IN                 CommonLanguagesValueSet_Value = 21
	CommonLanguagesValueSet_EN_NZ                 CommonLanguagesValueSet_Value = 22
	CommonLanguagesValueSet_EN_SG                 CommonLanguagesValueSet_Value = 23
	CommonLanguagesValueSet_EN_US                 CommonLanguagesValueSet_Value = 24
	CommonLanguagesValueSet_ES                    CommonLanguagesValueSet_Value = 25
	CommonLanguagesValueSet_ES_AR                 CommonLanguagesValueSet_Value = 26
	CommonLanguagesValueSet_ES_ES                 CommonLanguagesValueSet_Value = 27
	CommonLanguagesValueSet_ES_UY                 CommonLanguagesValueSet_Value = 28
	CommonLanguagesValueSet_ET                    CommonLanguagesValueSet_Value = 29
	CommonLanguagesValueSet_ET_EE                 CommonLanguagesValueSet_Value = 30
	CommonLanguagesValueSet_FI                    CommonLanguagesValueSet_Value = 31
	CommonLanguagesValueSet_FR                    CommonLanguagesValueSet_Value = 32
	CommonLanguagesValueSet_FR_BE                 CommonLanguagesValueSet_Value = 33
	CommonLanguagesValueSet_FR_CH                 CommonLanguagesValueSet_Value = 34
	CommonLanguagesValueSet_FR_FR                 CommonLanguagesValueSet_Value = 35
	CommonLanguagesValueSet_FI_FI                 CommonLanguagesValueSet_Value = 36
	CommonLanguagesValueSet_FR_CA                 CommonLanguagesValueSet_Value = 37
	CommonLanguagesValueSet_FY                    CommonLanguagesValueSet_Value = 38
	CommonLanguagesValueSet_FY_NL                 CommonLanguagesValueSet_Value = 39
	CommonLanguagesValueSet_HI                    CommonLanguagesValueSet_Value = 40
	CommonLanguagesValueSet_HR                    CommonLanguagesValueSet_Value = 41
	CommonLanguagesValueSet_HR_HR                 CommonLanguagesValueSet_Value = 42
	CommonLanguagesValueSet_IS                    CommonLanguagesValueSet_Value = 43
	CommonLanguagesValueSet_IS_IS                 CommonLanguagesValueSet_Value = 44
	CommonLanguagesValueSet_IT                    CommonLanguagesValueSet_Value = 45
	CommonLanguagesValueSet_IT_CH                 CommonLanguagesValueSet_Value = 46
	CommonLanguagesValueSet_IT_IT                 CommonLanguagesValueSet_Value = 47
	CommonLanguagesValueSet_JA                    CommonLanguagesValueSet_Value = 48
	CommonLanguagesValueSet_KO                    CommonLanguagesValueSet_Value = 49
	CommonLanguagesValueSet_LT                    CommonLanguagesValueSet_Value = 50
	CommonLanguagesValueSet_LT_LT                 CommonLanguagesValueSet_Value = 51
	CommonLanguagesValueSet_LV                    CommonLanguagesValueSet_Value = 52
	CommonLanguagesValueSet_LV_LV                 CommonLanguagesValueSet_Value = 53
	CommonLanguagesValueSet_NL                    CommonLanguagesValueSet_Value = 54
	CommonLanguagesValueSet_NL_BE                 CommonLanguagesValueSet_Value = 55
	CommonLanguagesValueSet_NL_NL                 CommonLanguagesValueSet_Value = 56
	CommonLanguagesValueSet_NO                    CommonLanguagesValueSet_Value = 57
	CommonLanguagesValueSet_NO_NO                 CommonLanguagesValueSet_Value = 58
	CommonLanguagesValueSet_PA                    CommonLanguagesValueSet_Value = 59
	CommonLanguagesValueSet_PL                    CommonLanguagesValueSet_Value = 60
	CommonLanguagesValueSet_PL_PL                 CommonLanguagesValueSet_Value = 61
	CommonLanguagesValueSet_PT                    CommonLanguagesValueSet_Value = 62
	CommonLanguagesValueSet_PT_PT                 CommonLanguagesValueSet_Value = 63
	CommonLanguagesValueSet_PT_BR                 CommonLanguagesValueSet_Value = 64
	CommonLanguagesValueSet_RO                    CommonLanguagesValueSet_Value = 65
	CommonLanguagesValueSet_RO_RO                 CommonLanguagesValueSet_Value = 66
	CommonLanguagesValueSet_RU                    CommonLanguagesValueSet_Value = 67
	CommonLanguagesValueSet_RU_RU                 CommonLanguagesValueSet_Value = 68
	CommonLanguagesValueSet_SK                    CommonLanguagesValueSet_Value = 69
	CommonLanguagesValueSet_SK_SK                 CommonLanguagesValueSet_Value = 70
	CommonLanguagesValueSet_SL                    CommonLanguagesValueSet_Value = 71
	CommonLanguagesValueSet_SL_SI                 CommonLanguagesValueSet_Value = 72
	CommonLanguagesValueSet_SR                    CommonLanguagesValueSet_Value = 73
	CommonLanguagesValueSet_SR_RS                 CommonLanguagesValueSet_Value = 74
	CommonLanguagesValueSet_SV                    CommonLanguagesValueSet_Value = 75
	CommonLanguagesValueSet_SV_SE                 CommonLanguagesValueSet_Value = 76
	CommonLanguagesValueSet_TE                    CommonLanguagesValueSet_Value = 77
	CommonLanguagesValueSet_ZH                    CommonLanguagesValueSet_Value = 78
	CommonLanguagesValueSet_ZH_CN                 CommonLanguagesValueSet_Value = 79
	CommonLanguagesValueSet_ZH_HK                 CommonLanguagesValueSet_Value = 80
	CommonLanguagesValueSet_ZH_SG                 CommonLanguagesValueSet_Value = 81
	CommonLanguagesValueSet_ZH_TW                 CommonLanguagesValueSet_Value = 82
)

// Enum value maps for CommonLanguagesValueSet_Value.
var (
	CommonLanguagesValueSet_Value_name = map[int32]string{
		0:  "INVALID_UNINITIALIZED",
		1:  "AR",
		2:  "BG",
		3:  "BG_BG",
		4:  "BN",
		5:  "CS",
		6:  "CS_CZ",
		7:  "BS",
		8:  "BS_BA",
		9:  "DA",
		10: "DA_DK",
		11: "DE",
		12: "DE_AT",
		13: "DE_CH",
		14: "DE_DE",
		15: "EL",
		16: "EL_GR",
		17: "EN",
		18: "EN_AU",
		19: "EN_CA",
		20: "EN_GB",
		21: "EN_IN",
		22: "EN_NZ",
		23: "EN_SG",
		24: "EN_US",
		25: "ES",
		26: "ES_AR",
		27: "ES_ES",
		28: "ES_UY",
		29: "ET",
		30: "ET_EE",
		31: "FI",
		32: "FR",
		33: "FR_BE",
		34: "FR_CH",
		35: "FR_FR",
		36: "FI_FI",
		37: "FR_CA",
		38: "FY",
		39: "FY_NL",
		40: "HI",
		41: "HR",
		42: "HR_HR",
		43: "IS",
		44: "IS_IS",
		45: "IT",
		46: "IT_CH",
		47: "IT_IT",
		48: "JA",
		49: "KO",
		50: "LT",
		51: "LT_LT",
		52: "LV",
		53: "LV_LV",
		54: "NL",
		55: "NL_BE",
		56: "NL_NL",
		57: "NO",
		58: "NO_NO",
		59: "PA",
		60: "PL",
		61: "PL_PL",
		62: "PT",
		63: "PT_PT",
		64: "PT_BR",
		65: "RO",
		66: "RO_RO",
		67: "RU",
		68: "RU_RU",
		69: "SK",
		70: "SK_SK",
		71: "SL",
		72: "SL_SI",
		73: "SR",
		74: "SR_RS",
		75: "SV",
		76: "SV_SE",
		77: "TE",
		78: "ZH",
		79: "ZH_CN",
		80: "ZH_HK",
		81: "ZH_SG",
		82: "ZH_TW",
	}
	CommonLanguagesValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"AR":                    1,
		"BG":                    2,
		"BG_BG":                 3,
		"BN":                    4,
		"CS":                    5,
		"CS_CZ":                 6,
		"BS":                    7,
		"BS_BA":                 8,
		"DA":                    9,
		"DA_DK":                 10,
		"DE":                    11,
		"DE_AT":                 12,
		"DE_CH":                 13,
		"DE_DE":                 14,
		"EL":                    15,
		"EL_GR":                 16,
		"EN":                    17,
		"EN_AU":                 18,
		"EN_CA":                 19,
		"EN_GB":                 20,
		"EN_IN":                 21,
		"EN_NZ":                 22,
		"EN_SG":                 23,
		"EN_US":                 24,
		"ES":                    25,
		"ES_AR":                 26,
		"ES_ES":                 27,
		"ES_UY":                 28,
		"ET":                    29,
		"ET_EE":                 30,
		"FI":                    31,
		"FR":                    32,
		"FR_BE":                 33,
		"FR_CH":                 34,
		"FR_FR":                 35,
		"FI_FI":                 36,
		"FR_CA":                 37,
		"FY":                    38,
		"FY_NL":                 39,
		"HI":                    40,
		"HR":                    41,
		"HR_HR":                 42,
		"IS":                    43,
		"IS_IS":                 44,
		"IT":                    45,
		"IT_CH":                 46,
		"IT_IT":                 47,
		"JA":                    48,
		"KO":                    49,
		"LT":                    50,
		"LT_LT":                 51,
		"LV":                    52,
		"LV_LV":                 53,
		"NL":                    54,
		"NL_BE":                 55,
		"NL_NL":                 56,
		"NO":                    57,
		"NO_NO":                 58,
		"PA":                    59,
		"PL":                    60,
		"PL_PL":                 61,
		"PT":                    62,
		"PT_PT":                 63,
		"PT_BR":                 64,
		"RO":                    65,
		"RO_RO":                 66,
		"RU":                    67,
		"RU_RU":                 68,
		"SK":                    69,
		"SK_SK":                 70,
		"SL":                    71,
		"SL_SI":                 72,
		"SR":                    73,
		"SR_RS":                 74,
		"SV":                    75,
		"SV_SE":                 76,
		"TE":                    77,
		"ZH":                    78,
		"ZH_CN":                 79,
		"ZH_HK":                 80,
		"ZH_SG":                 81,
		"ZH_TW":                 82,
	}
)

func (x CommonLanguagesValueSet_Value) Enum() *CommonLanguagesValueSet_Value {
	p := new(CommonLanguagesValueSet_Value)
	*p = x
	return p
}

func (x CommonLanguagesValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonLanguagesValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[7].Descriptor()
}

func (CommonLanguagesValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[7]
}

func (x CommonLanguagesValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonLanguagesValueSet_Value.Descriptor instead.
func (CommonLanguagesValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{7, 0}
}

type DetectedIssueStatusValueSet_Value int32

const (
	DetectedIssueStatusValueSet_INVALID_UNINITIALIZED DetectedIssueStatusValueSet_Value = 0
	DetectedIssueStatusValueSet_PRELIMINARY           DetectedIssueStatusValueSet_Value = 1
	DetectedIssueStatusValueSet_FINAL                 DetectedIssueStatusValueSet_Value = 2
	DetectedIssueStatusValueSet_ENTERED_IN_ERROR      DetectedIssueStatusValueSet_Value = 3
	DetectedIssueStatusValueSet_MITIGATED             DetectedIssueStatusValueSet_Value = 4
)

// Enum value maps for DetectedIssueStatusValueSet_Value.
var (
	DetectedIssueStatusValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "PRELIMINARY",
		2: "FINAL",
		3: "ENTERED_IN_ERROR",
		4: "MITIGATED",
	}
	DetectedIssueStatusValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"PRELIMINARY":           1,
		"FINAL":                 2,
		"ENTERED_IN_ERROR":      3,
		"MITIGATED":             4,
	}
)

func (x DetectedIssueStatusValueSet_Value) Enum() *DetectedIssueStatusValueSet_Value {
	p := new(DetectedIssueStatusValueSet_Value)
	*p = x
	return p
}

func (x DetectedIssueStatusValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetectedIssueStatusValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[8].Descriptor()
}

func (DetectedIssueStatusValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[8]
}

func (x DetectedIssueStatusValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetectedIssueStatusValueSet_Value.Descriptor instead.
func (DetectedIssueStatusValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{8, 0}
}

type EventTimingValueSet_Value int32

const (
	EventTimingValueSet_INVALID_UNINITIALIZED EventTimingValueSet_Value = 0
	EventTimingValueSet_MORN                  EventTimingValueSet_Value = 1
	EventTimingValueSet_MORN_EARLY            EventTimingValueSet_Value = 2
	EventTimingValueSet_MORN_LATE             EventTimingValueSet_Value = 3
	EventTimingValueSet_NOON                  EventTimingValueSet_Value = 4
	EventTimingValueSet_AFT                   EventTimingValueSet_Value = 5
	EventTimingValueSet_AFT_EARLY             EventTimingValueSet_Value = 6
	EventTimingValueSet_AFT_LATE              EventTimingValueSet_Value = 7
	EventTimingValueSet_EVE                   EventTimingValueSet_Value = 8
	EventTimingValueSet_EVE_EARLY             EventTimingValueSet_Value = 9
	EventTimingValueSet_EVE_LATE              EventTimingValueSet_Value = 10
	EventTimingValueSet_NIGHT                 EventTimingValueSet_Value = 11
	EventTimingValueSet_PHS                   EventTimingValueSet_Value = 12
	EventTimingValueSet_IMD                   EventTimingValueSet_Value = 27
	EventTimingValueSet_HS                    EventTimingValueSet_Value = 13
	EventTimingValueSet_WAKE                  EventTimingValueSet_Value = 14
	EventTimingValueSet_C                     EventTimingValueSet_Value = 15
	EventTimingValueSet_CM                    EventTimingValueSet_Value = 16
	EventTimingValueSet_CD                    EventTimingValueSet_Value = 17
	EventTimingValueSet_CV                    EventTimingValueSet_Value = 18
	EventTimingValueSet_AC                    EventTimingValueSet_Value = 19
	EventTimingValueSet_ACM                   EventTimingValueSet_Value = 20
	EventTimingValueSet_ACD                   EventTimingValueSet_Value = 21
	EventTimingValueSet_ACV                   EventTimingValueSet_Value = 22
	EventTimingValueSet_PC                    EventTimingValueSet_Value = 23
	EventTimingValueSet_PCM                   EventTimingValueSet_Value = 24
	EventTimingValueSet_PCD                   EventTimingValueSet_Value = 25
	EventTimingValueSet_PCV                   EventTimingValueSet_Value = 26
)

// Enum value maps for EventTimingValueSet_Value.
var (
	EventTimingValueSet_Value_name = map[int32]string{
		0:  "INVALID_UNINITIALIZED",
		1:  "MORN",
		2:  "MORN_EARLY",
		3:  "MORN_LATE",
		4:  "NOON",
		5:  "AFT",
		6:  "AFT_EARLY",
		7:  "AFT_LATE",
		8:  "EVE",
		9:  "EVE_EARLY",
		10: "EVE_LATE",
		11: "NIGHT",
		12: "PHS",
		27: "IMD",
		13: "HS",
		14: "WAKE",
		15: "C",
		16: "CM",
		17: "CD",
		18: "CV",
		19: "AC",
		20: "ACM",
		21: "ACD",
		22: "ACV",
		23: "PC",
		24: "PCM",
		25: "PCD",
		26: "PCV",
	}
	EventTimingValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"MORN":                  1,
		"MORN_EARLY":            2,
		"MORN_LATE":             3,
		"NOON":                  4,
		"AFT":                   5,
		"AFT_EARLY":             6,
		"AFT_LATE":              7,
		"EVE":                   8,
		"EVE_EARLY":             9,
		"EVE_LATE":              10,
		"NIGHT":                 11,
		"PHS":                   12,
		"IMD":                   27,
		"HS":                    13,
		"WAKE":                  14,
		"C":                     15,
		"CM":                    16,
		"CD":                    17,
		"CV":                    18,
		"AC":                    19,
		"ACM":                   20,
		"ACD":                   21,
		"ACV":                   22,
		"PC":                    23,
		"PCM":                   24,
		"PCD":                   25,
		"PCV":                   26,
	}
)

func (x EventTimingValueSet_Value) Enum() *EventTimingValueSet_Value {
	p := new(EventTimingValueSet_Value)
	*p = x
	return p
}

func (x EventTimingValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventTimingValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[9].Descriptor()
}

func (EventTimingValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[9]
}

func (x EventTimingValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventTimingValueSet_Value.Descriptor instead.
func (EventTimingValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{9, 0}
}

type ImmunizationEvaluationStatusCodesValueSet_Value int32

const (
	ImmunizationEvaluationStatusCodesValueSet_INVALID_UNINITIALIZED ImmunizationEvaluationStatusCodesValueSet_Value = 0
	ImmunizationEvaluationStatusCodesValueSet_COMPLETED             ImmunizationEvaluationStatusCodesValueSet_Value = 1
	ImmunizationEvaluationStatusCodesValueSet_ENTERED_IN_ERROR      ImmunizationEvaluationStatusCodesValueSet_Value = 2
)

// Enum value maps for ImmunizationEvaluationStatusCodesValueSet_Value.
var (
	ImmunizationEvaluationStatusCodesValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "COMPLETED",
		2: "ENTERED_IN_ERROR",
	}
	ImmunizationEvaluationStatusCodesValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"COMPLETED":             1,
		"ENTERED_IN_ERROR":      2,
	}
)

func (x ImmunizationEvaluationStatusCodesValueSet_Value) Enum() *ImmunizationEvaluationStatusCodesValueSet_Value {
	p := new(ImmunizationEvaluationStatusCodesValueSet_Value)
	*p = x
	return p
}

func (x ImmunizationEvaluationStatusCodesValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImmunizationEvaluationStatusCodesValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[10].Descriptor()
}

func (ImmunizationEvaluationStatusCodesValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[10]
}

func (x ImmunizationEvaluationStatusCodesValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImmunizationEvaluationStatusCodesValueSet_Value.Descriptor instead.
func (ImmunizationEvaluationStatusCodesValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{10, 0}
}

type ImmunizationStatusCodesValueSet_Value int32

const (
	ImmunizationStatusCodesValueSet_INVALID_UNINITIALIZED ImmunizationStatusCodesValueSet_Value = 0
	ImmunizationStatusCodesValueSet_COMPLETED             ImmunizationStatusCodesValueSet_Value = 1
	ImmunizationStatusCodesValueSet_ENTERED_IN_ERROR      ImmunizationStatusCodesValueSet_Value = 2
	ImmunizationStatusCodesValueSet_NOT_DONE              ImmunizationStatusCodesValueSet_Value = 3
)

// Enum value maps for ImmunizationStatusCodesValueSet_Value.
var (
	ImmunizationStatusCodesValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "COMPLETED",
		2: "ENTERED_IN_ERROR",
		3: "NOT_DONE",
	}
	ImmunizationStatusCodesValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"COMPLETED":             1,
		"ENTERED_IN_ERROR":      2,
		"NOT_DONE":              3,
	}
)

func (x ImmunizationStatusCodesValueSet_Value) Enum() *ImmunizationStatusCodesValueSet_Value {
	p := new(ImmunizationStatusCodesValueSet_Value)
	*p = x
	return p
}

func (x ImmunizationStatusCodesValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImmunizationStatusCodesValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[11].Descriptor()
}

func (ImmunizationStatusCodesValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[11]
}

func (x ImmunizationStatusCodesValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImmunizationStatusCodesValueSet_Value.Descriptor instead.
func (ImmunizationStatusCodesValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{11, 0}
}

type InteractionTriggerValueSet_Value int32

const (
	InteractionTriggerValueSet_INVALID_UNINITIALIZED InteractionTriggerValueSet_Value = 0
	InteractionTriggerValueSet_CREATE                InteractionTriggerValueSet_Value = 1
	InteractionTriggerValueSet_UPDATE                InteractionTriggerValueSet_Value = 2
	InteractionTriggerValueSet_DELETE                InteractionTriggerValueSet_Value = 3
)

// Enum value maps for InteractionTriggerValueSet_Value.
var (
	InteractionTriggerValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
	}
	InteractionTriggerValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"CREATE":                1,
		"UPDATE":                2,
		"DELETE":                3,
	}
)

func (x InteractionTriggerValueSet_Value) Enum() *InteractionTriggerValueSet_Value {
	p := new(InteractionTriggerValueSet_Value)
	*p = x
	return p
}

func (x InteractionTriggerValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionTriggerValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[12].Descriptor()
}

func (InteractionTriggerValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[12]
}

func (x InteractionTriggerValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionTriggerValueSet_Value.Descriptor instead.
func (InteractionTriggerValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{12, 0}
}

type LDLCodesValueSet_Value int32

const (
	LDLCodesValueSet_INVALID_UNINITIALIZED                                            LDLCodesValueSet_Value = 0
	LDLCodesValueSet_LDL_CHOLESTEROL_ASSAY                                            LDLCodesValueSet_Value = 1
	LDLCodesValueSet_CHOLESTEROL_IN_LDL_MASS_VOLUME_IN_SERUM_OR_PLASMA_BY_CALCULATION LDLCodesValueSet_Value = 2
)

// Enum value maps for LDLCodesValueSet_Value.
var (
	LDLCodesValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "LDL_CHOLESTEROL_ASSAY",
		2: "CHOLESTEROL_IN_LDL_MASS_VOLUME_IN_SERUM_OR_PLASMA_BY_CALCULATION",
	}
	LDLCodesValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"LDL_CHOLESTEROL_ASSAY": 1,
		"CHOLESTEROL_IN_LDL_MASS_VOLUME_IN_SERUM_OR_PLASMA_BY_CALCULATION": 2,
	}
)

func (x LDLCodesValueSet_Value) Enum() *LDLCodesValueSet_Value {
	p := new(LDLCodesValueSet_Value)
	*p = x
	return p
}

func (x LDLCodesValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LDLCodesValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[13].Descriptor()
}

func (LDLCodesValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[13]
}

func (x LDLCodesValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LDLCodesValueSet_Value.Descriptor instead.
func (LDLCodesValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{13, 0}
}

type RelatedArtifactTypeExpandedValueSet_Value int32

const (
	RelatedArtifactTypeExpandedValueSet_INVALID_UNINITIALIZED RelatedArtifactTypeExpandedValueSet_Value = 0
	RelatedArtifactTypeExpandedValueSet_DOCUMENTATION         RelatedArtifactTypeExpandedValueSet_Value = 1
	RelatedArtifactTypeExpandedValueSet_JUSTIFICATION         RelatedArtifactTypeExpandedValueSet_Value = 2
	RelatedArtifactTypeExpandedValueSet_CITATION              RelatedArtifactTypeExpandedValueSet_Value = 3
	RelatedArtifactTypeExpandedValueSet_PREDECESSOR           RelatedArtifactTypeExpandedValueSet_Value = 4
	RelatedArtifactTypeExpandedValueSet_SUCCESSOR             RelatedArtifactTypeExpandedValueSet_Value = 5
	RelatedArtifactTypeExpandedValueSet_DERIVED_FROM          RelatedArtifactTypeExpandedValueSet_Value = 6
	RelatedArtifactTypeExpandedValueSet_DEPENDS_ON            RelatedArtifactTypeExpandedValueSet_Value = 7
	RelatedArtifactTypeExpandedValueSet_COMPOSED_OF           RelatedArtifactTypeExpandedValueSet_Value = 8
	RelatedArtifactTypeExpandedValueSet_PART_OF               RelatedArtifactTypeExpandedValueSet_Value = 9
	RelatedArtifactTypeExpandedValueSet_AMENDS                RelatedArtifactTypeExpandedValueSet_Value = 10
	RelatedArtifactTypeExpandedValueSet_AMENDED_WITH          RelatedArtifactTypeExpandedValueSet_Value = 11
	RelatedArtifactTypeExpandedValueSet_APPENDS               RelatedArtifactTypeExpandedValueSet_Value = 12
	RelatedArtifactTypeExpandedValueSet_APPENDED_WITH         RelatedArtifactTypeExpandedValueSet_Value = 13
	RelatedArtifactTypeExpandedValueSet_CITES                 RelatedArtifactTypeExpandedValueSet_Value = 14
	RelatedArtifactTypeExpandedValueSet_CITED_BY              RelatedArtifactTypeExpandedValueSet_Value = 15
	RelatedArtifactTypeExpandedValueSet_COMMENTS_ON           RelatedArtifactTypeExpandedValueSet_Value = 16
	RelatedArtifactTypeExpandedValueSet_COMMENT_IN            RelatedArtifactTypeExpandedValueSet_Value = 17
	RelatedArtifactTypeExpandedValueSet_CONTAINS              RelatedArtifactTypeExpandedValueSet_Value = 18
	RelatedArtifactTypeExpandedValueSet_CONTAINED_IN          RelatedArtifactTypeExpandedValueSet_Value = 19
	RelatedArtifactTypeExpandedValueSet_CORRECTS              RelatedArtifactTypeExpandedValueSet_Value = 20
	RelatedArtifactTypeExpandedValueSet_CORRECTION_IN         RelatedArtifactTypeExpandedValueSet_Value = 21
	RelatedArtifactTypeExpandedValueSet_REPLACES              RelatedArtifactTypeExpandedValueSet_Value = 22
	RelatedArtifactTypeExpandedValueSet_REPLACED_WITH         RelatedArtifactTypeExpandedValueSet_Value = 23
	RelatedArtifactTypeExpandedValueSet_RETRACTS              RelatedArtifactTypeExpandedValueSet_Value = 24
	RelatedArtifactTypeExpandedValueSet_RETRACTED_BY          RelatedArtifactTypeExpandedValueSet_Value = 25
	RelatedArtifactTypeExpandedValueSet_SIGNS                 RelatedArtifactTypeExpandedValueSet_Value = 26
	RelatedArtifactTypeExpandedValueSet_SIMILAR_TO            RelatedArtifactTypeExpandedValueSet_Value = 27
	RelatedArtifactTypeExpandedValueSet_SUPPORTS              RelatedArtifactTypeExpandedValueSet_Value = 28
	RelatedArtifactTypeExpandedValueSet_SUPPORTED_WITH        RelatedArtifactTypeExpandedValueSet_Value = 29
	RelatedArtifactTypeExpandedValueSet_TRANSFORMS            RelatedArtifactTypeExpandedValueSet_Value = 30
	RelatedArtifactTypeExpandedValueSet_TRANSFORMED_INTO      RelatedArtifactTypeExpandedValueSet_Value = 31
	RelatedArtifactTypeExpandedValueSet_TRANSFORMED_WITH      RelatedArtifactTypeExpandedValueSet_Value = 32
	RelatedArtifactTypeExpandedValueSet_DOCUMENTS             RelatedArtifactTypeExpandedValueSet_Value = 33
	RelatedArtifactTypeExpandedValueSet_SPECIFICATION_OF      RelatedArtifactTypeExpandedValueSet_Value = 34
	RelatedArtifactTypeExpandedValueSet_CREATED_WITH          RelatedArtifactTypeExpandedValueSet_Value = 35
	RelatedArtifactTypeExpandedValueSet_CITE_AS               RelatedArtifactTypeExpandedValueSet_Value = 36
	RelatedArtifactTypeExpandedValueSet_REPRINT               RelatedArtifactTypeExpandedValueSet_Value = 37
	RelatedArtifactTypeExpandedValueSet_REPRINT_OF            RelatedArtifactTypeExpandedValueSet_Value = 38
)

// Enum value maps for RelatedArtifactTypeExpandedValueSet_Value.
var (
	RelatedArtifactTypeExpandedValueSet_Value_name = map[int32]string{
		0:  "INVALID_UNINITIALIZED",
		1:  "DOCUMENTATION",
		2:  "JUSTIFICATION",
		3:  "CITATION",
		4:  "PREDECESSOR",
		5:  "SUCCESSOR",
		6:  "DERIVED_FROM",
		7:  "DEPENDS_ON",
		8:  "COMPOSED_OF",
		9:  "PART_OF",
		10: "AMENDS",
		11: "AMENDED_WITH",
		12: "APPENDS",
		13: "APPENDED_WITH",
		14: "CITES",
		15: "CITED_BY",
		16: "COMMENTS_ON",
		17: "COMMENT_IN",
		18: "CONTAINS",
		19: "CONTAINED_IN",
		20: "CORRECTS",
		21: "CORRECTION_IN",
		22: "REPLACES",
		23: "REPLACED_WITH",
		24: "RETRACTS",
		25: "RETRACTED_BY",
		26: "SIGNS",
		27: "SIMILAR_TO",
		28: "SUPPORTS",
		29: "SUPPORTED_WITH",
		30: "TRANSFORMS",
		31: "TRANSFORMED_INTO",
		32: "TRANSFORMED_WITH",
		33: "DOCUMENTS",
		34: "SPECIFICATION_OF",
		35: "CREATED_WITH",
		36: "CITE_AS",
		37: "REPRINT",
		38: "REPRINT_OF",
	}
	RelatedArtifactTypeExpandedValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"DOCUMENTATION":         1,
		"JUSTIFICATION":         2,
		"CITATION":              3,
		"PREDECESSOR":           4,
		"SUCCESSOR":             5,
		"DERIVED_FROM":          6,
		"DEPENDS_ON":            7,
		"COMPOSED_OF":           8,
		"PART_OF":               9,
		"AMENDS":                10,
		"AMENDED_WITH":          11,
		"APPENDS":               12,
		"APPENDED_WITH":         13,
		"CITES":                 14,
		"CITED_BY":              15,
		"COMMENTS_ON":           16,
		"COMMENT_IN":            17,
		"CONTAINS":              18,
		"CONTAINED_IN":          19,
		"CORRECTS":              20,
		"CORRECTION_IN":         21,
		"REPLACES":              22,
		"REPLACED_WITH":         23,
		"RETRACTS":              24,
		"RETRACTED_BY":          25,
		"SIGNS":                 26,
		"SIMILAR_TO":            27,
		"SUPPORTS":              28,
		"SUPPORTED_WITH":        29,
		"TRANSFORMS":            30,
		"TRANSFORMED_INTO":      31,
		"TRANSFORMED_WITH":      32,
		"DOCUMENTS":             33,
		"SPECIFICATION_OF":      34,
		"CREATED_WITH":          35,
		"CITE_AS":               36,
		"REPRINT":               37,
		"REPRINT_OF":            38,
	}
)

func (x RelatedArtifactTypeExpandedValueSet_Value) Enum() *RelatedArtifactTypeExpandedValueSet_Value {
	p := new(RelatedArtifactTypeExpandedValueSet_Value)
	*p = x
	return p
}

func (x RelatedArtifactTypeExpandedValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelatedArtifactTypeExpandedValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[14].Descriptor()
}

func (RelatedArtifactTypeExpandedValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[14]
}

func (x RelatedArtifactTypeExpandedValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelatedArtifactTypeExpandedValueSet_Value.Descriptor instead.
func (RelatedArtifactTypeExpandedValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{14, 0}
}

type RequestResourceTypesValueSet_Value int32

const (
	RequestResourceTypesValueSet_INVALID_UNINITIALIZED        RequestResourceTypesValueSet_Value = 0
	RequestResourceTypesValueSet_APPOINTMENT                  RequestResourceTypesValueSet_Value = 1
	RequestResourceTypesValueSet_APPOINTMENT_RESPONSE         RequestResourceTypesValueSet_Value = 2
	RequestResourceTypesValueSet_CARE_PLAN                    RequestResourceTypesValueSet_Value = 3
	RequestResourceTypesValueSet_CLAIM                        RequestResourceTypesValueSet_Value = 4
	RequestResourceTypesValueSet_COMMUNICATION_REQUEST        RequestResourceTypesValueSet_Value = 5
	RequestResourceTypesValueSet_COVERAGE_ELIGIBILITY_REQUEST RequestResourceTypesValueSet_Value = 16
	RequestResourceTypesValueSet_DEVICE_REQUEST               RequestResourceTypesValueSet_Value = 7
	RequestResourceTypesValueSet_ENROLLMENT_REQUEST           RequestResourceTypesValueSet_Value = 8
	RequestResourceTypesValueSet_IMMUNIZATION_RECOMMENDATION  RequestResourceTypesValueSet_Value = 9
	RequestResourceTypesValueSet_MEDICATION_REQUEST           RequestResourceTypesValueSet_Value = 10
	RequestResourceTypesValueSet_NUTRITION_ORDER              RequestResourceTypesValueSet_Value = 11
	RequestResourceTypesValueSet_REQUEST_ORCHESTRATION        RequestResourceTypesValueSet_Value = 17
	RequestResourceTypesValueSet_SERVICE_REQUEST              RequestResourceTypesValueSet_Value = 12
	RequestResourceTypesValueSet_SUPPLY_REQUEST               RequestResourceTypesValueSet_Value = 13
	RequestResourceTypesValueSet_TASK                         RequestResourceTypesValueSet_Value = 14
	RequestResourceTypesValueSet_TRANSPORT                    RequestResourceTypesValueSet_Value = 18
	RequestResourceTypesValueSet_VISION_PRESCRIPTION          RequestResourceTypesValueSet_Value = 15
)

// Enum value maps for RequestResourceTypesValueSet_Value.
var (
	RequestResourceTypesValueSet_Value_name = map[int32]string{
		0:  "INVALID_UNINITIALIZED",
		1:  "APPOINTMENT",
		2:  "APPOINTMENT_RESPONSE",
		3:  "CARE_PLAN",
		4:  "CLAIM",
		5:  "COMMUNICATION_REQUEST",
		16: "COVERAGE_ELIGIBILITY_REQUEST",
		7:  "DEVICE_REQUEST",
		8:  "ENROLLMENT_REQUEST",
		9:  "IMMUNIZATION_RECOMMENDATION",
		10: "MEDICATION_REQUEST",
		11: "NUTRITION_ORDER",
		17: "REQUEST_ORCHESTRATION",
		12: "SERVICE_REQUEST",
		13: "SUPPLY_REQUEST",
		14: "TASK",
		18: "TRANSPORT",
		15: "VISION_PRESCRIPTION",
	}
	RequestResourceTypesValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED":        0,
		"APPOINTMENT":                  1,
		"APPOINTMENT_RESPONSE":         2,
		"CARE_PLAN":                    3,
		"CLAIM":                        4,
		"COMMUNICATION_REQUEST":        5,
		"COVERAGE_ELIGIBILITY_REQUEST": 16,
		"DEVICE_REQUEST":               7,
		"ENROLLMENT_REQUEST":           8,
		"IMMUNIZATION_RECOMMENDATION":  9,
		"MEDICATION_REQUEST":           10,
		"NUTRITION_ORDER":              11,
		"REQUEST_ORCHESTRATION":        17,
		"SERVICE_REQUEST":              12,
		"SUPPLY_REQUEST":               13,
		"TASK":                         14,
		"TRANSPORT":                    18,
		"VISION_PRESCRIPTION":          15,
	}
)

func (x RequestResourceTypesValueSet_Value) Enum() *RequestResourceTypesValueSet_Value {
	p := new(RequestResourceTypesValueSet_Value)
	*p = x
	return p
}

func (x RequestResourceTypesValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestResourceTypesValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[15].Descriptor()
}

func (RequestResourceTypesValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[15]
}

func (x RequestResourceTypesValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestResourceTypesValueSet_Value.Descriptor instead.
func (RequestResourceTypesValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{15, 0}
}

type ResourceTypeValueSet_Value int32

const (
	ResourceTypeValueSet_INVALID_UNINITIALIZED                 ResourceTypeValueSet_Value = 0
	ResourceTypeValueSet_ACCOUNT                               ResourceTypeValueSet_Value = 1
	ResourceTypeValueSet_ACTIVITY_DEFINITION                   ResourceTypeValueSet_Value = 2
	ResourceTypeValueSet_ACTOR_DEFINITION                      ResourceTypeValueSet_Value = 149
	ResourceTypeValueSet_ADMINISTRABLE_PRODUCT_DEFINITION      ResourceTypeValueSet_Value = 150
	ResourceTypeValueSet_ADVERSE_EVENT                         ResourceTypeValueSet_Value = 3
	ResourceTypeValueSet_ALLERGY_INTOLERANCE                   ResourceTypeValueSet_Value = 4
	ResourceTypeValueSet_APPOINTMENT                           ResourceTypeValueSet_Value = 5
	ResourceTypeValueSet_APPOINTMENT_RESPONSE                  ResourceTypeValueSet_Value = 6
	ResourceTypeValueSet_ARTIFACT_ASSESSMENT                   ResourceTypeValueSet_Value = 151
	ResourceTypeValueSet_AUDIT_EVENT                           ResourceTypeValueSet_Value = 7
	ResourceTypeValueSet_BASIC                                 ResourceTypeValueSet_Value = 8
	ResourceTypeValueSet_BINARY                                ResourceTypeValueSet_Value = 9
	ResourceTypeValueSet_BIOLOGICALLY_DERIVED_PRODUCT          ResourceTypeValueSet_Value = 10
	ResourceTypeValueSet_BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE ResourceTypeValueSet_Value = 152
	ResourceTypeValueSet_BODY_STRUCTURE                        ResourceTypeValueSet_Value = 11
	ResourceTypeValueSet_BUNDLE                                ResourceTypeValueSet_Value = 12
	ResourceTypeValueSet_CAPABILITY_STATEMENT                  ResourceTypeValueSet_Value = 13
	ResourceTypeValueSet_CARE_PLAN                             ResourceTypeValueSet_Value = 14
	ResourceTypeValueSet_CARE_TEAM                             ResourceTypeValueSet_Value = 15
	ResourceTypeValueSet_CHARGE_ITEM                           ResourceTypeValueSet_Value = 17
	ResourceTypeValueSet_CHARGE_ITEM_DEFINITION                ResourceTypeValueSet_Value = 18
	ResourceTypeValueSet_CITATION                              ResourceTypeValueSet_Value = 153
	ResourceTypeValueSet_CLAIM                                 ResourceTypeValueSet_Value = 19
	ResourceTypeValueSet_CLAIM_RESPONSE                        ResourceTypeValueSet_Value = 20
	ResourceTypeValueSet_CLINICAL_IMPRESSION                   ResourceTypeValueSet_Value = 21
	ResourceTypeValueSet_CLINICAL_USE_DEFINITION               ResourceTypeValueSet_Value = 154
	ResourceTypeValueSet_CODE_SYSTEM                           ResourceTypeValueSet_Value = 22
	ResourceTypeValueSet_COMMUNICATION                         ResourceTypeValueSet_Value = 23
	ResourceTypeValueSet_COMMUNICATION_REQUEST                 ResourceTypeValueSet_Value = 24
	ResourceTypeValueSet_COMPARTMENT_DEFINITION                ResourceTypeValueSet_Value = 25
	ResourceTypeValueSet_COMPOSITION                           ResourceTypeValueSet_Value = 26
	ResourceTypeValueSet_CONCEPT_MAP                           ResourceTypeValueSet_Value = 27
	ResourceTypeValueSet_CONDITION                             ResourceTypeValueSet_Value = 28
	ResourceTypeValueSet_CONDITION_DEFINITION                  ResourceTypeValueSet_Value = 155
	ResourceTypeValueSet_CONSENT                               ResourceTypeValueSet_Value = 29
	ResourceTypeValueSet_CONTRACT                              ResourceTypeValueSet_Value = 30
	ResourceTypeValueSet_COVERAGE                              ResourceTypeValueSet_Value = 31
	ResourceTypeValueSet_COVERAGE_ELIGIBILITY_REQUEST          ResourceTypeValueSet_Value = 32
	ResourceTypeValueSet_COVERAGE_ELIGIBILITY_RESPONSE         ResourceTypeValueSet_Value = 33
	ResourceTypeValueSet_DETECTED_ISSUE                        ResourceTypeValueSet_Value = 34
	ResourceTypeValueSet_DEVICE                                ResourceTypeValueSet_Value = 35
	ResourceTypeValueSet_DEVICE_ASSOCIATION                    ResourceTypeValueSet_Value = 156
	ResourceTypeValueSet_DEVICE_DEFINITION                     ResourceTypeValueSet_Value = 36
	ResourceTypeValueSet_DEVICE_DISPENSE                       ResourceTypeValueSet_Value = 157
	ResourceTypeValueSet_DEVICE_METRIC                         ResourceTypeValueSet_Value = 37
	ResourceTypeValueSet_DEVICE_REQUEST                        ResourceTypeValueSet_Value = 38
	ResourceTypeValueSet_DEVICE_USAGE                          ResourceTypeValueSet_Value = 158
	ResourceTypeValueSet_DIAGNOSTIC_REPORT                     ResourceTypeValueSet_Value = 40
	ResourceTypeValueSet_DOCUMENT_REFERENCE                    ResourceTypeValueSet_Value = 42
	ResourceTypeValueSet_ENCOUNTER                             ResourceTypeValueSet_Value = 45
	ResourceTypeValueSet_ENCOUNTER_HISTORY                     ResourceTypeValueSet_Value = 159
	ResourceTypeValueSet_ENDPOINT                              ResourceTypeValueSet_Value = 46
	ResourceTypeValueSet_ENROLLMENT_REQUEST                    ResourceTypeValueSet_Value = 47
	ResourceTypeValueSet_ENROLLMENT_RESPONSE                   ResourceTypeValueSet_Value = 48
	ResourceTypeValueSet_EPISODE_OF_CARE                       ResourceTypeValueSet_Value = 49
	ResourceTypeValueSet_EVENT_DEFINITION                      ResourceTypeValueSet_Value = 50
	ResourceTypeValueSet_EVIDENCE                              ResourceTypeValueSet_Value = 51
	ResourceTypeValueSet_EVIDENCE_REPORT                       ResourceTypeValueSet_Value = 160
	ResourceTypeValueSet_EVIDENCE_VARIABLE                     ResourceTypeValueSet_Value = 52
	ResourceTypeValueSet_EXAMPLE_SCENARIO                      ResourceTypeValueSet_Value = 53
	ResourceTypeValueSet_EXPLANATION_OF_BENEFIT                ResourceTypeValueSet_Value = 54
	ResourceTypeValueSet_FAMILY_MEMBER_HISTORY                 ResourceTypeValueSet_Value = 55
	ResourceTypeValueSet_FLAG                                  ResourceTypeValueSet_Value = 56
	ResourceTypeValueSet_FORMULARY_ITEM                        ResourceTypeValueSet_Value = 161
	ResourceTypeValueSet_GENOMIC_STUDY                         ResourceTypeValueSet_Value = 162
	ResourceTypeValueSet_GOAL                                  ResourceTypeValueSet_Value = 57
	ResourceTypeValueSet_GRAPH_DEFINITION                      ResourceTypeValueSet_Value = 58
	ResourceTypeValueSet_GROUP                                 ResourceTypeValueSet_Value = 59
	ResourceTypeValueSet_GUIDANCE_RESPONSE                     ResourceTypeValueSet_Value = 60
	ResourceTypeValueSet_HEALTHCARE_SERVICE                    ResourceTypeValueSet_Value = 61
	ResourceTypeValueSet_IMAGING_SELECTION                     ResourceTypeValueSet_Value = 163
	ResourceTypeValueSet_IMAGING_STUDY                         ResourceTypeValueSet_Value = 62
	ResourceTypeValueSet_IMMUNIZATION                          ResourceTypeValueSet_Value = 63
	ResourceTypeValueSet_IMMUNIZATION_EVALUATION               ResourceTypeValueSet_Value = 64
	ResourceTypeValueSet_IMMUNIZATION_RECOMMENDATION           ResourceTypeValueSet_Value = 65
	ResourceTypeValueSet_IMPLEMENTATION_GUIDE                  ResourceTypeValueSet_Value = 66
	ResourceTypeValueSet_INGREDIENT                            ResourceTypeValueSet_Value = 164
	ResourceTypeValueSet_INSURANCE_PLAN                        ResourceTypeValueSet_Value = 67
	ResourceTypeValueSet_INVENTORY_ITEM                        ResourceTypeValueSet_Value = 165
	ResourceTypeValueSet_INVENTORY_REPORT                      ResourceTypeValueSet_Value = 166
	ResourceTypeValueSet_INVOICE                               ResourceTypeValueSet_Value = 68
	ResourceTypeValueSet_LIBRARY                               ResourceTypeValueSet_Value = 69
	ResourceTypeValueSet_LINKAGE                               ResourceTypeValueSet_Value = 70
	ResourceTypeValueSet_LIST                                  ResourceTypeValueSet_Value = 71
	ResourceTypeValueSet_LOCATION                              ResourceTypeValueSet_Value = 72
	ResourceTypeValueSet_MANUFACTURED_ITEM_DEFINITION          ResourceTypeValueSet_Value = 167
	ResourceTypeValueSet_MEASURE                               ResourceTypeValueSet_Value = 73
	ResourceTypeValueSet_MEASURE_REPORT                        ResourceTypeValueSet_Value = 74
	ResourceTypeValueSet_MEDICATION                            ResourceTypeValueSet_Value = 76
	ResourceTypeValueSet_MEDICATION_ADMINISTRATION             ResourceTypeValueSet_Value = 77
	ResourceTypeValueSet_MEDICATION_DISPENSE                   ResourceTypeValueSet_Value = 78
	ResourceTypeValueSet_MEDICATION_KNOWLEDGE                  ResourceTypeValueSet_Value = 79
	ResourceTypeValueSet_MEDICATION_REQUEST                    ResourceTypeValueSet_Value = 80
	ResourceTypeValueSet_MEDICATION_STATEMENT                  ResourceTypeValueSet_Value = 81
	ResourceTypeValueSet_MEDICINAL_PRODUCT_DEFINITION          ResourceTypeValueSet_Value = 168
	ResourceTypeValueSet_MESSAGE_DEFINITION                    ResourceTypeValueSet_Value = 92
	ResourceTypeValueSet_MESSAGE_HEADER                        ResourceTypeValueSet_Value = 93
	ResourceTypeValueSet_MOLECULAR_SEQUENCE                    ResourceTypeValueSet_Value = 94
	ResourceTypeValueSet_NAMING_SYSTEM                         ResourceTypeValueSet_Value = 95
	ResourceTypeValueSet_NUTRITION_INTAKE                      ResourceTypeValueSet_Value = 169
	ResourceTypeValueSet_NUTRITION_ORDER                       ResourceTypeValueSet_Value = 96
	ResourceTypeValueSet_NUTRITION_PRODUCT                     ResourceTypeValueSet_Value = 170
	ResourceTypeValueSet_OBSERVATION                           ResourceTypeValueSet_Value = 97
	ResourceTypeValueSet_OBSERVATION_DEFINITION                ResourceTypeValueSet_Value = 98
	ResourceTypeValueSet_OPERATION_DEFINITION                  ResourceTypeValueSet_Value = 99
	ResourceTypeValueSet_OPERATION_OUTCOME                     ResourceTypeValueSet_Value = 100
	ResourceTypeValueSet_ORGANIZATION                          ResourceTypeValueSet_Value = 101
	ResourceTypeValueSet_ORGANIZATION_AFFILIATION              ResourceTypeValueSet_Value = 102
	ResourceTypeValueSet_PACKAGED_PRODUCT_DEFINITION           ResourceTypeValueSet_Value = 171
	ResourceTypeValueSet_PARAMETERS                            ResourceTypeValueSet_Value = 103
	ResourceTypeValueSet_PATIENT                               ResourceTypeValueSet_Value = 104
	ResourceTypeValueSet_PAYMENT_NOTICE                        ResourceTypeValueSet_Value = 105
	ResourceTypeValueSet_PAYMENT_RECONCILIATION                ResourceTypeValueSet_Value = 106
	ResourceTypeValueSet_PERMISSION                            ResourceTypeValueSet_Value = 172
	ResourceTypeValueSet_PERSON                                ResourceTypeValueSet_Value = 107
	ResourceTypeValueSet_PLAN_DEFINITION                       ResourceTypeValueSet_Value = 108
	ResourceTypeValueSet_PRACTITIONER                          ResourceTypeValueSet_Value = 109
	ResourceTypeValueSet_PRACTITIONER_ROLE                     ResourceTypeValueSet_Value = 110
	ResourceTypeValueSet_PROCEDURE                             ResourceTypeValueSet_Value = 111
	ResourceTypeValueSet_PROVENANCE                            ResourceTypeValueSet_Value = 112
	ResourceTypeValueSet_QUESTIONNAIRE                         ResourceTypeValueSet_Value = 113
	ResourceTypeValueSet_QUESTIONNAIRE_RESPONSE                ResourceTypeValueSet_Value = 114
	ResourceTypeValueSet_REGULATED_AUTHORIZATION               ResourceTypeValueSet_Value = 173
	ResourceTypeValueSet_RELATED_PERSON                        ResourceTypeValueSet_Value = 115
	ResourceTypeValueSet_REQUEST_ORCHESTRATION                 ResourceTypeValueSet_Value = 174
	ResourceTypeValueSet_REQUIREMENTS                          ResourceTypeValueSet_Value = 175
	ResourceTypeValueSet_RESEARCH_STUDY                        ResourceTypeValueSet_Value = 119
	ResourceTypeValueSet_RESEARCH_SUBJECT                      ResourceTypeValueSet_Value = 120
	ResourceTypeValueSet_RISK_ASSESSMENT                       ResourceTypeValueSet_Value = 122
	ResourceTypeValueSet_SCHEDULE                              ResourceTypeValueSet_Value = 124
	ResourceTypeValueSet_SEARCH_PARAMETER                      ResourceTypeValueSet_Value = 125
	ResourceTypeValueSet_SERVICE_REQUEST                       ResourceTypeValueSet_Value = 126
	ResourceTypeValueSet_SLOT                                  ResourceTypeValueSet_Value = 127
	ResourceTypeValueSet_SPECIMEN                              ResourceTypeValueSet_Value = 128
	ResourceTypeValueSet_SPECIMEN_DEFINITION                   ResourceTypeValueSet_Value = 129
	ResourceTypeValueSet_STRUCTURE_DEFINITION                  ResourceTypeValueSet_Value = 130
	ResourceTypeValueSet_STRUCTURE_MAP                         ResourceTypeValueSet_Value = 131
	ResourceTypeValueSet_SUBSCRIPTION                          ResourceTypeValueSet_Value = 132
	ResourceTypeValueSet_SUBSCRIPTION_STATUS                   ResourceTypeValueSet_Value = 176
	ResourceTypeValueSet_SUBSCRIPTION_TOPIC                    ResourceTypeValueSet_Value = 177
	ResourceTypeValueSet_SUBSTANCE                             ResourceTypeValueSet_Value = 133
	ResourceTypeValueSet_SUBSTANCE_DEFINITION                  ResourceTypeValueSet_Value = 178
	ResourceTypeValueSet_SUBSTANCE_NUCLEIC_ACID                ResourceTypeValueSet_Value = 134
	ResourceTypeValueSet_SUBSTANCE_POLYMER                     ResourceTypeValueSet_Value = 135
	ResourceTypeValueSet_SUBSTANCE_PROTEIN                     ResourceTypeValueSet_Value = 136
	ResourceTypeValueSet_SUBSTANCE_REFERENCE_INFORMATION       ResourceTypeValueSet_Value = 137
	ResourceTypeValueSet_SUBSTANCE_SOURCE_MATERIAL             ResourceTypeValueSet_Value = 138
	ResourceTypeValueSet_SUPPLY_DELIVERY                       ResourceTypeValueSet_Value = 140
	ResourceTypeValueSet_SUPPLY_REQUEST                        ResourceTypeValueSet_Value = 141
	ResourceTypeValueSet_TASK                                  ResourceTypeValueSet_Value = 142
	ResourceTypeValueSet_TERMINOLOGY_CAPABILITIES              ResourceTypeValueSet_Value = 143
	ResourceTypeValueSet_TEST_PLAN                             ResourceTypeValueSet_Value = 179
	ResourceTypeValueSet_TEST_REPORT                           ResourceTypeValueSet_Value = 144
	ResourceTypeValueSet_TEST_SCRIPT                           ResourceTypeValueSet_Value = 145
	ResourceTypeValueSet_TRANSPORT                             ResourceTypeValueSet_Value = 180
	ResourceTypeValueSet_VALUE_SET                             ResourceTypeValueSet_Value = 146
	ResourceTypeValueSet_VERIFICATION_RESULT                   ResourceTypeValueSet_Value = 147
	ResourceTypeValueSet_VISION_PRESCRIPTION                   ResourceTypeValueSet_Value = 148
)

// Enum value maps for ResourceTypeValueSet_Value.
var (
	ResourceTypeValueSet_Value_name = map[int32]string{
		0:   "INVALID_UNINITIALIZED",
		1:   "ACCOUNT",
		2:   "ACTIVITY_DEFINITION",
		149: "ACTOR_DEFINITION",
		150: "ADMINISTRABLE_PRODUCT_DEFINITION",
		3:   "ADVERSE_EVENT",
		4:   "ALLERGY_INTOLERANCE",
		5:   "APPOINTMENT",
		6:   "APPOINTMENT_RESPONSE",
		151: "ARTIFACT_ASSESSMENT",
		7:   "AUDIT_EVENT",
		8:   "BASIC",
		9:   "BINARY",
		10:  "BIOLOGICALLY_DERIVED_PRODUCT",
		152: "BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE",
		11:  "BODY_STRUCTURE",
		12:  "BUNDLE",
		13:  "CAPABILITY_STATEMENT",
		14:  "CARE_PLAN",
		15:  "CARE_TEAM",
		17:  "CHARGE_ITEM",
		18:  "CHARGE_ITEM_DEFINITION",
		153: "CITATION",
		19:  "CLAIM",
		20:  "CLAIM_RESPONSE",
		21:  "CLINICAL_IMPRESSION",
		154: "CLINICAL_USE_DEFINITION",
		22:  "CODE_SYSTEM",
		23:  "COMMUNICATION",
		24:  "COMMUNICATION_REQUEST",
		25:  "COMPARTMENT_DEFINITION",
		26:  "COMPOSITION",
		27:  "CONCEPT_MAP",
		28:  "CONDITION",
		155: "CONDITION_DEFINITION",
		29:  "CONSENT",
		30:  "CONTRACT",
		31:  "COVERAGE",
		32:  "COVERAGE_ELIGIBILITY_REQUEST",
		33:  "COVERAGE_ELIGIBILITY_RESPONSE",
		34:  "DETECTED_ISSUE",
		35:  "DEVICE",
		156: "DEVICE_ASSOCIATION",
		36:  "DEVICE_DEFINITION",
		157: "DEVICE_DISPENSE",
		37:  "DEVICE_METRIC",
		38:  "DEVICE_REQUEST",
		158: "DEVICE_USAGE",
		40:  "DIAGNOSTIC_REPORT",
		42:  "DOCUMENT_REFERENCE",
		45:  "ENCOUNTER",
		159: "ENCOUNTER_HISTORY",
		46:  "ENDPOINT",
		47:  "ENROLLMENT_REQUEST",
		48:  "ENROLLMENT_RESPONSE",
		49:  "EPISODE_OF_CARE",
		50:  "EVENT_DEFINITION",
		51:  "EVIDENCE",
		160: "EVIDENCE_REPORT",
		52:  "EVIDENCE_VARIABLE",
		53:  "EXAMPLE_SCENARIO",
		54:  "EXPLANATION_OF_BENEFIT",
		55:  "FAMILY_MEMBER_HISTORY",
		56:  "FLAG",
		161: "FORMULARY_ITEM",
		162: "GENOMIC_STUDY",
		57:  "GOAL",
		58:  "GRAPH_DEFINITION",
		59:  "GROUP",
		60:  "GUIDANCE_RESPONSE",
		61:  "HEALTHCARE_SERVICE",
		163: "IMAGING_SELECTION",
		62:  "IMAGING_STUDY",
		63:  "IMMUNIZATION",
		64:  "IMMUNIZATION_EVALUATION",
		65:  "IMMUNIZATION_RECOMMENDATION",
		66:  "IMPLEMENTATION_GUIDE",
		164: "INGREDIENT",
		67:  "INSURANCE_PLAN",
		165: "INVENTORY_ITEM",
		166: "INVENTORY_REPORT",
		68:  "INVOICE",
		69:  "LIBRARY",
		70:  "LINKAGE",
		71:  "LIST",
		72:  "LOCATION",
		167: "MANUFACTURED_ITEM_DEFINITION",
		73:  "MEASURE",
		74:  "MEASURE_REPORT",
		76:  "MEDICATION",
		77:  "MEDICATION_ADMINISTRATION",
		78:  "MEDICATION_DISPENSE",
		79:  "MEDICATION_KNOWLEDGE",
		80:  "MEDICATION_REQUEST",
		81:  "MEDICATION_STATEMENT",
		168: "MEDICINAL_PRODUCT_DEFINITION",
		92:  "MESSAGE_DEFINITION",
		93:  "MESSAGE_HEADER",
		94:  "MOLECULAR_SEQUENCE",
		95:  "NAMING_SYSTEM",
		169: "NUTRITION_INTAKE",
		96:  "NUTRITION_ORDER",
		170: "NUTRITION_PRODUCT",
		97:  "OBSERVATION",
		98:  "OBSERVATION_DEFINITION",
		99:  "OPERATION_DEFINITION",
		100: "OPERATION_OUTCOME",
		101: "ORGANIZATION",
		102: "ORGANIZATION_AFFILIATION",
		171: "PACKAGED_PRODUCT_DEFINITION",
		103: "PARAMETERS",
		104: "PATIENT",
		105: "PAYMENT_NOTICE",
		106: "PAYMENT_RECONCILIATION",
		172: "PERMISSION",
		107: "PERSON",
		108: "PLAN_DEFINITION",
		109: "PRACTITIONER",
		110: "PRACTITIONER_ROLE",
		111: "PROCEDURE",
		112: "PROVENANCE",
		113: "QUESTIONNAIRE",
		114: "QUESTIONNAIRE_RESPONSE",
		173: "REGULATED_AUTHORIZATION",
		115: "RELATED_PERSON",
		174: "REQUEST_ORCHESTRATION",
		175: "REQUIREMENTS",
		119: "RESEARCH_STUDY",
		120: "RESEARCH_SUBJECT",
		122: "RISK_ASSESSMENT",
		124: "SCHEDULE",
		125: "SEARCH_PARAMETER",
		126: "SERVICE_REQUEST",
		127: "SLOT",
		128: "SPECIMEN",
		129: "SPECIMEN_DEFINITION",
		130: "STRUCTURE_DEFINITION",
		131: "STRUCTURE_MAP",
		132: "SUBSCRIPTION",
		176: "SUBSCRIPTION_STATUS",
		177: "SUBSCRIPTION_TOPIC",
		133: "SUBSTANCE",
		178: "SUBSTANCE_DEFINITION",
		134: "SUBSTANCE_NUCLEIC_ACID",
		135: "SUBSTANCE_POLYMER",
		136: "SUBSTANCE_PROTEIN",
		137: "SUBSTANCE_REFERENCE_INFORMATION",
		138: "SUBSTANCE_SOURCE_MATERIAL",
		140: "SUPPLY_DELIVERY",
		141: "SUPPLY_REQUEST",
		142: "TASK",
		143: "TERMINOLOGY_CAPABILITIES",
		179: "TEST_PLAN",
		144: "TEST_REPORT",
		145: "TEST_SCRIPT",
		180: "TRANSPORT",
		146: "VALUE_SET",
		147: "VERIFICATION_RESULT",
		148: "VISION_PRESCRIPTION",
	}
	ResourceTypeValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED":                 0,
		"ACCOUNT":                               1,
		"ACTIVITY_DEFINITION":                   2,
		"ACTOR_DEFINITION":                      149,
		"ADMINISTRABLE_PRODUCT_DEFINITION":      150,
		"ADVERSE_EVENT":                         3,
		"ALLERGY_INTOLERANCE":                   4,
		"APPOINTMENT":                           5,
		"APPOINTMENT_RESPONSE":                  6,
		"ARTIFACT_ASSESSMENT":                   151,
		"AUDIT_EVENT":                           7,
		"BASIC":                                 8,
		"BINARY":                                9,
		"BIOLOGICALLY_DERIVED_PRODUCT":          10,
		"BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE": 152,
		"BODY_STRUCTURE":                        11,
		"BUNDLE":                                12,
		"CAPABILITY_STATEMENT":                  13,
		"CARE_PLAN":                             14,
		"CARE_TEAM":                             15,
		"CHARGE_ITEM":                           17,
		"CHARGE_ITEM_DEFINITION":                18,
		"CITATION":                              153,
		"CLAIM":                                 19,
		"CLAIM_RESPONSE":                        20,
		"CLINICAL_IMPRESSION":                   21,
		"CLINICAL_USE_DEFINITION":               154,
		"CODE_SYSTEM":                           22,
		"COMMUNICATION":                         23,
		"COMMUNICATION_REQUEST":                 24,
		"COMPARTMENT_DEFINITION":                25,
		"COMPOSITION":                           26,
		"CONCEPT_MAP":                           27,
		"CONDITION":                             28,
		"CONDITION_DEFINITION":                  155,
		"CONSENT":                               29,
		"CONTRACT":                              30,
		"COVERAGE":                              31,
		"COVERAGE_ELIGIBILITY_REQUEST":          32,
		"COVERAGE_ELIGIBILITY_RESPONSE":         33,
		"DETECTED_ISSUE":                        34,
		"DEVICE":                                35,
		"DEVICE_ASSOCIATION":                    156,
		"DEVICE_DEFINITION":                     36,
		"DEVICE_DISPENSE":                       157,
		"DEVICE_METRIC":                         37,
		"DEVICE_REQUEST":                        38,
		"DEVICE_USAGE":                          158,
		"DIAGNOSTIC_REPORT":                     40,
		"DOCUMENT_REFERENCE":                    42,
		"ENCOUNTER":                             45,
		"ENCOUNTER_HISTORY":                     159,
		"ENDPOINT":                              46,
		"ENROLLMENT_REQUEST":                    47,
		"ENROLLMENT_RESPONSE":                   48,
		"EPISODE_OF_CARE":                       49,
		"EVENT_DEFINITION":                      50,
		"EVIDENCE":                              51,
		"EVIDENCE_REPORT":                       160,
		"EVIDENCE_VARIABLE":                     52,
		"EXAMPLE_SCENARIO":                      53,
		"EXPLANATION_OF_BENEFIT":                54,
		"FAMILY_MEMBER_HISTORY":                 55,
		"FLAG":                                  56,
		"FORMULARY_ITEM":                        161,
		"GENOMIC_STUDY":                         162,
		"GOAL":                                  57,
		"GRAPH_DEFINITION":                      58,
		"GROUP":                                 59,
		"GUIDANCE_RESPONSE":                     60,
		"HEALTHCARE_SERVICE":                    61,
		"IMAGING_SELECTION":                     163,
		"IMAGING_STUDY":                         62,
		"IMMUNIZATION":                          63,
		"IMMUNIZATION_EVALUATION":               64,
		"IMMUNIZATION_RECOMMENDATION":           65,
		"IMPLEMENTATION_GUIDE":                  66,
		"INGREDIENT":                            164,
		"INSURANCE_PLAN":                        67,
		"INVENTORY_ITEM":                        165,
		"INVENTORY_REPORT":                      166,
		"INVOICE":                               68,
		"LIBRARY":                               69,
		"LINKAGE":                               70,
		"LIST":                                  71,
		"LOCATION":                              72,
		"MANUFACTURED_ITEM_DEFINITION":          167,
		"MEASURE":                               73,
		"MEASURE_REPORT":                        74,
		"MEDICATION":                            76,
		"MEDICATION_ADMINISTRATION":             77,
		"MEDICATION_DISPENSE":                   78,
		"MEDICATION_KNOWLEDGE":                  79,
		"MEDICATION_REQUEST":                    80,
		"MEDICATION_STATEMENT":                  81,
		"MEDICINAL_PRODUCT_DEFINITION":          168,
		"MESSAGE_DEFINITION":                    92,
		"MESSAGE_HEADER":                        93,
		"MOLECULAR_SEQUENCE":                    94,
		"NAMING_SYSTEM":                         95,
		"NUTRITION_INTAKE":                      169,
		"NUTRITION_ORDER":                       96,
		"NUTRITION_PRODUCT":                     170,
		"OBSERVATION":                           97,
		"OBSERVATION_DEFINITION":                98,
		"OPERATION_DEFINITION":                  99,
		"OPERATION_OUTCOME":                     100,
		"ORGANIZATION":                          101,
		"ORGANIZATION_AFFILIATION":              102,
		"PACKAGED_PRODUCT_DEFINITION":           171,
		"PARAMETERS":                            103,
		"PATIENT":                               104,
		"PAYMENT_NOTICE":                        105,
		"PAYMENT_RECONCILIATION":                106,
		"PERMISSION":                            172,
		"PERSON":                                107,
		"PLAN_DEFINITION":                       108,
		"PRACTITIONER":                          109,
		"PRACTITIONER_ROLE":                     110,
		"PROCEDURE":                             111,
		"PROVENANCE":                            112,
		"QUESTIONNAIRE":                         113,
		"QUESTIONNAIRE_RESPONSE":                114,
		"REGULATED_AUTHORIZATION":               173,
		"RELATED_PERSON":                        115,
		"REQUEST_ORCHESTRATION":                 174,
		"REQUIREMENTS":                          175,
		"RESEARCH_STUDY":                        119,
		"RESEARCH_SUBJECT":                      120,
		"RISK_ASSESSMENT":                       122,
		"SCHEDULE":                              124,
		"SEARCH_PARAMETER":                      125,
		"SERVICE_REQUEST":                       126,
		"SLOT":                                  127,
		"SPECIMEN":                              128,
		"SPECIMEN_DEFINITION":                   129,
		"STRUCTURE_DEFINITION":                  130,
		"STRUCTURE_MAP":                         131,
		"SUBSCRIPTION":                          132,
		"SUBSCRIPTION_STATUS":                   176,
		"SUBSCRIPTION_TOPIC":                    177,
		"SUBSTANCE":                             133,
		"SUBSTANCE_DEFINITION":                  178,
		"SUBSTANCE_NUCLEIC_ACID":                134,
		"SUBSTANCE_POLYMER":                     135,
		"SUBSTANCE_PROTEIN":                     136,
		"SUBSTANCE_REFERENCE_INFORMATION":       137,
		"SUBSTANCE_SOURCE_MATERIAL":             138,
		"SUPPLY_DELIVERY":                       140,
		"SUPPLY_REQUEST":                        141,
		"TASK":                                  142,
		"TERMINOLOGY_CAPABILITIES":              143,
		"TEST_PLAN":                             179,
		"TEST_REPORT":                           144,
		"TEST_SCRIPT":                           145,
		"TRANSPORT":                             180,
		"VALUE_SET":                             146,
		"VERIFICATION_RESULT":                   147,
		"VISION_PRESCRIPTION":                   148,
	}
)

func (x ResourceTypeValueSet_Value) Enum() *ResourceTypeValueSet_Value {
	p := new(ResourceTypeValueSet_Value)
	*p = x
	return p
}

func (x ResourceTypeValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceTypeValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[16].Descriptor()
}

func (ResourceTypeValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[16]
}

func (x ResourceTypeValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceTypeValueSet_Value.Descriptor instead.
func (ResourceTypeValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{16, 0}
}

type SystemRestfulInteractionValueSet_Value int32

const (
	SystemRestfulInteractionValueSet_INVALID_UNINITIALIZED SystemRestfulInteractionValueSet_Value = 0
	SystemRestfulInteractionValueSet_TRANSACTION           SystemRestfulInteractionValueSet_Value = 1
	SystemRestfulInteractionValueSet_BATCH                 SystemRestfulInteractionValueSet_Value = 2
	SystemRestfulInteractionValueSet_SEARCH_SYSTEM         SystemRestfulInteractionValueSet_Value = 3
	SystemRestfulInteractionValueSet_HISTORY_SYSTEM        SystemRestfulInteractionValueSet_Value = 4
)

// Enum value maps for SystemRestfulInteractionValueSet_Value.
var (
	SystemRestfulInteractionValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "TRANSACTION",
		2: "BATCH",
		3: "SEARCH_SYSTEM",
		4: "HISTORY_SYSTEM",
	}
	SystemRestfulInteractionValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"TRANSACTION":           1,
		"BATCH":                 2,
		"SEARCH_SYSTEM":         3,
		"HISTORY_SYSTEM":        4,
	}
)

func (x SystemRestfulInteractionValueSet_Value) Enum() *SystemRestfulInteractionValueSet_Value {
	p := new(SystemRestfulInteractionValueSet_Value)
	*p = x
	return p
}

func (x SystemRestfulInteractionValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemRestfulInteractionValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[17].Descriptor()
}

func (SystemRestfulInteractionValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[17]
}

func (x SystemRestfulInteractionValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemRestfulInteractionValueSet_Value.Descriptor instead.
func (SystemRestfulInteractionValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{17, 0}
}

type TaskIntentValueSet_Value int32

const (
	TaskIntentValueSet_INVALID_UNINITIALIZED TaskIntentValueSet_Value = 0
	TaskIntentValueSet_UNKNOWN               TaskIntentValueSet_Value = 1
	TaskIntentValueSet_PROPOSAL              TaskIntentValueSet_Value = 2
	TaskIntentValueSet_PLAN                  TaskIntentValueSet_Value = 3
	TaskIntentValueSet_ORDER                 TaskIntentValueSet_Value = 4
	TaskIntentValueSet_ORIGINAL_ORDER        TaskIntentValueSet_Value = 5
	TaskIntentValueSet_REFLEX_ORDER          TaskIntentValueSet_Value = 6
	TaskIntentValueSet_FILLER_ORDER          TaskIntentValueSet_Value = 7
	TaskIntentValueSet_INSTANCE_ORDER        TaskIntentValueSet_Value = 8
	TaskIntentValueSet_OPTION                TaskIntentValueSet_Value = 9
)

// Enum value maps for TaskIntentValueSet_Value.
var (
	TaskIntentValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "UNKNOWN",
		2: "PROPOSAL",
		3: "PLAN",
		4: "ORDER",
		5: "ORIGINAL_ORDER",
		6: "REFLEX_ORDER",
		7: "FILLER_ORDER",
		8: "INSTANCE_ORDER",
		9: "OPTION",
	}
	TaskIntentValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"UNKNOWN":               1,
		"PROPOSAL":              2,
		"PLAN":                  3,
		"ORDER":                 4,
		"ORIGINAL_ORDER":        5,
		"REFLEX_ORDER":          6,
		"FILLER_ORDER":          7,
		"INSTANCE_ORDER":        8,
		"OPTION":                9,
	}
)

func (x TaskIntentValueSet_Value) Enum() *TaskIntentValueSet_Value {
	p := new(TaskIntentValueSet_Value)
	*p = x
	return p
}

func (x TaskIntentValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskIntentValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[18].Descriptor()
}

func (TaskIntentValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[18]
}

func (x TaskIntentValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskIntentValueSet_Value.Descriptor instead.
func (TaskIntentValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{18, 0}
}

type TransportIntentValueSet_Value int32

const (
	TransportIntentValueSet_INVALID_UNINITIALIZED TransportIntentValueSet_Value = 0
	TransportIntentValueSet_UNKNOWN               TransportIntentValueSet_Value = 1
	TransportIntentValueSet_PROPOSAL              TransportIntentValueSet_Value = 2
	TransportIntentValueSet_PLAN                  TransportIntentValueSet_Value = 3
	TransportIntentValueSet_ORDER                 TransportIntentValueSet_Value = 4
	TransportIntentValueSet_ORIGINAL_ORDER        TransportIntentValueSet_Value = 5
	TransportIntentValueSet_REFLEX_ORDER          TransportIntentValueSet_Value = 6
	TransportIntentValueSet_FILLER_ORDER          TransportIntentValueSet_Value = 7
	TransportIntentValueSet_INSTANCE_ORDER        TransportIntentValueSet_Value = 8
	TransportIntentValueSet_OPTION                TransportIntentValueSet_Value = 9
)

// Enum value maps for TransportIntentValueSet_Value.
var (
	TransportIntentValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "UNKNOWN",
		2: "PROPOSAL",
		3: "PLAN",
		4: "ORDER",
		5: "ORIGINAL_ORDER",
		6: "REFLEX_ORDER",
		7: "FILLER_ORDER",
		8: "INSTANCE_ORDER",
		9: "OPTION",
	}
	TransportIntentValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"UNKNOWN":               1,
		"PROPOSAL":              2,
		"PLAN":                  3,
		"ORDER":                 4,
		"ORIGINAL_ORDER":        5,
		"REFLEX_ORDER":          6,
		"FILLER_ORDER":          7,
		"INSTANCE_ORDER":        8,
		"OPTION":                9,
	}
)

func (x TransportIntentValueSet_Value) Enum() *TransportIntentValueSet_Value {
	p := new(TransportIntentValueSet_Value)
	*p = x
	return p
}

func (x TransportIntentValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransportIntentValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[19].Descriptor()
}

func (TransportIntentValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[19]
}

func (x TransportIntentValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransportIntentValueSet_Value.Descriptor instead.
func (TransportIntentValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{19, 0}
}

type TypeRestfulInteractionValueSet_Value int32

const (
	TypeRestfulInteractionValueSet_INVALID_UNINITIALIZED TypeRestfulInteractionValueSet_Value = 0
	TypeRestfulInteractionValueSet_READ                  TypeRestfulInteractionValueSet_Value = 1
	TypeRestfulInteractionValueSet_VREAD                 TypeRestfulInteractionValueSet_Value = 2
	TypeRestfulInteractionValueSet_UPDATE                TypeRestfulInteractionValueSet_Value = 3
	TypeRestfulInteractionValueSet_PATCH                 TypeRestfulInteractionValueSet_Value = 4
	TypeRestfulInteractionValueSet_DELETE                TypeRestfulInteractionValueSet_Value = 5
	TypeRestfulInteractionValueSet_HISTORY_INSTANCE      TypeRestfulInteractionValueSet_Value = 6
	TypeRestfulInteractionValueSet_HISTORY_TYPE          TypeRestfulInteractionValueSet_Value = 7
	TypeRestfulInteractionValueSet_CREATE                TypeRestfulInteractionValueSet_Value = 8
	TypeRestfulInteractionValueSet_SEARCH_TYPE           TypeRestfulInteractionValueSet_Value = 9
)

// Enum value maps for TypeRestfulInteractionValueSet_Value.
var (
	TypeRestfulInteractionValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "READ",
		2: "VREAD",
		3: "UPDATE",
		4: "PATCH",
		5: "DELETE",
		6: "HISTORY_INSTANCE",
		7: "HISTORY_TYPE",
		8: "CREATE",
		9: "SEARCH_TYPE",
	}
	TypeRestfulInteractionValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"READ":                  1,
		"VREAD":                 2,
		"UPDATE":                3,
		"PATCH":                 4,
		"DELETE":                5,
		"HISTORY_INSTANCE":      6,
		"HISTORY_TYPE":          7,
		"CREATE":                8,
		"SEARCH_TYPE":           9,
	}
)

func (x TypeRestfulInteractionValueSet_Value) Enum() *TypeRestfulInteractionValueSet_Value {
	p := new(TypeRestfulInteractionValueSet_Value)
	*p = x
	return p
}

func (x TypeRestfulInteractionValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeRestfulInteractionValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[20].Descriptor()
}

func (TypeRestfulInteractionValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[20]
}

func (x TypeRestfulInteractionValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeRestfulInteractionValueSet_Value.Descriptor instead.
func (TypeRestfulInteractionValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{20, 0}
}

type UnitsOfTimeValueSet_Value int32

const (
	UnitsOfTimeValueSet_INVALID_UNINITIALIZED UnitsOfTimeValueSet_Value = 0
	UnitsOfTimeValueSet_S                     UnitsOfTimeValueSet_Value = 1
	UnitsOfTimeValueSet_MIN                   UnitsOfTimeValueSet_Value = 2
	UnitsOfTimeValueSet_H                     UnitsOfTimeValueSet_Value = 3
	UnitsOfTimeValueSet_D                     UnitsOfTimeValueSet_Value = 4
	UnitsOfTimeValueSet_WK                    UnitsOfTimeValueSet_Value = 5
	UnitsOfTimeValueSet_MO                    UnitsOfTimeValueSet_Value = 6
	UnitsOfTimeValueSet_A                     UnitsOfTimeValueSet_Value = 7
)

// Enum value maps for UnitsOfTimeValueSet_Value.
var (
	UnitsOfTimeValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "S",
		2: "MIN",
		3: "H",
		4: "D",
		5: "WK",
		6: "MO",
		7: "A",
	}
	UnitsOfTimeValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"S":                     1,
		"MIN":                   2,
		"H":                     3,
		"D":                     4,
		"WK":                    5,
		"MO":                    6,
		"A":                     7,
	}
)

func (x UnitsOfTimeValueSet_Value) Enum() *UnitsOfTimeValueSet_Value {
	p := new(UnitsOfTimeValueSet_Value)
	*p = x
	return p
}

func (x UnitsOfTimeValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitsOfTimeValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[21].Descriptor()
}

func (UnitsOfTimeValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[21]
}

func (x UnitsOfTimeValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitsOfTimeValueSet_Value.Descriptor instead.
func (UnitsOfTimeValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{21, 0}
}

type ValueFilterComparatorValueSet_Value int32

const (
	ValueFilterComparatorValueSet_INVALID_UNINITIALIZED ValueFilterComparatorValueSet_Value = 0
	ValueFilterComparatorValueSet_EQ                    ValueFilterComparatorValueSet_Value = 1
	ValueFilterComparatorValueSet_GT                    ValueFilterComparatorValueSet_Value = 2
	ValueFilterComparatorValueSet_LT                    ValueFilterComparatorValueSet_Value = 3
	ValueFilterComparatorValueSet_GE                    ValueFilterComparatorValueSet_Value = 4
	ValueFilterComparatorValueSet_LE                    ValueFilterComparatorValueSet_Value = 5
	ValueFilterComparatorValueSet_SA                    ValueFilterComparatorValueSet_Value = 6
	ValueFilterComparatorValueSet_EB                    ValueFilterComparatorValueSet_Value = 7
)

// Enum value maps for ValueFilterComparatorValueSet_Value.
var (
	ValueFilterComparatorValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "EQ",
		2: "GT",
		3: "LT",
		4: "GE",
		5: "LE",
		6: "SA",
		7: "EB",
	}
	ValueFilterComparatorValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"EQ":                    1,
		"GT":                    2,
		"LT":                    3,
		"GE":                    4,
		"LE":                    5,
		"SA":                    6,
		"EB":                    7,
	}
)

func (x ValueFilterComparatorValueSet_Value) Enum() *ValueFilterComparatorValueSet_Value {
	p := new(ValueFilterComparatorValueSet_Value)
	*p = x
	return p
}

func (x ValueFilterComparatorValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueFilterComparatorValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[22].Descriptor()
}

func (ValueFilterComparatorValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[22]
}

func (x ValueFilterComparatorValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueFilterComparatorValueSet_Value.Descriptor instead.
func (ValueFilterComparatorValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{22, 0}
}

type VersionIndependentResourceTypesAllValueSet_Value int32

const (
	VersionIndependentResourceTypesAllValueSet_INVALID_UNINITIALIZED                 VersionIndependentResourceTypesAllValueSet_Value = 0
	VersionIndependentResourceTypesAllValueSet_ACCOUNT                               VersionIndependentResourceTypesAllValueSet_Value = 1
	VersionIndependentResourceTypesAllValueSet_ACTIVITY_DEFINITION                   VersionIndependentResourceTypesAllValueSet_Value = 2
	VersionIndependentResourceTypesAllValueSet_ACTOR_DEFINITION                      VersionIndependentResourceTypesAllValueSet_Value = 3
	VersionIndependentResourceTypesAllValueSet_ADMINISTRABLE_PRODUCT_DEFINITION      VersionIndependentResourceTypesAllValueSet_Value = 4
	VersionIndependentResourceTypesAllValueSet_ADVERSE_EVENT                         VersionIndependentResourceTypesAllValueSet_Value = 5
	VersionIndependentResourceTypesAllValueSet_ALLERGY_INTOLERANCE                   VersionIndependentResourceTypesAllValueSet_Value = 6
	VersionIndependentResourceTypesAllValueSet_APPOINTMENT                           VersionIndependentResourceTypesAllValueSet_Value = 7
	VersionIndependentResourceTypesAllValueSet_APPOINTMENT_RESPONSE                  VersionIndependentResourceTypesAllValueSet_Value = 8
	VersionIndependentResourceTypesAllValueSet_ARTIFACT_ASSESSMENT                   VersionIndependentResourceTypesAllValueSet_Value = 9
	VersionIndependentResourceTypesAllValueSet_AUDIT_EVENT                           VersionIndependentResourceTypesAllValueSet_Value = 10
	VersionIndependentResourceTypesAllValueSet_BASIC                                 VersionIndependentResourceTypesAllValueSet_Value = 11
	VersionIndependentResourceTypesAllValueSet_BINARY                                VersionIndependentResourceTypesAllValueSet_Value = 12
	VersionIndependentResourceTypesAllValueSet_BIOLOGICALLY_DERIVED_PRODUCT          VersionIndependentResourceTypesAllValueSet_Value = 13
	VersionIndependentResourceTypesAllValueSet_BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE VersionIndependentResourceTypesAllValueSet_Value = 14
	VersionIndependentResourceTypesAllValueSet_BODY_STRUCTURE                        VersionIndependentResourceTypesAllValueSet_Value = 15
	VersionIndependentResourceTypesAllValueSet_BUNDLE                                VersionIndependentResourceTypesAllValueSet_Value = 16
	VersionIndependentResourceTypesAllValueSet_CANONICAL_RESOURCE                    VersionIndependentResourceTypesAllValueSet_Value = 17
	VersionIndependentResourceTypesAllValueSet_CAPABILITY_STATEMENT                  VersionIndependentResourceTypesAllValueSet_Value = 18
	VersionIndependentResourceTypesAllValueSet_CARE_PLAN                             VersionIndependentResourceTypesAllValueSet_Value = 19
	VersionIndependentResourceTypesAllValueSet_CARE_TEAM                             VersionIndependentResourceTypesAllValueSet_Value = 20
	VersionIndependentResourceTypesAllValueSet_CHARGE_ITEM                           VersionIndependentResourceTypesAllValueSet_Value = 21
	VersionIndependentResourceTypesAllValueSet_CHARGE_ITEM_DEFINITION                VersionIndependentResourceTypesAllValueSet_Value = 22
	VersionIndependentResourceTypesAllValueSet_CITATION                              VersionIndependentResourceTypesAllValueSet_Value = 23
	VersionIndependentResourceTypesAllValueSet_CLAIM                                 VersionIndependentResourceTypesAllValueSet_Value = 24
	VersionIndependentResourceTypesAllValueSet_CLAIM_RESPONSE                        VersionIndependentResourceTypesAllValueSet_Value = 25
	VersionIndependentResourceTypesAllValueSet_CLINICAL_IMPRESSION                   VersionIndependentResourceTypesAllValueSet_Value = 26
	VersionIndependentResourceTypesAllValueSet_CLINICAL_USE_DEFINITION               VersionIndependentResourceTypesAllValueSet_Value = 27
	VersionIndependentResourceTypesAllValueSet_CODE_SYSTEM                           VersionIndependentResourceTypesAllValueSet_Value = 28
	VersionIndependentResourceTypesAllValueSet_COMMUNICATION                         VersionIndependentResourceTypesAllValueSet_Value = 29
	VersionIndependentResourceTypesAllValueSet_COMMUNICATION_REQUEST                 VersionIndependentResourceTypesAllValueSet_Value = 30
	VersionIndependentResourceTypesAllValueSet_COMPARTMENT_DEFINITION                VersionIndependentResourceTypesAllValueSet_Value = 31
	VersionIndependentResourceTypesAllValueSet_COMPOSITION                           VersionIndependentResourceTypesAllValueSet_Value = 32
	VersionIndependentResourceTypesAllValueSet_CONCEPT_MAP                           VersionIndependentResourceTypesAllValueSet_Value = 33
	VersionIndependentResourceTypesAllValueSet_CONDITION                             VersionIndependentResourceTypesAllValueSet_Value = 34
	VersionIndependentResourceTypesAllValueSet_CONDITION_DEFINITION                  VersionIndependentResourceTypesAllValueSet_Value = 35
	VersionIndependentResourceTypesAllValueSet_CONSENT                               VersionIndependentResourceTypesAllValueSet_Value = 36
	VersionIndependentResourceTypesAllValueSet_CONTRACT                              VersionIndependentResourceTypesAllValueSet_Value = 37
	VersionIndependentResourceTypesAllValueSet_COVERAGE                              VersionIndependentResourceTypesAllValueSet_Value = 38
	VersionIndependentResourceTypesAllValueSet_COVERAGE_ELIGIBILITY_REQUEST          VersionIndependentResourceTypesAllValueSet_Value = 39
	VersionIndependentResourceTypesAllValueSet_COVERAGE_ELIGIBILITY_RESPONSE         VersionIndependentResourceTypesAllValueSet_Value = 40
	VersionIndependentResourceTypesAllValueSet_DETECTED_ISSUE                        VersionIndependentResourceTypesAllValueSet_Value = 41
	VersionIndependentResourceTypesAllValueSet_DEVICE                                VersionIndependentResourceTypesAllValueSet_Value = 42
	VersionIndependentResourceTypesAllValueSet_DEVICE_ASSOCIATION                    VersionIndependentResourceTypesAllValueSet_Value = 43
	VersionIndependentResourceTypesAllValueSet_DEVICE_DEFINITION                     VersionIndependentResourceTypesAllValueSet_Value = 44
	VersionIndependentResourceTypesAllValueSet_DEVICE_DISPENSE                       VersionIndependentResourceTypesAllValueSet_Value = 45
	VersionIndependentResourceTypesAllValueSet_DEVICE_METRIC                         VersionIndependentResourceTypesAllValueSet_Value = 46
	VersionIndependentResourceTypesAllValueSet_DEVICE_REQUEST                        VersionIndependentResourceTypesAllValueSet_Value = 47
	VersionIndependentResourceTypesAllValueSet_DEVICE_USAGE                          VersionIndependentResourceTypesAllValueSet_Value = 48
	VersionIndependentResourceTypesAllValueSet_DIAGNOSTIC_REPORT                     VersionIndependentResourceTypesAllValueSet_Value = 49
	VersionIndependentResourceTypesAllValueSet_DOCUMENT_REFERENCE                    VersionIndependentResourceTypesAllValueSet_Value = 50
	VersionIndependentResourceTypesAllValueSet_DOMAIN_RESOURCE                       VersionIndependentResourceTypesAllValueSet_Value = 51
	VersionIndependentResourceTypesAllValueSet_ENCOUNTER                             VersionIndependentResourceTypesAllValueSet_Value = 52
	VersionIndependentResourceTypesAllValueSet_ENCOUNTER_HISTORY                     VersionIndependentResourceTypesAllValueSet_Value = 53
	VersionIndependentResourceTypesAllValueSet_ENDPOINT                              VersionIndependentResourceTypesAllValueSet_Value = 54
	VersionIndependentResourceTypesAllValueSet_ENROLLMENT_REQUEST                    VersionIndependentResourceTypesAllValueSet_Value = 55
	VersionIndependentResourceTypesAllValueSet_ENROLLMENT_RESPONSE                   VersionIndependentResourceTypesAllValueSet_Value = 56
	VersionIndependentResourceTypesAllValueSet_EPISODE_OF_CARE                       VersionIndependentResourceTypesAllValueSet_Value = 57
	VersionIndependentResourceTypesAllValueSet_EVENT_DEFINITION                      VersionIndependentResourceTypesAllValueSet_Value = 58
	VersionIndependentResourceTypesAllValueSet_EVIDENCE                              VersionIndependentResourceTypesAllValueSet_Value = 59
	VersionIndependentResourceTypesAllValueSet_EVIDENCE_REPORT                       VersionIndependentResourceTypesAllValueSet_Value = 60
	VersionIndependentResourceTypesAllValueSet_EVIDENCE_VARIABLE                     VersionIndependentResourceTypesAllValueSet_Value = 61
	VersionIndependentResourceTypesAllValueSet_EXAMPLE_SCENARIO                      VersionIndependentResourceTypesAllValueSet_Value = 62
	VersionIndependentResourceTypesAllValueSet_EXPLANATION_OF_BENEFIT                VersionIndependentResourceTypesAllValueSet_Value = 63
	VersionIndependentResourceTypesAllValueSet_FAMILY_MEMBER_HISTORY                 VersionIndependentResourceTypesAllValueSet_Value = 64
	VersionIndependentResourceTypesAllValueSet_FLAG                                  VersionIndependentResourceTypesAllValueSet_Value = 65
	VersionIndependentResourceTypesAllValueSet_FORMULARY_ITEM                        VersionIndependentResourceTypesAllValueSet_Value = 66
	VersionIndependentResourceTypesAllValueSet_GENOMIC_STUDY                         VersionIndependentResourceTypesAllValueSet_Value = 67
	VersionIndependentResourceTypesAllValueSet_GOAL                                  VersionIndependentResourceTypesAllValueSet_Value = 68
	VersionIndependentResourceTypesAllValueSet_GRAPH_DEFINITION                      VersionIndependentResourceTypesAllValueSet_Value = 69
	VersionIndependentResourceTypesAllValueSet_GROUP                                 VersionIndependentResourceTypesAllValueSet_Value = 70
	VersionIndependentResourceTypesAllValueSet_GUIDANCE_RESPONSE                     VersionIndependentResourceTypesAllValueSet_Value = 71
	VersionIndependentResourceTypesAllValueSet_HEALTHCARE_SERVICE                    VersionIndependentResourceTypesAllValueSet_Value = 72
	VersionIndependentResourceTypesAllValueSet_IMAGING_SELECTION                     VersionIndependentResourceTypesAllValueSet_Value = 73
	VersionIndependentResourceTypesAllValueSet_IMAGING_STUDY                         VersionIndependentResourceTypesAllValueSet_Value = 74
	VersionIndependentResourceTypesAllValueSet_IMMUNIZATION                          VersionIndependentResourceTypesAllValueSet_Value = 75
	VersionIndependentResourceTypesAllValueSet_IMMUNIZATION_EVALUATION               VersionIndependentResourceTypesAllValueSet_Value = 76
	VersionIndependentResourceTypesAllValueSet_IMMUNIZATION_RECOMMENDATION           VersionIndependentResourceTypesAllValueSet_Value = 77
	VersionIndependentResourceTypesAllValueSet_IMPLEMENTATION_GUIDE                  VersionIndependentResourceTypesAllValueSet_Value = 78
	VersionIndependentResourceTypesAllValueSet_INGREDIENT                            VersionIndependentResourceTypesAllValueSet_Value = 79
	VersionIndependentResourceTypesAllValueSet_INSURANCE_PLAN                        VersionIndependentResourceTypesAllValueSet_Value = 80
	VersionIndependentResourceTypesAllValueSet_INVENTORY_ITEM                        VersionIndependentResourceTypesAllValueSet_Value = 81
	VersionIndependentResourceTypesAllValueSet_INVENTORY_REPORT                      VersionIndependentResourceTypesAllValueSet_Value = 82
	VersionIndependentResourceTypesAllValueSet_INVOICE                               VersionIndependentResourceTypesAllValueSet_Value = 83
	VersionIndependentResourceTypesAllValueSet_LIBRARY                               VersionIndependentResourceTypesAllValueSet_Value = 84
	VersionIndependentResourceTypesAllValueSet_LINKAGE                               VersionIndependentResourceTypesAllValueSet_Value = 85
	VersionIndependentResourceTypesAllValueSet_LIST                                  VersionIndependentResourceTypesAllValueSet_Value = 86
	VersionIndependentResourceTypesAllValueSet_LOCATION                              VersionIndependentResourceTypesAllValueSet_Value = 87
	VersionIndependentResourceTypesAllValueSet_MANUFACTURED_ITEM_DEFINITION          VersionIndependentResourceTypesAllValueSet_Value = 88
	VersionIndependentResourceTypesAllValueSet_MEASURE                               VersionIndependentResourceTypesAllValueSet_Value = 89
	VersionIndependentResourceTypesAllValueSet_MEASURE_REPORT                        VersionIndependentResourceTypesAllValueSet_Value = 90
	VersionIndependentResourceTypesAllValueSet_MEDICATION                            VersionIndependentResourceTypesAllValueSet_Value = 91
	VersionIndependentResourceTypesAllValueSet_MEDICATION_ADMINISTRATION             VersionIndependentResourceTypesAllValueSet_Value = 92
	VersionIndependentResourceTypesAllValueSet_MEDICATION_DISPENSE                   VersionIndependentResourceTypesAllValueSet_Value = 93
	VersionIndependentResourceTypesAllValueSet_MEDICATION_KNOWLEDGE                  VersionIndependentResourceTypesAllValueSet_Value = 94
	VersionIndependentResourceTypesAllValueSet_MEDICATION_REQUEST                    VersionIndependentResourceTypesAllValueSet_Value = 95
	VersionIndependentResourceTypesAllValueSet_MEDICATION_STATEMENT                  VersionIndependentResourceTypesAllValueSet_Value = 96
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_DEFINITION          VersionIndependentResourceTypesAllValueSet_Value = 97
	VersionIndependentResourceTypesAllValueSet_MESSAGE_DEFINITION                    VersionIndependentResourceTypesAllValueSet_Value = 98
	VersionIndependentResourceTypesAllValueSet_MESSAGE_HEADER                        VersionIndependentResourceTypesAllValueSet_Value = 99
	VersionIndependentResourceTypesAllValueSet_METADATA_RESOURCE                     VersionIndependentResourceTypesAllValueSet_Value = 100
	VersionIndependentResourceTypesAllValueSet_MOLECULAR_SEQUENCE                    VersionIndependentResourceTypesAllValueSet_Value = 101
	VersionIndependentResourceTypesAllValueSet_NAMING_SYSTEM                         VersionIndependentResourceTypesAllValueSet_Value = 102
	VersionIndependentResourceTypesAllValueSet_NUTRITION_INTAKE                      VersionIndependentResourceTypesAllValueSet_Value = 103
	VersionIndependentResourceTypesAllValueSet_NUTRITION_ORDER                       VersionIndependentResourceTypesAllValueSet_Value = 104
	VersionIndependentResourceTypesAllValueSet_NUTRITION_PRODUCT                     VersionIndependentResourceTypesAllValueSet_Value = 105
	VersionIndependentResourceTypesAllValueSet_OBSERVATION                           VersionIndependentResourceTypesAllValueSet_Value = 106
	VersionIndependentResourceTypesAllValueSet_OBSERVATION_DEFINITION                VersionIndependentResourceTypesAllValueSet_Value = 107
	VersionIndependentResourceTypesAllValueSet_OPERATION_DEFINITION                  VersionIndependentResourceTypesAllValueSet_Value = 108
	VersionIndependentResourceTypesAllValueSet_OPERATION_OUTCOME                     VersionIndependentResourceTypesAllValueSet_Value = 109
	VersionIndependentResourceTypesAllValueSet_ORGANIZATION                          VersionIndependentResourceTypesAllValueSet_Value = 110
	VersionIndependentResourceTypesAllValueSet_ORGANIZATION_AFFILIATION              VersionIndependentResourceTypesAllValueSet_Value = 111
	VersionIndependentResourceTypesAllValueSet_PACKAGED_PRODUCT_DEFINITION           VersionIndependentResourceTypesAllValueSet_Value = 112
	VersionIndependentResourceTypesAllValueSet_PARAMETERS                            VersionIndependentResourceTypesAllValueSet_Value = 113
	VersionIndependentResourceTypesAllValueSet_PATIENT                               VersionIndependentResourceTypesAllValueSet_Value = 114
	VersionIndependentResourceTypesAllValueSet_PAYMENT_NOTICE                        VersionIndependentResourceTypesAllValueSet_Value = 115
	VersionIndependentResourceTypesAllValueSet_PAYMENT_RECONCILIATION                VersionIndependentResourceTypesAllValueSet_Value = 116
	VersionIndependentResourceTypesAllValueSet_PERMISSION                            VersionIndependentResourceTypesAllValueSet_Value = 117
	VersionIndependentResourceTypesAllValueSet_PERSON                                VersionIndependentResourceTypesAllValueSet_Value = 118
	VersionIndependentResourceTypesAllValueSet_PLAN_DEFINITION                       VersionIndependentResourceTypesAllValueSet_Value = 119
	VersionIndependentResourceTypesAllValueSet_PRACTITIONER                          VersionIndependentResourceTypesAllValueSet_Value = 120
	VersionIndependentResourceTypesAllValueSet_PRACTITIONER_ROLE                     VersionIndependentResourceTypesAllValueSet_Value = 121
	VersionIndependentResourceTypesAllValueSet_PROCEDURE                             VersionIndependentResourceTypesAllValueSet_Value = 122
	VersionIndependentResourceTypesAllValueSet_PROVENANCE                            VersionIndependentResourceTypesAllValueSet_Value = 123
	VersionIndependentResourceTypesAllValueSet_QUESTIONNAIRE                         VersionIndependentResourceTypesAllValueSet_Value = 124
	VersionIndependentResourceTypesAllValueSet_QUESTIONNAIRE_RESPONSE                VersionIndependentResourceTypesAllValueSet_Value = 125
	VersionIndependentResourceTypesAllValueSet_REGULATED_AUTHORIZATION               VersionIndependentResourceTypesAllValueSet_Value = 126
	VersionIndependentResourceTypesAllValueSet_RELATED_PERSON                        VersionIndependentResourceTypesAllValueSet_Value = 127
	VersionIndependentResourceTypesAllValueSet_REQUEST_ORCHESTRATION                 VersionIndependentResourceTypesAllValueSet_Value = 128
	VersionIndependentResourceTypesAllValueSet_REQUIREMENTS                          VersionIndependentResourceTypesAllValueSet_Value = 129
	VersionIndependentResourceTypesAllValueSet_RESEARCH_STUDY                        VersionIndependentResourceTypesAllValueSet_Value = 130
	VersionIndependentResourceTypesAllValueSet_RESEARCH_SUBJECT                      VersionIndependentResourceTypesAllValueSet_Value = 131
	VersionIndependentResourceTypesAllValueSet_RESOURCE                              VersionIndependentResourceTypesAllValueSet_Value = 132
	VersionIndependentResourceTypesAllValueSet_RISK_ASSESSMENT                       VersionIndependentResourceTypesAllValueSet_Value = 133
	VersionIndependentResourceTypesAllValueSet_SCHEDULE                              VersionIndependentResourceTypesAllValueSet_Value = 134
	VersionIndependentResourceTypesAllValueSet_SEARCH_PARAMETER                      VersionIndependentResourceTypesAllValueSet_Value = 135
	VersionIndependentResourceTypesAllValueSet_SERVICE_REQUEST                       VersionIndependentResourceTypesAllValueSet_Value = 136
	VersionIndependentResourceTypesAllValueSet_SLOT                                  VersionIndependentResourceTypesAllValueSet_Value = 137
	VersionIndependentResourceTypesAllValueSet_SPECIMEN                              VersionIndependentResourceTypesAllValueSet_Value = 138
	VersionIndependentResourceTypesAllValueSet_SPECIMEN_DEFINITION                   VersionIndependentResourceTypesAllValueSet_Value = 139
	VersionIndependentResourceTypesAllValueSet_STRUCTURE_DEFINITION                  VersionIndependentResourceTypesAllValueSet_Value = 140
	VersionIndependentResourceTypesAllValueSet_STRUCTURE_MAP                         VersionIndependentResourceTypesAllValueSet_Value = 141
	VersionIndependentResourceTypesAllValueSet_SUBSCRIPTION                          VersionIndependentResourceTypesAllValueSet_Value = 142
	VersionIndependentResourceTypesAllValueSet_SUBSCRIPTION_STATUS                   VersionIndependentResourceTypesAllValueSet_Value = 143
	VersionIndependentResourceTypesAllValueSet_SUBSCRIPTION_TOPIC                    VersionIndependentResourceTypesAllValueSet_Value = 144
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE                             VersionIndependentResourceTypesAllValueSet_Value = 145
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_DEFINITION                  VersionIndependentResourceTypesAllValueSet_Value = 146
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_NUCLEIC_ACID                VersionIndependentResourceTypesAllValueSet_Value = 147
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_POLYMER                     VersionIndependentResourceTypesAllValueSet_Value = 148
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_PROTEIN                     VersionIndependentResourceTypesAllValueSet_Value = 149
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_REFERENCE_INFORMATION       VersionIndependentResourceTypesAllValueSet_Value = 150
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_SOURCE_MATERIAL             VersionIndependentResourceTypesAllValueSet_Value = 151
	VersionIndependentResourceTypesAllValueSet_SUPPLY_DELIVERY                       VersionIndependentResourceTypesAllValueSet_Value = 152
	VersionIndependentResourceTypesAllValueSet_SUPPLY_REQUEST                        VersionIndependentResourceTypesAllValueSet_Value = 153
	VersionIndependentResourceTypesAllValueSet_TASK                                  VersionIndependentResourceTypesAllValueSet_Value = 154
	VersionIndependentResourceTypesAllValueSet_TERMINOLOGY_CAPABILITIES              VersionIndependentResourceTypesAllValueSet_Value = 155
	VersionIndependentResourceTypesAllValueSet_TEST_PLAN                             VersionIndependentResourceTypesAllValueSet_Value = 156
	VersionIndependentResourceTypesAllValueSet_TEST_REPORT                           VersionIndependentResourceTypesAllValueSet_Value = 157
	VersionIndependentResourceTypesAllValueSet_TEST_SCRIPT                           VersionIndependentResourceTypesAllValueSet_Value = 158
	VersionIndependentResourceTypesAllValueSet_TRANSPORT                             VersionIndependentResourceTypesAllValueSet_Value = 159
	VersionIndependentResourceTypesAllValueSet_VALUE_SET                             VersionIndependentResourceTypesAllValueSet_Value = 160
	VersionIndependentResourceTypesAllValueSet_VERIFICATION_RESULT                   VersionIndependentResourceTypesAllValueSet_Value = 161
	VersionIndependentResourceTypesAllValueSet_VISION_PRESCRIPTION                   VersionIndependentResourceTypesAllValueSet_Value = 162
	VersionIndependentResourceTypesAllValueSet_BODY_SITE                             VersionIndependentResourceTypesAllValueSet_Value = 163
	VersionIndependentResourceTypesAllValueSet_CATALOG_ENTRY                         VersionIndependentResourceTypesAllValueSet_Value = 164
	VersionIndependentResourceTypesAllValueSet_CONFORMANCE                           VersionIndependentResourceTypesAllValueSet_Value = 165
	VersionIndependentResourceTypesAllValueSet_DATA_ELEMENT                          VersionIndependentResourceTypesAllValueSet_Value = 166
	VersionIndependentResourceTypesAllValueSet_DEVICE_COMPONENT                      VersionIndependentResourceTypesAllValueSet_Value = 167
	VersionIndependentResourceTypesAllValueSet_DEVICE_USE_REQUEST                    VersionIndependentResourceTypesAllValueSet_Value = 168
	VersionIndependentResourceTypesAllValueSet_DEVICE_USE_STATEMENT                  VersionIndependentResourceTypesAllValueSet_Value = 169
	VersionIndependentResourceTypesAllValueSet_DIAGNOSTIC_ORDER                      VersionIndependentResourceTypesAllValueSet_Value = 170
	VersionIndependentResourceTypesAllValueSet_DOCUMENT_MANIFEST                     VersionIndependentResourceTypesAllValueSet_Value = 171
	VersionIndependentResourceTypesAllValueSet_EFFECT_EVIDENCE_SYNTHESIS             VersionIndependentResourceTypesAllValueSet_Value = 172
	VersionIndependentResourceTypesAllValueSet_ELIGIBILITY_REQUEST                   VersionIndependentResourceTypesAllValueSet_Value = 173
	VersionIndependentResourceTypesAllValueSet_ELIGIBILITY_RESPONSE                  VersionIndependentResourceTypesAllValueSet_Value = 174
	VersionIndependentResourceTypesAllValueSet_EXPANSION_PROFILE                     VersionIndependentResourceTypesAllValueSet_Value = 175
	VersionIndependentResourceTypesAllValueSet_IMAGING_MANIFEST                      VersionIndependentResourceTypesAllValueSet_Value = 176
	VersionIndependentResourceTypesAllValueSet_IMAGING_OBJECT_SELECTION              VersionIndependentResourceTypesAllValueSet_Value = 177
	VersionIndependentResourceTypesAllValueSet_MEDIA                                 VersionIndependentResourceTypesAllValueSet_Value = 178
	VersionIndependentResourceTypesAllValueSet_MEDICATION_ORDER                      VersionIndependentResourceTypesAllValueSet_Value = 179
	VersionIndependentResourceTypesAllValueSet_MEDICATION_USAGE                      VersionIndependentResourceTypesAllValueSet_Value = 180
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT                     VersionIndependentResourceTypesAllValueSet_Value = 181
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_AUTHORIZATION       VersionIndependentResourceTypesAllValueSet_Value = 182
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_CONTRAINDICATION    VersionIndependentResourceTypesAllValueSet_Value = 183
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_INDICATION          VersionIndependentResourceTypesAllValueSet_Value = 184
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_INGREDIENT          VersionIndependentResourceTypesAllValueSet_Value = 185
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_INTERACTION         VersionIndependentResourceTypesAllValueSet_Value = 186
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_MANUFACTURED        VersionIndependentResourceTypesAllValueSet_Value = 187
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_PACKAGED            VersionIndependentResourceTypesAllValueSet_Value = 188
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_PHARMACEUTICAL      VersionIndependentResourceTypesAllValueSet_Value = 189
	VersionIndependentResourceTypesAllValueSet_MEDICINAL_PRODUCT_UNDESIRABLE_EFFECT  VersionIndependentResourceTypesAllValueSet_Value = 190
	VersionIndependentResourceTypesAllValueSet_ORDER                                 VersionIndependentResourceTypesAllValueSet_Value = 191
	VersionIndependentResourceTypesAllValueSet_ORDER_RESPONSE                        VersionIndependentResourceTypesAllValueSet_Value = 192
	VersionIndependentResourceTypesAllValueSet_PROCEDURE_REQUEST                     VersionIndependentResourceTypesAllValueSet_Value = 193
	VersionIndependentResourceTypesAllValueSet_PROCESS_REQUEST                       VersionIndependentResourceTypesAllValueSet_Value = 194
	VersionIndependentResourceTypesAllValueSet_PROCESS_RESPONSE                      VersionIndependentResourceTypesAllValueSet_Value = 195
	VersionIndependentResourceTypesAllValueSet_REFERRAL_REQUEST                      VersionIndependentResourceTypesAllValueSet_Value = 196
	VersionIndependentResourceTypesAllValueSet_REQUEST_GROUP                         VersionIndependentResourceTypesAllValueSet_Value = 197
	VersionIndependentResourceTypesAllValueSet_RESEARCH_DEFINITION                   VersionIndependentResourceTypesAllValueSet_Value = 198
	VersionIndependentResourceTypesAllValueSet_RESEARCH_ELEMENT_DEFINITION           VersionIndependentResourceTypesAllValueSet_Value = 199
	VersionIndependentResourceTypesAllValueSet_RISK_EVIDENCE_SYNTHESIS               VersionIndependentResourceTypesAllValueSet_Value = 200
	VersionIndependentResourceTypesAllValueSet_SEQUENCE                              VersionIndependentResourceTypesAllValueSet_Value = 201
	VersionIndependentResourceTypesAllValueSet_SERVICE_DEFINITION                    VersionIndependentResourceTypesAllValueSet_Value = 202
	VersionIndependentResourceTypesAllValueSet_SUBSTANCE_SPECIFICATION               VersionIndependentResourceTypesAllValueSet_Value = 203
)

// Enum value maps for VersionIndependentResourceTypesAllValueSet_Value.
var (
	VersionIndependentResourceTypesAllValueSet_Value_name = map[int32]string{
		0:   "INVALID_UNINITIALIZED",
		1:   "ACCOUNT",
		2:   "ACTIVITY_DEFINITION",
		3:   "ACTOR_DEFINITION",
		4:   "ADMINISTRABLE_PRODUCT_DEFINITION",
		5:   "ADVERSE_EVENT",
		6:   "ALLERGY_INTOLERANCE",
		7:   "APPOINTMENT",
		8:   "APPOINTMENT_RESPONSE",
		9:   "ARTIFACT_ASSESSMENT",
		10:  "AUDIT_EVENT",
		11:  "BASIC",
		12:  "BINARY",
		13:  "BIOLOGICALLY_DERIVED_PRODUCT",
		14:  "BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE",
		15:  "BODY_STRUCTURE",
		16:  "BUNDLE",
		17:  "CANONICAL_RESOURCE",
		18:  "CAPABILITY_STATEMENT",
		19:  "CARE_PLAN",
		20:  "CARE_TEAM",
		21:  "CHARGE_ITEM",
		22:  "CHARGE_ITEM_DEFINITION",
		23:  "CITATION",
		24:  "CLAIM",
		25:  "CLAIM_RESPONSE",
		26:  "CLINICAL_IMPRESSION",
		27:  "CLINICAL_USE_DEFINITION",
		28:  "CODE_SYSTEM",
		29:  "COMMUNICATION",
		30:  "COMMUNICATION_REQUEST",
		31:  "COMPARTMENT_DEFINITION",
		32:  "COMPOSITION",
		33:  "CONCEPT_MAP",
		34:  "CONDITION",
		35:  "CONDITION_DEFINITION",
		36:  "CONSENT",
		37:  "CONTRACT",
		38:  "COVERAGE",
		39:  "COVERAGE_ELIGIBILITY_REQUEST",
		40:  "COVERAGE_ELIGIBILITY_RESPONSE",
		41:  "DETECTED_ISSUE",
		42:  "DEVICE",
		43:  "DEVICE_ASSOCIATION",
		44:  "DEVICE_DEFINITION",
		45:  "DEVICE_DISPENSE",
		46:  "DEVICE_METRIC",
		47:  "DEVICE_REQUEST",
		48:  "DEVICE_USAGE",
		49:  "DIAGNOSTIC_REPORT",
		50:  "DOCUMENT_REFERENCE",
		51:  "DOMAIN_RESOURCE",
		52:  "ENCOUNTER",
		53:  "ENCOUNTER_HISTORY",
		54:  "ENDPOINT",
		55:  "ENROLLMENT_REQUEST",
		56:  "ENROLLMENT_RESPONSE",
		57:  "EPISODE_OF_CARE",
		58:  "EVENT_DEFINITION",
		59:  "EVIDENCE",
		60:  "EVIDENCE_REPORT",
		61:  "EVIDENCE_VARIABLE",
		62:  "EXAMPLE_SCENARIO",
		63:  "EXPLANATION_OF_BENEFIT",
		64:  "FAMILY_MEMBER_HISTORY",
		65:  "FLAG",
		66:  "FORMULARY_ITEM",
		67:  "GENOMIC_STUDY",
		68:  "GOAL",
		69:  "GRAPH_DEFINITION",
		70:  "GROUP",
		71:  "GUIDANCE_RESPONSE",
		72:  "HEALTHCARE_SERVICE",
		73:  "IMAGING_SELECTION",
		74:  "IMAGING_STUDY",
		75:  "IMMUNIZATION",
		76:  "IMMUNIZATION_EVALUATION",
		77:  "IMMUNIZATION_RECOMMENDATION",
		78:  "IMPLEMENTATION_GUIDE",
		79:  "INGREDIENT",
		80:  "INSURANCE_PLAN",
		81:  "INVENTORY_ITEM",
		82:  "INVENTORY_REPORT",
		83:  "INVOICE",
		84:  "LIBRARY",
		85:  "LINKAGE",
		86:  "LIST",
		87:  "LOCATION",
		88:  "MANUFACTURED_ITEM_DEFINITION",
		89:  "MEASURE",
		90:  "MEASURE_REPORT",
		91:  "MEDICATION",
		92:  "MEDICATION_ADMINISTRATION",
		93:  "MEDICATION_DISPENSE",
		94:  "MEDICATION_KNOWLEDGE",
		95:  "MEDICATION_REQUEST",
		96:  "MEDICATION_STATEMENT",
		97:  "MEDICINAL_PRODUCT_DEFINITION",
		98:  "MESSAGE_DEFINITION",
		99:  "MESSAGE_HEADER",
		100: "METADATA_RESOURCE",
		101: "MOLECULAR_SEQUENCE",
		102: "NAMING_SYSTEM",
		103: "NUTRITION_INTAKE",
		104: "NUTRITION_ORDER",
		105: "NUTRITION_PRODUCT",
		106: "OBSERVATION",
		107: "OBSERVATION_DEFINITION",
		108: "OPERATION_DEFINITION",
		109: "OPERATION_OUTCOME",
		110: "ORGANIZATION",
		111: "ORGANIZATION_AFFILIATION",
		112: "PACKAGED_PRODUCT_DEFINITION",
		113: "PARAMETERS",
		114: "PATIENT",
		115: "PAYMENT_NOTICE",
		116: "PAYMENT_RECONCILIATION",
		117: "PERMISSION",
		118: "PERSON",
		119: "PLAN_DEFINITION",
		120: "PRACTITIONER",
		121: "PRACTITIONER_ROLE",
		122: "PROCEDURE",
		123: "PROVENANCE",
		124: "QUESTIONNAIRE",
		125: "QUESTIONNAIRE_RESPONSE",
		126: "REGULATED_AUTHORIZATION",
		127: "RELATED_PERSON",
		128: "REQUEST_ORCHESTRATION",
		129: "REQUIREMENTS",
		130: "RESEARCH_STUDY",
		131: "RESEARCH_SUBJECT",
		132: "RESOURCE",
		133: "RISK_ASSESSMENT",
		134: "SCHEDULE",
		135: "SEARCH_PARAMETER",
		136: "SERVICE_REQUEST",
		137: "SLOT",
		138: "SPECIMEN",
		139: "SPECIMEN_DEFINITION",
		140: "STRUCTURE_DEFINITION",
		141: "STRUCTURE_MAP",
		142: "SUBSCRIPTION",
		143: "SUBSCRIPTION_STATUS",
		144: "SUBSCRIPTION_TOPIC",
		145: "SUBSTANCE",
		146: "SUBSTANCE_DEFINITION",
		147: "SUBSTANCE_NUCLEIC_ACID",
		148: "SUBSTANCE_POLYMER",
		149: "SUBSTANCE_PROTEIN",
		150: "SUBSTANCE_REFERENCE_INFORMATION",
		151: "SUBSTANCE_SOURCE_MATERIAL",
		152: "SUPPLY_DELIVERY",
		153: "SUPPLY_REQUEST",
		154: "TASK",
		155: "TERMINOLOGY_CAPABILITIES",
		156: "TEST_PLAN",
		157: "TEST_REPORT",
		158: "TEST_SCRIPT",
		159: "TRANSPORT",
		160: "VALUE_SET",
		161: "VERIFICATION_RESULT",
		162: "VISION_PRESCRIPTION",
		163: "BODY_SITE",
		164: "CATALOG_ENTRY",
		165: "CONFORMANCE",
		166: "DATA_ELEMENT",
		167: "DEVICE_COMPONENT",
		168: "DEVICE_USE_REQUEST",
		169: "DEVICE_USE_STATEMENT",
		170: "DIAGNOSTIC_ORDER",
		171: "DOCUMENT_MANIFEST",
		172: "EFFECT_EVIDENCE_SYNTHESIS",
		173: "ELIGIBILITY_REQUEST",
		174: "ELIGIBILITY_RESPONSE",
		175: "EXPANSION_PROFILE",
		176: "IMAGING_MANIFEST",
		177: "IMAGING_OBJECT_SELECTION",
		178: "MEDIA",
		179: "MEDICATION_ORDER",
		180: "MEDICATION_USAGE",
		181: "MEDICINAL_PRODUCT",
		182: "MEDICINAL_PRODUCT_AUTHORIZATION",
		183: "MEDICINAL_PRODUCT_CONTRAINDICATION",
		184: "MEDICINAL_PRODUCT_INDICATION",
		185: "MEDICINAL_PRODUCT_INGREDIENT",
		186: "MEDICINAL_PRODUCT_INTERACTION",
		187: "MEDICINAL_PRODUCT_MANUFACTURED",
		188: "MEDICINAL_PRODUCT_PACKAGED",
		189: "MEDICINAL_PRODUCT_PHARMACEUTICAL",
		190: "MEDICINAL_PRODUCT_UNDESIRABLE_EFFECT",
		191: "ORDER",
		192: "ORDER_RESPONSE",
		193: "PROCEDURE_REQUEST",
		194: "PROCESS_REQUEST",
		195: "PROCESS_RESPONSE",
		196: "REFERRAL_REQUEST",
		197: "REQUEST_GROUP",
		198: "RESEARCH_DEFINITION",
		199: "RESEARCH_ELEMENT_DEFINITION",
		200: "RISK_EVIDENCE_SYNTHESIS",
		201: "SEQUENCE",
		202: "SERVICE_DEFINITION",
		203: "SUBSTANCE_SPECIFICATION",
	}
	VersionIndependentResourceTypesAllValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED":                 0,
		"ACCOUNT":                               1,
		"ACTIVITY_DEFINITION":                   2,
		"ACTOR_DEFINITION":                      3,
		"ADMINISTRABLE_PRODUCT_DEFINITION":      4,
		"ADVERSE_EVENT":                         5,
		"ALLERGY_INTOLERANCE":                   6,
		"APPOINTMENT":                           7,
		"APPOINTMENT_RESPONSE":                  8,
		"ARTIFACT_ASSESSMENT":                   9,
		"AUDIT_EVENT":                           10,
		"BASIC":                                 11,
		"BINARY":                                12,
		"BIOLOGICALLY_DERIVED_PRODUCT":          13,
		"BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE": 14,
		"BODY_STRUCTURE":                        15,
		"BUNDLE":                                16,
		"CANONICAL_RESOURCE":                    17,
		"CAPABILITY_STATEMENT":                  18,
		"CARE_PLAN":                             19,
		"CARE_TEAM":                             20,
		"CHARGE_ITEM":                           21,
		"CHARGE_ITEM_DEFINITION":                22,
		"CITATION":                              23,
		"CLAIM":                                 24,
		"CLAIM_RESPONSE":                        25,
		"CLINICAL_IMPRESSION":                   26,
		"CLINICAL_USE_DEFINITION":               27,
		"CODE_SYSTEM":                           28,
		"COMMUNICATION":                         29,
		"COMMUNICATION_REQUEST":                 30,
		"COMPARTMENT_DEFINITION":                31,
		"COMPOSITION":                           32,
		"CONCEPT_MAP":                           33,
		"CONDITION":                             34,
		"CONDITION_DEFINITION":                  35,
		"CONSENT":                               36,
		"CONTRACT":                              37,
		"COVERAGE":                              38,
		"COVERAGE_ELIGIBILITY_REQUEST":          39,
		"COVERAGE_ELIGIBILITY_RESPONSE":         40,
		"DETECTED_ISSUE":                        41,
		"DEVICE":                                42,
		"DEVICE_ASSOCIATION":                    43,
		"DEVICE_DEFINITION":                     44,
		"DEVICE_DISPENSE":                       45,
		"DEVICE_METRIC":                         46,
		"DEVICE_REQUEST":                        47,
		"DEVICE_USAGE":                          48,
		"DIAGNOSTIC_REPORT":                     49,
		"DOCUMENT_REFERENCE":                    50,
		"DOMAIN_RESOURCE":                       51,
		"ENCOUNTER":                             52,
		"ENCOUNTER_HISTORY":                     53,
		"ENDPOINT":                              54,
		"ENROLLMENT_REQUEST":                    55,
		"ENROLLMENT_RESPONSE":                   56,
		"EPISODE_OF_CARE":                       57,
		"EVENT_DEFINITION":                      58,
		"EVIDENCE":                              59,
		"EVIDENCE_REPORT":                       60,
		"EVIDENCE_VARIABLE":                     61,
		"EXAMPLE_SCENARIO":                      62,
		"EXPLANATION_OF_BENEFIT":                63,
		"FAMILY_MEMBER_HISTORY":                 64,
		"FLAG":                                  65,
		"FORMULARY_ITEM":                        66,
		"GENOMIC_STUDY":                         67,
		"GOAL":                                  68,
		"GRAPH_DEFINITION":                      69,
		"GROUP":                                 70,
		"GUIDANCE_RESPONSE":                     71,
		"HEALTHCARE_SERVICE":                    72,
		"IMAGING_SELECTION":                     73,
		"IMAGING_STUDY":                         74,
		"IMMUNIZATION":                          75,
		"IMMUNIZATION_EVALUATION":               76,
		"IMMUNIZATION_RECOMMENDATION":           77,
		"IMPLEMENTATION_GUIDE":                  78,
		"INGREDIENT":                            79,
		"INSURANCE_PLAN":                        80,
		"INVENTORY_ITEM":                        81,
		"INVENTORY_REPORT":                      82,
		"INVOICE":                               83,
		"LIBRARY":                               84,
		"LINKAGE":                               85,
		"LIST":                                  86,
		"LOCATION":                              87,
		"MANUFACTURED_ITEM_DEFINITION":          88,
		"MEASURE":                               89,
		"MEASURE_REPORT":                        90,
		"MEDICATION":                            91,
		"MEDICATION_ADMINISTRATION":             92,
		"MEDICATION_DISPENSE":                   93,
		"MEDICATION_KNOWLEDGE":                  94,
		"MEDICATION_REQUEST":                    95,
		"MEDICATION_STATEMENT":                  96,
		"MEDICINAL_PRODUCT_DEFINITION":          97,
		"MESSAGE_DEFINITION":                    98,
		"MESSAGE_HEADER":                        99,
		"METADATA_RESOURCE":                     100,
		"MOLECULAR_SEQUENCE":                    101,
		"NAMING_SYSTEM":                         102,
		"NUTRITION_INTAKE":                      103,
		"NUTRITION_ORDER":                       104,
		"NUTRITION_PRODUCT":                     105,
		"OBSERVATION":                           106,
		"OBSERVATION_DEFINITION":                107,
		"OPERATION_DEFINITION":                  108,
		"OPERATION_OUTCOME":                     109,
		"ORGANIZATION":                          110,
		"ORGANIZATION_AFFILIATION":              111,
		"PACKAGED_PRODUCT_DEFINITION":           112,
		"PARAMETERS":                            113,
		"PATIENT":                               114,
		"PAYMENT_NOTICE":                        115,
		"PAYMENT_RECONCILIATION":                116,
		"PERMISSION":                            117,
		"PERSON":                                118,
		"PLAN_DEFINITION":                       119,
		"PRACTITIONER":                          120,
		"PRACTITIONER_ROLE":                     121,
		"PROCEDURE":                             122,
		"PROVENANCE":                            123,
		"QUESTIONNAIRE":                         124,
		"QUESTIONNAIRE_RESPONSE":                125,
		"REGULATED_AUTHORIZATION":               126,
		"RELATED_PERSON":                        127,
		"REQUEST_ORCHESTRATION":                 128,
		"REQUIREMENTS":                          129,
		"RESEARCH_STUDY":                        130,
		"RESEARCH_SUBJECT":                      131,
		"RESOURCE":                              132,
		"RISK_ASSESSMENT":                       133,
		"SCHEDULE":                              134,
		"SEARCH_PARAMETER":                      135,
		"SERVICE_REQUEST":                       136,
		"SLOT":                                  137,
		"SPECIMEN":                              138,
		"SPECIMEN_DEFINITION":                   139,
		"STRUCTURE_DEFINITION":                  140,
		"STRUCTURE_MAP":                         141,
		"SUBSCRIPTION":                          142,
		"SUBSCRIPTION_STATUS":                   143,
		"SUBSCRIPTION_TOPIC":                    144,
		"SUBSTANCE":                             145,
		"SUBSTANCE_DEFINITION":                  146,
		"SUBSTANCE_NUCLEIC_ACID":                147,
		"SUBSTANCE_POLYMER":                     148,
		"SUBSTANCE_PROTEIN":                     149,
		"SUBSTANCE_REFERENCE_INFORMATION":       150,
		"SUBSTANCE_SOURCE_MATERIAL":             151,
		"SUPPLY_DELIVERY":                       152,
		"SUPPLY_REQUEST":                        153,
		"TASK":                                  154,
		"TERMINOLOGY_CAPABILITIES":              155,
		"TEST_PLAN":                             156,
		"TEST_REPORT":                           157,
		"TEST_SCRIPT":                           158,
		"TRANSPORT":                             159,
		"VALUE_SET":                             160,
		"VERIFICATION_RESULT":                   161,
		"VISION_PRESCRIPTION":                   162,
		"BODY_SITE":                             163,
		"CATALOG_ENTRY":                         164,
		"CONFORMANCE":                           165,
		"DATA_ELEMENT":                          166,
		"DEVICE_COMPONENT":                      167,
		"DEVICE_USE_REQUEST":                    168,
		"DEVICE_USE_STATEMENT":                  169,
		"DIAGNOSTIC_ORDER":                      170,
		"DOCUMENT_MANIFEST":                     171,
		"EFFECT_EVIDENCE_SYNTHESIS":             172,
		"ELIGIBILITY_REQUEST":                   173,
		"ELIGIBILITY_RESPONSE":                  174,
		"EXPANSION_PROFILE":                     175,
		"IMAGING_MANIFEST":                      176,
		"IMAGING_OBJECT_SELECTION":              177,
		"MEDIA":                                 178,
		"MEDICATION_ORDER":                      179,
		"MEDICATION_USAGE":                      180,
		"MEDICINAL_PRODUCT":                     181,
		"MEDICINAL_PRODUCT_AUTHORIZATION":       182,
		"MEDICINAL_PRODUCT_CONTRAINDICATION":    183,
		"MEDICINAL_PRODUCT_INDICATION":          184,
		"MEDICINAL_PRODUCT_INGREDIENT":          185,
		"MEDICINAL_PRODUCT_INTERACTION":         186,
		"MEDICINAL_PRODUCT_MANUFACTURED":        187,
		"MEDICINAL_PRODUCT_PACKAGED":            188,
		"MEDICINAL_PRODUCT_PHARMACEUTICAL":      189,
		"MEDICINAL_PRODUCT_UNDESIRABLE_EFFECT":  190,
		"ORDER":                                 191,
		"ORDER_RESPONSE":                        192,
		"PROCEDURE_REQUEST":                     193,
		"PROCESS_REQUEST":                       194,
		"PROCESS_RESPONSE":                      195,
		"REFERRAL_REQUEST":                      196,
		"REQUEST_GROUP":                         197,
		"RESEARCH_DEFINITION":                   198,
		"RESEARCH_ELEMENT_DEFINITION":           199,
		"RISK_EVIDENCE_SYNTHESIS":               200,
		"SEQUENCE":                              201,
		"SERVICE_DEFINITION":                    202,
		"SUBSTANCE_SPECIFICATION":               203,
	}
)

func (x VersionIndependentResourceTypesAllValueSet_Value) Enum() *VersionIndependentResourceTypesAllValueSet_Value {
	p := new(VersionIndependentResourceTypesAllValueSet_Value)
	*p = x
	return p
}

func (x VersionIndependentResourceTypesAllValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionIndependentResourceTypesAllValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[23].Descriptor()
}

func (VersionIndependentResourceTypesAllValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[23]
}

func (x VersionIndependentResourceTypesAllValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionIndependentResourceTypesAllValueSet_Value.Descriptor instead.
func (VersionIndependentResourceTypesAllValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{23, 0}
}

type VitalSignsUnitsValueSet_Value int32

const (
	VitalSignsUnitsValueSet_INVALID_UNINITIALIZED VitalSignsUnitsValueSet_Value = 0
	VitalSignsUnitsValueSet_PERCENT               VitalSignsUnitsValueSet_Value = 1
	VitalSignsUnitsValueSet_CM                    VitalSignsUnitsValueSet_Value = 2
	VitalSignsUnitsValueSet_IN_I                  VitalSignsUnitsValueSet_Value = 3
	VitalSignsUnitsValueSet_KG                    VitalSignsUnitsValueSet_Value = 4
	VitalSignsUnitsValueSet_G                     VitalSignsUnitsValueSet_Value = 5
	VitalSignsUnitsValueSet_LB_AV                 VitalSignsUnitsValueSet_Value = 6
	VitalSignsUnitsValueSet_CEL                   VitalSignsUnitsValueSet_Value = 7
	VitalSignsUnitsValueSet_DEG_F                 VitalSignsUnitsValueSet_Value = 8
	VitalSignsUnitsValueSet_MM_HG                 VitalSignsUnitsValueSet_Value = 9
	VitalSignsUnitsValueSet_PER_MIN               VitalSignsUnitsValueSet_Value = 10
	VitalSignsUnitsValueSet_KG_M2                 VitalSignsUnitsValueSet_Value = 11
	VitalSignsUnitsValueSet_M2                    VitalSignsUnitsValueSet_Value = 12
)

// Enum value maps for VitalSignsUnitsValueSet_Value.
var (
	VitalSignsUnitsValueSet_Value_name = map[int32]string{
		0:  "INVALID_UNINITIALIZED",
		1:  "PERCENT",
		2:  "CM",
		3:  "IN_I",
		4:  "KG",
		5:  "G",
		6:  "LB_AV",
		7:  "CEL",
		8:  "DEG_F",
		9:  "MM_HG",
		10: "PER_MIN",
		11: "KG_M2",
		12: "M2",
	}
	VitalSignsUnitsValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"PERCENT":               1,
		"CM":                    2,
		"IN_I":                  3,
		"KG":                    4,
		"G":                     5,
		"LB_AV":                 6,
		"CEL":                   7,
		"DEG_F":                 8,
		"MM_HG":                 9,
		"PER_MIN":               10,
		"KG_M2":                 11,
		"M2":                    12,
	}
)

func (x VitalSignsUnitsValueSet_Value) Enum() *VitalSignsUnitsValueSet_Value {
	p := new(VitalSignsUnitsValueSet_Value)
	*p = x
	return p
}

func (x VitalSignsUnitsValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VitalSignsUnitsValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[24].Descriptor()
}

func (VitalSignsUnitsValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes[24]
}

func (x VitalSignsUnitsValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VitalSignsUnitsValueSet_Value.Descriptor instead.
func (VitalSignsUnitsValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{24, 0}
}

// Codes identifying the lifecycle stage of an adverse event.
// See http://hl7.org/fhir/ValueSet/adverse-event-status
type AdverseEventStatusValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdverseEventStatusValueSet) Reset() {
	*x = AdverseEventStatusValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdverseEventStatusValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdverseEventStatusValueSet) ProtoMessage() {}

func (x *AdverseEventStatusValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdverseEventStatusValueSet.ProtoReflect.Descriptor instead.
func (*AdverseEventStatusValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{0}
}

// The Participation status for a participant in response to a request for an
// appointment. See http://hl7.org/fhir/ValueSet/appointmentresponse-status
type AppointmentResponseStatusValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppointmentResponseStatusValueSet) Reset() {
	*x = AppointmentResponseStatusValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentResponseStatusValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentResponseStatusValueSet) ProtoMessage() {}

func (x *AppointmentResponseStatusValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentResponseStatusValueSet.ProtoReflect.Descriptor instead.
func (*AppointmentResponseStatusValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{1}
}

// UCUM units for recording body length measures such as height and head
// circumference See http://hl7.org/fhir/ValueSet/ucum-bodylength
type BodyLengthUnitsValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BodyLengthUnitsValueSet) Reset() {
	*x = BodyLengthUnitsValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyLengthUnitsValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyLengthUnitsValueSet) ProtoMessage() {}

func (x *BodyLengthUnitsValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyLengthUnitsValueSet.ProtoReflect.Descriptor instead.
func (*BodyLengthUnitsValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{2}
}

// UCUM units for recording Body Temperature
// See http://hl7.org/fhir/ValueSet/ucum-bodytemp
type BodyTemperatureUnitsValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BodyTemperatureUnitsValueSet) Reset() {
	*x = BodyTemperatureUnitsValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyTemperatureUnitsValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyTemperatureUnitsValueSet) ProtoMessage() {}

func (x *BodyTemperatureUnitsValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyTemperatureUnitsValueSet.ProtoReflect.Descriptor instead.
func (*BodyTemperatureUnitsValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{3}
}

// UCUM units for recording Body Weight
// See http://hl7.org/fhir/ValueSet/ucum-bodyweight
type BodyWeightUnitsValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BodyWeightUnitsValueSet) Reset() {
	*x = BodyWeightUnitsValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyWeightUnitsValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyWeightUnitsValueSet) ProtoMessage() {}

func (x *BodyWeightUnitsValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyWeightUnitsValueSet.ProtoReflect.Descriptor instead.
func (*BodyWeightUnitsValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{4}
}

// Codes indicating the degree of authority/intentionality associated with a
// care plan. See http://hl7.org/fhir/ValueSet/care-plan-intent
type CarePlanIntentValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CarePlanIntentValueSet) Reset() {
	*x = CarePlanIntentValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarePlanIntentValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarePlanIntentValueSet) ProtoMessage() {}

func (x *CarePlanIntentValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarePlanIntentValueSet.ProtoReflect.Descriptor instead.
func (*CarePlanIntentValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{5}
}

// This value set includes color codes - either the color names as defined in
// [CSS4](https://www.w3.org/TR/css-color-4/), or any valid RGB code
// (```#RRGGBB``` in Hex). See http://hl7.org/fhir/ValueSet/color-codes
type ColorCodesOrRGBValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ColorCodesOrRGBValueSet) Reset() {
	*x = ColorCodesOrRGBValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorCodesOrRGBValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorCodesOrRGBValueSet) ProtoMessage() {}

func (x *ColorCodesOrRGBValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorCodesOrRGBValueSet.ProtoReflect.Descriptor instead.
func (*ColorCodesOrRGBValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{6}
}

// This value set includes common codes from BCP-47 (see
// http://tools.ietf.org/html/bcp47) See http://hl7.org/fhir/ValueSet/languages
type CommonLanguagesValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonLanguagesValueSet) Reset() {
	*x = CommonLanguagesValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonLanguagesValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonLanguagesValueSet) ProtoMessage() {}

func (x *CommonLanguagesValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonLanguagesValueSet.ProtoReflect.Descriptor instead.
func (*CommonLanguagesValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{7}
}

// Indicates the status of a detected issue
// See http://hl7.org/fhir/ValueSet/detectedissue-status
type DetectedIssueStatusValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DetectedIssueStatusValueSet) Reset() {
	*x = DetectedIssueStatusValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectedIssueStatusValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectedIssueStatusValueSet) ProtoMessage() {}

func (x *DetectedIssueStatusValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectedIssueStatusValueSet.ProtoReflect.Descriptor instead.
func (*DetectedIssueStatusValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{8}
}

// Real-world event relating to the schedule.
// See http://hl7.org/fhir/ValueSet/event-timing
type EventTimingValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventTimingValueSet) Reset() {
	*x = EventTimingValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTimingValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTimingValueSet) ProtoMessage() {}

func (x *EventTimingValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTimingValueSet.ProtoReflect.Descriptor instead.
func (*EventTimingValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{9}
}

// The value set to instantiate this attribute should be drawn from a
// terminologically robust code system that consists of or contains concepts to
// support describing the current status of the evaluation for vaccine
// administration event. See
// http://hl7.org/fhir/ValueSet/immunization-evaluation-status
type ImmunizationEvaluationStatusCodesValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImmunizationEvaluationStatusCodesValueSet) Reset() {
	*x = ImmunizationEvaluationStatusCodesValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationEvaluationStatusCodesValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationEvaluationStatusCodesValueSet) ProtoMessage() {}

func (x *ImmunizationEvaluationStatusCodesValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationEvaluationStatusCodesValueSet.ProtoReflect.Descriptor instead.
func (*ImmunizationEvaluationStatusCodesValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{10}
}

// The value set to instantiate this attribute should be drawn from a
// terminologically robust code system that consists of or contains concepts to
// support describing the current status of the administered dose of vaccine.
// See http://hl7.org/fhir/ValueSet/immunization-status
type ImmunizationStatusCodesValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImmunizationStatusCodesValueSet) Reset() {
	*x = ImmunizationStatusCodesValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationStatusCodesValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationStatusCodesValueSet) ProtoMessage() {}

func (x *ImmunizationStatusCodesValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationStatusCodesValueSet.ProtoReflect.Descriptor instead.
func (*ImmunizationStatusCodesValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{11}
}

// FHIR RESTful interaction codes used for SubscriptionTopic trigger.
// See http://hl7.org/fhir/ValueSet/interaction-trigger
type InteractionTriggerValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InteractionTriggerValueSet) Reset() {
	*x = InteractionTriggerValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionTriggerValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionTriggerValueSet) ProtoMessage() {}

func (x *InteractionTriggerValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionTriggerValueSet.ProtoReflect.Descriptor instead.
func (*InteractionTriggerValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{12}
}

// LDL Cholesterol codes - measured or calculated
// See http://hl7.org/fhir/ValueSet/lipid-ldl-codes
type LDLCodesValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LDLCodesValueSet) Reset() {
	*x = LDLCodesValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LDLCodesValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LDLCodesValueSet) ProtoMessage() {}

func (x *LDLCodesValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LDLCodesValueSet.ProtoReflect.Descriptor instead.
func (*LDLCodesValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{13}
}

// The type of relationship to the cited artifact.
// See http://hl7.org/fhir/ValueSet/related-artifact-type-all
type RelatedArtifactTypeExpandedValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RelatedArtifactTypeExpandedValueSet) Reset() {
	*x = RelatedArtifactTypeExpandedValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedArtifactTypeExpandedValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedArtifactTypeExpandedValueSet) ProtoMessage() {}

func (x *RelatedArtifactTypeExpandedValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedArtifactTypeExpandedValueSet.ProtoReflect.Descriptor instead.
func (*RelatedArtifactTypeExpandedValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{14}
}

// All Resource Types that represent request resources
// See http://hl7.org/fhir/ValueSet/request-resource-types
type RequestResourceTypesValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestResourceTypesValueSet) Reset() {
	*x = RequestResourceTypesValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestResourceTypesValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestResourceTypesValueSet) ProtoMessage() {}

func (x *RequestResourceTypesValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestResourceTypesValueSet.ProtoReflect.Descriptor instead.
func (*RequestResourceTypesValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{15}
}

// Concrete FHIR Resource Types
// See http://hl7.org/fhir/ValueSet/resource-types
type ResourceTypeValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResourceTypeValueSet) Reset() {
	*x = ResourceTypeValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTypeValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTypeValueSet) ProtoMessage() {}

func (x *ResourceTypeValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTypeValueSet.ProtoReflect.Descriptor instead.
func (*ResourceTypeValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{16}
}

// Operations supported by REST at the system level.
// See http://hl7.org/fhir/ValueSet/system-restful-interaction
type SystemRestfulInteractionValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemRestfulInteractionValueSet) Reset() {
	*x = SystemRestfulInteractionValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRestfulInteractionValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRestfulInteractionValueSet) ProtoMessage() {}

func (x *SystemRestfulInteractionValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRestfulInteractionValueSet.ProtoReflect.Descriptor instead.
func (*SystemRestfulInteractionValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{17}
}

// Distinguishes whether the task is a proposal, plan or full order.
// See http://hl7.org/fhir/ValueSet/task-intent
type TaskIntentValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskIntentValueSet) Reset() {
	*x = TaskIntentValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskIntentValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskIntentValueSet) ProtoMessage() {}

func (x *TaskIntentValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskIntentValueSet.ProtoReflect.Descriptor instead.
func (*TaskIntentValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{18}
}

// Distinguishes whether the transport is a proposal, plan or full order.
// See http://hl7.org/fhir/ValueSet/transport-intent
type TransportIntentValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransportIntentValueSet) Reset() {
	*x = TransportIntentValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportIntentValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportIntentValueSet) ProtoMessage() {}

func (x *TransportIntentValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportIntentValueSet.ProtoReflect.Descriptor instead.
func (*TransportIntentValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{19}
}

// Operations supported by REST at the type or instance level.
// See http://hl7.org/fhir/ValueSet/type-restful-interaction
type TypeRestfulInteractionValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TypeRestfulInteractionValueSet) Reset() {
	*x = TypeRestfulInteractionValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeRestfulInteractionValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeRestfulInteractionValueSet) ProtoMessage() {}

func (x *TypeRestfulInteractionValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeRestfulInteractionValueSet.ProtoReflect.Descriptor instead.
func (*TypeRestfulInteractionValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{20}
}

// A unit of time (units from UCUM).
// See http://hl7.org/fhir/ValueSet/units-of-time
type UnitsOfTimeValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnitsOfTimeValueSet) Reset() {
	*x = UnitsOfTimeValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitsOfTimeValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitsOfTimeValueSet) ProtoMessage() {}

func (x *UnitsOfTimeValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitsOfTimeValueSet.ProtoReflect.Descriptor instead.
func (*UnitsOfTimeValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{21}
}

// The type of comparator operator to use
// See http://hl7.org/fhir/ValueSet/value-filter-comparator
type ValueFilterComparatorValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValueFilterComparatorValueSet) Reset() {
	*x = ValueFilterComparatorValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueFilterComparatorValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueFilterComparatorValueSet) ProtoMessage() {}

func (x *ValueFilterComparatorValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueFilterComparatorValueSet.ProtoReflect.Descriptor instead.
func (*ValueFilterComparatorValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{22}
}

// Current and past FHIR resource types (deleted or renamed), including abstract
// types See http://hl7.org/fhir/ValueSet/version-independent-all-resource-types
type VersionIndependentResourceTypesAllValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionIndependentResourceTypesAllValueSet) Reset() {
	*x = VersionIndependentResourceTypesAllValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionIndependentResourceTypesAllValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionIndependentResourceTypesAllValueSet) ProtoMessage() {}

func (x *VersionIndependentResourceTypesAllValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionIndependentResourceTypesAllValueSet.ProtoReflect.Descriptor instead.
func (*VersionIndependentResourceTypesAllValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{23}
}

// Common UCUM units for recording Vital Signs
// See http://hl7.org/fhir/ValueSet/ucum-vitals-common
type VitalSignsUnitsValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VitalSignsUnitsValueSet) Reset() {
	*x = VitalSignsUnitsValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VitalSignsUnitsValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VitalSignsUnitsValueSet) ProtoMessage() {}

func (x *VitalSignsUnitsValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VitalSignsUnitsValueSet.ProtoReflect.Descriptor instead.
func (*VitalSignsUnitsValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP(), []int{24}
}

var File_proto_google_fhir_proto_r5_core_valuesets_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdd, 0x02, 0x0a, 0x1a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x22, 0xbe, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x1a, 0x26, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35,
	0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x26, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x44,
	0x5f, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0x26, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04,
	0x1a, 0x26, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x37, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x31,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xc3, 0x03, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0x9d, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3b, 0x0a, 0x08,
	0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x45, 0x43,
	0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x54, 0x45, 0x4e, 0x54, 0x41, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x03, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x4e, 0x45, 0x45, 0x44, 0x53, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x44,
	0x5f, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x1a, 0x2b, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3d, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x37,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x42, 0x6f, 0x64, 0x79,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x02, 0x43, 0x4d, 0x10, 0x01,
	0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72,
	0x67, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x4e, 0x5f, 0x49, 0x10, 0x02, 0x1a, 0x2b, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x06, 0x5b, 0x69, 0x6e, 0x5f, 0x69, 0x5d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x1a, 0x32, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x2c,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x75, 0x63, 0x75,
	0x6d, 0x2d, 0x62, 0x6f, 0x64, 0x79, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xe0, 0x01, 0x0a,
	0x1c, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xbf, 0x01,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x31, 0x0a, 0x03, 0x43, 0x45, 0x4c, 0x10, 0x01, 0x1a, 0x28, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x03, 0x43, 0x65, 0x6c, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x36, 0x0a, 0x05, 0x44, 0x45, 0x47, 0x5f, 0x46, 0x10, 0x02,
	0x1a, 0x2b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x5b, 0x64, 0x65, 0x67, 0x46, 0x5d, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x1a, 0x30, 0xca,
	0xa5, 0x9a, 0xa0, 0x08, 0x2a, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65,
	0x74, 0x2f, 0x75, 0x63, 0x75, 0x6d, 0x2d, 0x62, 0x6f, 0x64, 0x79, 0x74, 0x65, 0x6d, 0x70, 0x22,
	0xfc, 0x01, 0x0a, 0x17, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x27, 0x0a, 0x02, 0x4b, 0x47, 0x10, 0x01, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x37, 0x0a, 0x05, 0x4c, 0x42, 0x5f,
	0x41, 0x56, 0x10, 0x02, 0x1a, 0x2c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x5b, 0x6c, 0x62, 0x5f,
	0x61, 0x76, 0x5d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f,
	0x72, 0x67, 0x12, 0x26, 0x0a, 0x01, 0x47, 0x10, 0x03, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x1a, 0x32, 0xca, 0xa5, 0x9a, 0xa0,
	0x08, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x75,
	0x63, 0x75, 0x6d, 0x2d, 0x62, 0x6f, 0x64, 0x79, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x82,
	0x03, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xe7, 0x02, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55,
	0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x36,
	0x0a, 0x08, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x10, 0x01, 0x1a, 0x28, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x02,
	0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x10, 0x03, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x1a, 0x28, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x05, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x33,
	0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x72, 0x65, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x2d, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xb1, 0x3f, 0x0a, 0x17, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x4f, 0x72, 0x52, 0x47, 0x42, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22,
	0x95, 0x3f, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x41, 0x4c, 0x49, 0x43, 0x45, 0x42, 0x4c, 0x55,
	0x45, 0x10, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x41, 0x4e,
	0x54, 0x49, 0x51, 0x55, 0x45, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x02, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x41, 0x51, 0x55, 0x41, 0x10, 0x03, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x41, 0x51, 0x55, 0x41, 0x4d, 0x41, 0x52, 0x49,
	0x4e, 0x45, 0x10, 0x04, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x41,
	0x5a, 0x55, 0x52, 0x45, 0x10, 0x05, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x05, 0x42, 0x45, 0x49, 0x47, 0x45, 0x10, 0x06, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x31, 0x0a, 0x06, 0x42, 0x49, 0x53, 0x51, 0x55, 0x45, 0x10, 0x07, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x08, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x42, 0x4c, 0x41, 0x4e, 0x43, 0x48, 0x45, 0x44,
	0x41, 0x4c, 0x4d, 0x4f, 0x4e, 0x44, 0x10, 0x09, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x04, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x0a, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x0a, 0x42, 0x4c, 0x55, 0x45, 0x56, 0x49, 0x4f, 0x4c, 0x45, 0x54, 0x10, 0x0b,
	0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x42, 0x52, 0x4f, 0x57, 0x4e,
	0x10, 0x0c, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x42, 0x55, 0x52,
	0x4c, 0x59, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0x0d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x09, 0x43, 0x41, 0x44, 0x45, 0x54, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x0e, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x52, 0x54, 0x52, 0x45,
	0x55, 0x53, 0x45, 0x10, 0x0f, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09,
	0x43, 0x48, 0x4f, 0x43, 0x4f, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x10, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0x11, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x43, 0x4f, 0x52, 0x4e, 0x46, 0x4c, 0x4f, 0x57,
	0x45, 0x52, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x12, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x08, 0x43, 0x4f, 0x52, 0x4e, 0x53, 0x49, 0x4c, 0x4b, 0x10, 0x13, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x43, 0x52, 0x49, 0x4d, 0x53, 0x4f, 0x4e, 0x10,
	0x14, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x43, 0x59, 0x41, 0x4e,
	0x10, 0x15, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x41, 0x52,
	0x4b, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x16, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x08, 0x44, 0x41, 0x52, 0x4b, 0x43, 0x59, 0x41, 0x4e, 0x10, 0x17, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b, 0x47, 0x4f, 0x4c, 0x44, 0x45,
	0x4e, 0x52, 0x4f, 0x44, 0x10, 0x18, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x44, 0x41, 0x52, 0x4b, 0x47, 0x52, 0x41, 0x59, 0x10, 0x19, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x41, 0x52, 0x4b, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10,
	0x1a, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x41, 0x52, 0x4b,
	0x47, 0x52, 0x45, 0x59, 0x10, 0x1b, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x09, 0x44, 0x41, 0x52, 0x4b, 0x4b, 0x48, 0x41, 0x4b, 0x49, 0x10, 0x1c, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x44, 0x41, 0x52, 0x4b, 0x4d, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x41, 0x10, 0x1d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x44,
	0x41, 0x52, 0x4b, 0x4f, 0x4c, 0x49, 0x56, 0x45, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x1e, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x41, 0x52, 0x4b, 0x4f, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x10, 0x1f, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x0a, 0x44, 0x41, 0x52, 0x4b, 0x4f, 0x52, 0x43, 0x48, 0x49, 0x44, 0x10, 0x20, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x44, 0x41, 0x52, 0x4b, 0x52, 0x45, 0x44, 0x10,
	0x21, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x41, 0x52, 0x4b,
	0x53, 0x41, 0x4c, 0x4d, 0x4f, 0x4e, 0x10, 0x22, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x0c, 0x44, 0x41, 0x52, 0x4b, 0x53, 0x45, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10,
	0x23, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b,
	0x53, 0x4c, 0x41, 0x54, 0x45, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x24, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x47,
	0x52, 0x41, 0x59, 0x10, 0x25, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d,
	0x44, 0x41, 0x52, 0x4b, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x47, 0x52, 0x45, 0x59, 0x10, 0x26, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x44, 0x41, 0x52, 0x4b, 0x54, 0x55,
	0x52, 0x51, 0x55, 0x4f, 0x49, 0x53, 0x45, 0x10, 0x27, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x0a, 0x44, 0x41, 0x52, 0x4b, 0x56, 0x49, 0x4f, 0x4c, 0x45, 0x54, 0x10, 0x28,
	0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x45, 0x45, 0x50, 0x50,
	0x49, 0x4e, 0x4b, 0x10, 0x29, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b,
	0x44, 0x45, 0x45, 0x50, 0x53, 0x4b, 0x59, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x2a, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x44, 0x49, 0x4d, 0x47, 0x52, 0x41, 0x59, 0x10,
	0x2b, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x44, 0x49, 0x4d, 0x47,
	0x52, 0x45, 0x59, 0x10, 0x2c, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a,
	0x44, 0x4f, 0x44, 0x47, 0x45, 0x52, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x2d, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x46, 0x49, 0x52, 0x45, 0x42, 0x52, 0x49, 0x43, 0x4b,
	0x10, 0x2e, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x46, 0x4c, 0x4f,
	0x52, 0x41, 0x4c, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x2f, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x0b, 0x46, 0x4f, 0x52, 0x45, 0x53, 0x54, 0x47, 0x52, 0x45, 0x45, 0x4e,
	0x10, 0x30, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x46, 0x55, 0x43,
	0x48, 0x53, 0x49, 0x41, 0x10, 0x31, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x09, 0x47, 0x41, 0x49, 0x4e, 0x53, 0x42, 0x4f, 0x52, 0x4f, 0x10, 0x32, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x48, 0x4f, 0x53, 0x54, 0x57, 0x48, 0x49, 0x54,
	0x45, 0x10, 0x33, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x47, 0x4f,
	0x4c, 0x44, 0x10, 0x34, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x47,
	0x4f, 0x4c, 0x44, 0x45, 0x4e, 0x52, 0x4f, 0x44, 0x10, 0x35, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x2f, 0x0a, 0x04, 0x47, 0x52, 0x41, 0x59, 0x10, 0x36, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x37, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x59, 0x45, 0x4c,
	0x4c, 0x4f, 0x57, 0x10, 0x38, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04,
	0x47, 0x52, 0x45, 0x59, 0x10, 0x39, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x48, 0x4f, 0x4e, 0x45, 0x59, 0x44, 0x45, 0x57, 0x10, 0x3a, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x48, 0x4f, 0x54, 0x50, 0x49, 0x4e, 0x4b, 0x10, 0x3b, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x49, 0x4e, 0x44, 0x49, 0x41, 0x4e,
	0x52, 0x45, 0x44, 0x10, 0x3c, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x49, 0x4e, 0x44, 0x49, 0x47, 0x4f, 0x10, 0x3d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x49, 0x56, 0x4f, 0x52, 0x59, 0x10, 0x3e, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x4b, 0x48, 0x41, 0x4b, 0x49, 0x10, 0x3f, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x4c, 0x41, 0x56, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x10,
	0x40, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x4c, 0x41, 0x56, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x42, 0x4c, 0x55, 0x53, 0x48, 0x10, 0x41, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x41, 0x57, 0x4e, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10,
	0x42, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x4c, 0x45, 0x4d, 0x4f,
	0x4e, 0x43, 0x48, 0x49, 0x46, 0x46, 0x4f, 0x4e, 0x10, 0x43, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x44,
	0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x43, 0x4f, 0x52, 0x41, 0x4c, 0x10, 0x45, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x43, 0x59, 0x41, 0x4e, 0x10, 0x46, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x14, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x47, 0x4f, 0x4c,
	0x44, 0x45, 0x4e, 0x52, 0x4f, 0x44, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x47, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x47, 0x52,
	0x41, 0x59, 0x10, 0x48, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x4c,
	0x49, 0x47, 0x48, 0x54, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x49, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x47, 0x52, 0x45, 0x59, 0x10,
	0x4a, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x49, 0x47, 0x48,
	0x54, 0x50, 0x49, 0x4e, 0x4b, 0x10, 0x4b, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x36,
	0x0a, 0x0b, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x53, 0x41, 0x4c, 0x4d, 0x4f, 0x4e, 0x10, 0x4c, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x53,
	0x45, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x4d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x37, 0x0a, 0x0c, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x53, 0x4b, 0x59, 0x42, 0x4c, 0x55, 0x45,
	0x10, 0x4e, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x4c, 0x49, 0x47,
	0x48, 0x54, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x47, 0x52, 0x41, 0x59, 0x10, 0x4f, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x53, 0x4c, 0x41,
	0x54, 0x45, 0x47, 0x52, 0x45, 0x59, 0x10, 0x50, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x0e, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x53, 0x54, 0x45, 0x45, 0x4c, 0x42, 0x4c, 0x55,
	0x45, 0x10, 0x51, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x52, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x4c, 0x49, 0x4d, 0x45, 0x10, 0x53, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x49, 0x4d, 0x45, 0x47, 0x52, 0x45, 0x45, 0x4e,
	0x10, 0x54, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x4c, 0x49, 0x4e,
	0x45, 0x4e, 0x10, 0x55, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x4d,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x10, 0x56, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x31, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4f, 0x4f, 0x4e, 0x10, 0x57, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x3b, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x41, 0x51, 0x55, 0x41,
	0x4d, 0x41, 0x52, 0x49, 0x4e, 0x45, 0x10, 0x58, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x0a, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x59, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d,
	0x4f, 0x52, 0x43, 0x48, 0x49, 0x44, 0x10, 0x5a, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x0c, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x10,
	0x5b, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x4d, 0x45, 0x44, 0x49,
	0x55, 0x4d, 0x53, 0x45, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x5c, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x53, 0x4c, 0x41,
	0x54, 0x45, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x5d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x11, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x47, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x5e, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x3a, 0x0a,
	0x0f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x54, 0x55, 0x52, 0x51, 0x55, 0x4f, 0x49, 0x53, 0x45,
	0x10, 0x5f, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x4d, 0x45, 0x44,
	0x49, 0x55, 0x4d, 0x56, 0x49, 0x4f, 0x4c, 0x45, 0x54, 0x52, 0x45, 0x44, 0x10, 0x60, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x4d, 0x49, 0x44, 0x4e, 0x49, 0x47, 0x48,
	0x54, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x61, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x4d, 0x49, 0x4e, 0x54, 0x43, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x62, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4d, 0x49, 0x53, 0x54, 0x59, 0x52, 0x4f, 0x53,
	0x45, 0x10, 0x63, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x4d, 0x4f,
	0x43, 0x43, 0x41, 0x53, 0x49, 0x4e, 0x10, 0x64, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x0b, 0x4e, 0x41, 0x56, 0x41, 0x4a, 0x4f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x65,
	0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x4e, 0x41, 0x56, 0x59, 0x10,
	0x66, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x4f, 0x4c, 0x44, 0x4c,
	0x41, 0x43, 0x45, 0x10, 0x67, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05,
	0x4f, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x68, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x4f, 0x4c, 0x49, 0x56, 0x45, 0x44, 0x52, 0x41, 0x42, 0x10, 0x69, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x6a,
	0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x52, 0x41, 0x4e, 0x47,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x6b, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a,
	0x06, 0x4f, 0x52, 0x43, 0x48, 0x49, 0x44, 0x10, 0x6c, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x38, 0x0a, 0x0d, 0x50, 0x41, 0x4c, 0x45, 0x47, 0x4f, 0x4c, 0x44, 0x45, 0x4e, 0x52, 0x4f,
	0x44, 0x10, 0x6d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x50, 0x41,
	0x4c, 0x45, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x6e, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x38, 0x0a, 0x0d, 0x50, 0x41, 0x4c, 0x45, 0x54, 0x55, 0x52, 0x51, 0x55, 0x4f, 0x49, 0x53,
	0x45, 0x10, 0x6f, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x50, 0x41,
	0x4c, 0x45, 0x56, 0x49, 0x4f, 0x4c, 0x45, 0x54, 0x52, 0x45, 0x44, 0x10, 0x70, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x50, 0x41, 0x50, 0x41, 0x59, 0x41, 0x57, 0x48,
	0x49, 0x50, 0x10, 0x71, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x50,
	0x45, 0x41, 0x43, 0x48, 0x50, 0x55, 0x46, 0x46, 0x10, 0x72, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x45, 0x52, 0x55, 0x10, 0x73, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x49, 0x4e, 0x4b, 0x10, 0x74, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x4c, 0x55, 0x4d, 0x10, 0x75, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x50, 0x4f, 0x57, 0x44, 0x45, 0x52, 0x42, 0x4c,
	0x55, 0x45, 0x10, 0x76, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x50,
	0x55, 0x52, 0x50, 0x4c, 0x45, 0x10, 0x77, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x0d, 0x52, 0x45, 0x42, 0x45, 0x43, 0x43, 0x41, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x10,
	0x78, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x52, 0x45, 0x44, 0x10,
	0x79, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x52, 0x4f, 0x53, 0x59,
	0x42, 0x52, 0x4f, 0x57, 0x4e, 0x10, 0x7a, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x52, 0x4f, 0x59, 0x41, 0x4c, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x7b, 0x1a, 0x25, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x53, 0x41, 0x44, 0x44, 0x4c, 0x45, 0x42, 0x52,
	0x4f, 0x57, 0x4e, 0x10, 0x7c, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x53, 0x41, 0x4c, 0x4d, 0x4f, 0x4e, 0x10, 0x7d, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x0a, 0x53, 0x41, 0x4e, 0x44, 0x59, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x10, 0x7e, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x53, 0x45, 0x41, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x10, 0x7f, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x53,
	0x45, 0x41, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10, 0x80, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x49, 0x45, 0x4e, 0x4e, 0x41, 0x10, 0x81, 0x01, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x10,
	0x82, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x4b, 0x59,
	0x42, 0x4c, 0x55, 0x45, 0x10, 0x83, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x09, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x84, 0x01, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x47, 0x52,
	0x41, 0x59, 0x10, 0x85, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09,
	0x53, 0x4c, 0x41, 0x54, 0x45, 0x47, 0x52, 0x45, 0x59, 0x10, 0x86, 0x01, 0x1a, 0x25, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x53, 0x4e, 0x4f, 0x57, 0x10, 0x87, 0x01, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x47, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x88, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x09, 0x53, 0x54, 0x45, 0x45, 0x4c, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x89, 0x01, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x03, 0x54, 0x41, 0x4e, 0x10, 0x8a, 0x01, 0x1a,
	0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x45, 0x41, 0x4c, 0x10, 0x8b,
	0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x54, 0x48, 0x49, 0x53,
	0x54, 0x4c, 0x45, 0x10, 0x8c, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x06, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x4f, 0x10, 0x8d, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x09, 0x54, 0x55, 0x52, 0x51, 0x55, 0x4f, 0x49, 0x53, 0x45, 0x10, 0x8e,
	0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x56, 0x49, 0x4f, 0x4c,
	0x45, 0x54, 0x10, 0x8f, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05,
	0x57, 0x48, 0x45, 0x41, 0x54, 0x10, 0x90, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x31, 0x0a, 0x05, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x91, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x57, 0x48, 0x49, 0x54, 0x45, 0x53, 0x4d, 0x4f, 0x4b, 0x45,
	0x10, 0x92, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x59, 0x45,
	0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x93, 0x01, 0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37,
	0x0a, 0x0b, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x94, 0x01,
	0x1a, 0x25, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x2e, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x28, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xec, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x22, 0xd0, 0x19, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x02, 0x41, 0x52, 0x10, 0x01,
	0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66,
	0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x42, 0x47, 0x10, 0x02, 0x1a,
	0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a,
	0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x42, 0x47, 0x5f, 0x42, 0x47, 0x10,
	0x03, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x62, 0x67, 0x2d, 0x42, 0x47, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70,
	0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x42, 0x4e, 0x10, 0x04, 0x1a, 0x15, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x43, 0x53, 0x10, 0x05, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x43, 0x53, 0x5f, 0x43, 0x5a, 0x10, 0x06, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x63, 0x73, 0x2d, 0x43, 0x5a, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d,
	0x0a, 0x02, 0x42, 0x53, 0x10, 0x07, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72,
	0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a,
	0x05, 0x42, 0x53, 0x5f, 0x42, 0x41, 0x10, 0x08, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05,
	0x62, 0x73, 0x2d, 0x42, 0x41, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69,
	0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x44, 0x41,
	0x10, 0x09, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x44, 0x41, 0x5f,
	0x44, 0x4b, 0x10, 0x0a, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x64, 0x61, 0x2d, 0x44,
	0x4b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a,
	0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x44, 0x45, 0x10, 0x0b, 0x1a, 0x15,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x41, 0x54, 0x10, 0x0c,
	0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x64, 0x65, 0x2d, 0x41, 0x54, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x43, 0x48, 0x10, 0x0d, 0x1a, 0x20, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x05, 0x64, 0x65, 0x2d, 0x43, 0x48, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f,
	0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12,
	0x2b, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x10, 0x0e, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x05, 0x64, 0x65, 0x2d, 0x44, 0x45, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e,
	0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02,
	0x45, 0x4c, 0x10, 0x0f, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a,
	0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x4c, 0x5f, 0x47, 0x52, 0x10, 0x10, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6c,
	0x2d, 0x47, 0x52, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74,
	0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x45, 0x4e, 0x10, 0x11,
	0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66,
	0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x41, 0x55,
	0x10, 0x12, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6e, 0x2d, 0x41, 0x55, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63,
	0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x43, 0x41, 0x10, 0x13, 0x1a,
	0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6e, 0x2d, 0x43, 0x41, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x47, 0x42, 0x10, 0x14, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6e, 0x2d, 0x47, 0x42, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b,
	0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x10, 0x15, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x05, 0x65, 0x6e, 0x2d, 0x49, 0x4e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a,
	0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x4e, 0x5f, 0x4e, 0x5a, 0x10, 0x16, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6e,
	0x2d, 0x4e, 0x5a, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74,
	0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x53,
	0x47, 0x10, 0x17, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6e, 0x2d, 0x53, 0x47,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x55, 0x53, 0x10, 0x18,
	0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x6e, 0x2d, 0x55, 0x53, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x45, 0x53, 0x10, 0x19, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x41, 0x52, 0x10, 0x1a, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x65, 0x73, 0x2d, 0x41, 0x52, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b,
	0x0a, 0x05, 0x45, 0x53, 0x5f, 0x45, 0x53, 0x10, 0x1b, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x05, 0x65, 0x73, 0x2d, 0x45, 0x53, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a,
	0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x53, 0x5f, 0x55, 0x59, 0x10, 0x1c, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x73,
	0x2d, 0x55, 0x59, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74,
	0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x45, 0x54, 0x10, 0x1d,
	0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66,
	0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x54, 0x5f, 0x45, 0x45,
	0x10, 0x1e, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x65, 0x74, 0x2d, 0x45, 0x45, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63,
	0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x46, 0x49, 0x10, 0x1f, 0x1a, 0x15, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70,
	0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x46, 0x52, 0x10, 0x20, 0x1a, 0x15, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x46, 0x52, 0x5f, 0x42, 0x45, 0x10, 0x21, 0x1a, 0x20, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x05, 0x66, 0x72, 0x2d, 0x42, 0x45, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f,
	0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12,
	0x2b, 0x0a, 0x05, 0x46, 0x52, 0x5f, 0x43, 0x48, 0x10, 0x22, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x05, 0x66, 0x72, 0x2d, 0x43, 0x48, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e,
	0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05,
	0x46, 0x52, 0x5f, 0x46, 0x52, 0x10, 0x23, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x66,
	0x72, 0x2d, 0x46, 0x52, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x46, 0x49, 0x5f,
	0x46, 0x49, 0x10, 0x24, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x66, 0x69, 0x2d, 0x46,
	0x49, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a,
	0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x46, 0x52, 0x5f, 0x43, 0x41, 0x10,
	0x25, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x66, 0x72, 0x2d, 0x43, 0x41, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70,
	0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x46, 0x59, 0x10, 0x26, 0x1a, 0x15, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x46, 0x59, 0x5f, 0x4e, 0x4c, 0x10, 0x27, 0x1a, 0x20, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x05, 0x66, 0x79, 0x2d, 0x4e, 0x4c, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f,
	0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12,
	0x1d, 0x0a, 0x02, 0x48, 0x49, 0x10, 0x28, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d,
	0x0a, 0x02, 0x48, 0x52, 0x10, 0x29, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72,
	0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a,
	0x05, 0x48, 0x52, 0x5f, 0x48, 0x52, 0x10, 0x2a, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05,
	0x68, 0x72, 0x2d, 0x48, 0x52, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69,
	0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x49, 0x53,
	0x10, 0x2b, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x49, 0x53, 0x5f,
	0x49, 0x53, 0x10, 0x2c, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x69, 0x73, 0x2d, 0x49,
	0x53, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a,
	0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x49, 0x54, 0x10, 0x2d, 0x1a, 0x15,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x10, 0x2e,
	0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x69, 0x74, 0x2d, 0x43, 0x48, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x49, 0x54, 0x5f, 0x49, 0x54, 0x10, 0x2f, 0x1a, 0x20, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x05, 0x69, 0x74, 0x2d, 0x49, 0x54, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f,
	0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12,
	0x1d, 0x0a, 0x02, 0x4a, 0x41, 0x10, 0x30, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d,
	0x0a, 0x02, 0x4b, 0x4f, 0x10, 0x31, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72,
	0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a,
	0x02, 0x4c, 0x54, 0x10, 0x32, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e,
	0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05,
	0x4c, 0x54, 0x5f, 0x4c, 0x54, 0x10, 0x33, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x6c,
	0x74, 0x2d, 0x4c, 0x54, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x4c, 0x56, 0x10,
	0x34, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74,
	0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x4c, 0x56, 0x5f, 0x4c,
	0x56, 0x10, 0x35, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x6c, 0x76, 0x2d, 0x4c, 0x56,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x4e, 0x4c, 0x10, 0x36, 0x1a, 0x15, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63,
	0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x4e, 0x4c, 0x5f, 0x42, 0x45, 0x10, 0x37, 0x1a,
	0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x6e, 0x6c, 0x2d, 0x42, 0x45, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x4e, 0x4c, 0x5f, 0x4e, 0x4c, 0x10, 0x38, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x6e, 0x6c, 0x2d, 0x4e, 0x4c, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d,
	0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x39, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72,
	0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a,
	0x05, 0x4e, 0x4f, 0x5f, 0x4e, 0x4f, 0x10, 0x3a, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05,
	0x6e, 0x6f, 0x2d, 0x4e, 0x4f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69,
	0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x50, 0x41,
	0x10, 0x3b, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x50, 0x4c, 0x10,
	0x3c, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74,
	0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x50, 0x4c, 0x5f, 0x50,
	0x4c, 0x10, 0x3d, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x70, 0x6c, 0x2d, 0x50, 0x4c,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x50, 0x54, 0x10, 0x3e, 0x1a, 0x15, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63,
	0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x50, 0x54, 0x5f, 0x50, 0x54, 0x10, 0x3f, 0x1a,
	0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x70, 0x74, 0x2d, 0x50, 0x54, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x50, 0x54, 0x5f, 0x42, 0x52, 0x10, 0x40, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x70, 0x74, 0x2d, 0x42, 0x52, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d,
	0x0a, 0x02, 0x52, 0x4f, 0x10, 0x41, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72,
	0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a,
	0x05, 0x52, 0x4f, 0x5f, 0x52, 0x4f, 0x10, 0x42, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05,
	0x72, 0x6f, 0x2d, 0x52, 0x4f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69,
	0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x52, 0x55,
	0x10, 0x43, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x52, 0x55, 0x5f,
	0x52, 0x55, 0x10, 0x44, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x72, 0x75, 0x2d, 0x52,
	0x55, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a,
	0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x53, 0x4b, 0x10, 0x45, 0x1a, 0x15,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x53, 0x4b, 0x5f, 0x53, 0x4b, 0x10, 0x46,
	0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x73, 0x6b, 0x2d, 0x53, 0x4b, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a,
	0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x53, 0x4c, 0x10, 0x47, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x53, 0x4c, 0x5f, 0x53, 0x49, 0x10, 0x48, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x73, 0x6c, 0x2d, 0x53, 0x49, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d,
	0x0a, 0x02, 0x53, 0x52, 0x10, 0x49, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72,
	0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a,
	0x05, 0x53, 0x52, 0x5f, 0x52, 0x53, 0x10, 0x4a, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05,
	0x73, 0x72, 0x2d, 0x52, 0x53, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69,
	0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x53, 0x56,
	0x10, 0x4b, 0x1a, 0x15, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65,
	0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x53, 0x56, 0x5f,
	0x53, 0x45, 0x10, 0x4c, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x73, 0x76, 0x2d, 0x53,
	0x45, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a,
	0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x54, 0x45, 0x10, 0x4d, 0x1a, 0x15,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62,
	0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x1d, 0x0a, 0x02, 0x5a, 0x48, 0x10, 0x4e, 0x1a, 0x15, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63,
	0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x5a, 0x48, 0x5f, 0x43, 0x4e, 0x10, 0x4f, 0x1a,
	0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x7a, 0x68, 0x2d, 0x43, 0x4e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34,
	0x37, 0x12, 0x2b, 0x0a, 0x05, 0x5a, 0x48, 0x5f, 0x48, 0x4b, 0x10, 0x50, 0x1a, 0x20, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x7a, 0x68, 0x2d, 0x48, 0x4b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75,
	0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b,
	0x0a, 0x05, 0x5a, 0x48, 0x5f, 0x53, 0x47, 0x10, 0x51, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x05, 0x7a, 0x68, 0x2d, 0x53, 0x47, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a,
	0x69, 0x65, 0x74, 0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x12, 0x2b, 0x0a, 0x05, 0x5a,
	0x48, 0x5f, 0x54, 0x57, 0x10, 0x52, 0x1a, 0x20, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x7a, 0x68,
	0x2d, 0x54, 0x57, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x0f, 0x75, 0x72, 0x6e, 0x3a, 0x69, 0x65, 0x74,
	0x66, 0x3a, 0x62, 0x63, 0x70, 0x3a, 0x34, 0x37, 0x1a, 0x2c, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x26,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf6, 0x02, 0x0a, 0x1b, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xd6, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x50,
	0x52, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x01, 0x1a, 0x2c, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x26, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x46, 0x49,
	0x4e, 0x41, 0x4c, 0x10, 0x02, 0x1a, 0x2c, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x26, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x49,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0x2c, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x26, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x4d, 0x49, 0x54, 0x49, 0x47,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x2e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x28, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2d,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x37, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x31, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xe1, 0x0f, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xc9, 0x0f, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3a, 0x0a, 0x04,
	0x4d, 0x4f, 0x52, 0x4e, 0x10, 0x01, 0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x4d, 0x4f,
	0x52, 0x4e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0a, 0x4d, 0x4f, 0x52, 0x4e,
	0x5f, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x02, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a,
	0x4d, 0x4f, 0x52, 0x4e, 0x2e, 0x65, 0x61, 0x72, 0x6c, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x12, 0x44, 0x0a, 0x09, 0x4d, 0x4f, 0x52, 0x4e, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x03, 0x1a,
	0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x4d, 0x4f, 0x52, 0x4e, 0x2e, 0x6c, 0x61, 0x74, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x4e, 0x10, 0x04,
	0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x4e, 0x4f, 0x4f, 0x4e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x38, 0x0a, 0x03, 0x41, 0x46, 0x54, 0x10, 0x05, 0x1a, 0x2f, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x03, 0x41, 0x46, 0x54, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x09,
	0x41, 0x46, 0x54, 0x5f, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x06, 0x1a, 0x35, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x09, 0x41, 0x46, 0x54, 0x2e, 0x65, 0x61, 0x72, 0x6c, 0x79, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x42, 0x0a, 0x08, 0x41, 0x46, 0x54, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x07,
	0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x41, 0x46, 0x54, 0x2e, 0x6c, 0x61, 0x74, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x03, 0x45, 0x56, 0x45, 0x10, 0x08, 0x1a,
	0x2f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x45, 0x56, 0x45, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x12, 0x44, 0x0a, 0x09, 0x45, 0x56, 0x45, 0x5f, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x09, 0x1a,
	0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x45, 0x56, 0x45, 0x2e, 0x65, 0x61, 0x72, 0x6c, 0x79,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x08, 0x45, 0x56, 0x45, 0x5f, 0x4c, 0x41,
	0x54, 0x45, 0x10, 0x0a, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x45, 0x56, 0x45, 0x2e,
	0x6c, 0x61, 0x74, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x05, 0x4e, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x0b, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x4e, 0x49, 0x47,
	0x48, 0x54, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x03, 0x50, 0x48, 0x53, 0x10,
	0x0c, 0x1a, 0x2f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x50, 0x48, 0x53, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x38, 0x0a, 0x03, 0x49, 0x4d, 0x44, 0x10, 0x1b, 0x1a, 0x2f, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x03, 0x49, 0x4d, 0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x02,
	0x48, 0x53, 0x10, 0x0d, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x02, 0x48, 0x53, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x57, 0x41, 0x4b, 0x45,
	0x10, 0x0e, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x57, 0x41, 0x4b, 0x45, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x01, 0x43, 0x10, 0x0f, 0x1a,
	0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x43, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x02, 0x43, 0x4d, 0x10, 0x10, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x02, 0x43, 0x4d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a,
	0x0a, 0x02, 0x43, 0x44, 0x10, 0x11, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x02, 0x43, 0x44,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x02, 0x43, 0x56,
	0x10, 0x12, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x02, 0x43, 0x56, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x02, 0x41, 0x43, 0x10, 0x13, 0x1a, 0x42,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x02, 0x41, 0x43, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x03, 0x41, 0x43, 0x4d, 0x10, 0x14, 0x1a, 0x43, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x03, 0x41, 0x43, 0x4d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x4c, 0x0a, 0x03, 0x41, 0x43, 0x44, 0x10, 0x15, 0x1a, 0x43, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x03, 0x41, 0x43, 0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c,
	0x0a, 0x03, 0x41, 0x43, 0x56, 0x10, 0x16, 0x1a, 0x43, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x41,
	0x43, 0x56, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33,
	0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x02,
	0x50, 0x43, 0x10, 0x17, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x02, 0x50, 0x43, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x03, 0x50, 0x43, 0x4d, 0x10,
	0x18, 0x1a, 0x43, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x50, 0x43, 0x4d, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x03, 0x50, 0x43, 0x44, 0x10, 0x19, 0x1a,
	0x43, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x50, 0x43, 0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x03, 0x50, 0x43, 0x56, 0x10, 0x1a, 0x1a, 0x43, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x03, 0x50, 0x43, 0x56, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x34, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x2f, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x22, 0xb4, 0x02, 0x0a, 0x29, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65,
	0x74, 0x22, 0x86, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c,
	0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x4b, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x3c, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x36, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x49,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x1a, 0x3c, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x36, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x41, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x3b, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x69, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x1f, 0x49,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0x85,
	0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x35, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x1a, 0x26, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x1a, 0x26, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x5f,
	0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x1a, 0x26, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x20, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x36,
	0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x30, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x2f, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0x8b, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x02, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73,
	0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x1a, 0x2d, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x36, 0xca, 0xa5, 0x9a,
	0xa0, 0x08, 0x30, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x10, 0x4c, 0x44, 0x4c, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0x81, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3e, 0x0a,
	0x15, 0x4c, 0x44, 0x4c, 0x5f, 0x43, 0x48, 0x4f, 0x4c, 0x45, 0x53, 0x54, 0x45, 0x52, 0x4f, 0x4c,
	0x5f, 0x41, 0x53, 0x53, 0x41, 0x59, 0x10, 0x01, 0x1a, 0x23, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07,
	0x31, 0x38, 0x32, 0x36, 0x32, 0x2d, 0x36, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x10, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x6c, 0x6f, 0x69, 0x6e, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x69, 0x0a,
	0x40, 0x43, 0x48, 0x4f, 0x4c, 0x45, 0x53, 0x54, 0x45, 0x52, 0x4f, 0x4c, 0x5f, 0x49, 0x4e, 0x5f,
	0x4c, 0x44, 0x4c, 0x5f, 0x4d, 0x41, 0x53, 0x53, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f,
	0x49, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x55, 0x4d, 0x5f, 0x4f, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x53,
	0x4d, 0x41, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x41, 0x4c, 0x43, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x02, 0x1a, 0x23, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x31, 0x33, 0x34, 0x35, 0x37,
	0x2d, 0x37, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x10, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x6c,
	0x6f, 0x69, 0x6e, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x1a, 0x32, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x2c,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x6c, 0x69, 0x70,
	0x69, 0x64, 0x2d, 0x6c, 0x64, 0x6c, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xc8, 0x14, 0x0a,
	0x23, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x22, 0xa0, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x1a, 0x2f, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a,
	0x0d, 0x4a, 0x55, 0x53, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3d, 0x0a, 0x08, 0x43, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x1a,
	0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x50, 0x52, 0x45, 0x44, 0x45, 0x43, 0x45, 0x53, 0x53, 0x4f, 0x52, 0x10,
	0x04, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x4f, 0x52, 0x10,
	0x05, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x46, 0x52,
	0x4f, 0x4d, 0x10, 0x06, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x53,
	0x5f, 0x4f, 0x4e, 0x10, 0x07, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53,
	0x45, 0x44, 0x5f, 0x4f, 0x46, 0x10, 0x08, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54,
	0x5f, 0x4f, 0x46, 0x10, 0x09, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x41, 0x4d, 0x45, 0x4e, 0x44, 0x53,
	0x10, 0x0a, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x41, 0x4d, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x57,
	0x49, 0x54, 0x48, 0x10, 0x0b, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44,
	0x53, 0x10, 0x0c, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x0d, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x49, 0x54, 0x45,
	0x53, 0x10, 0x0e, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x43, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59,
	0x10, 0x0f, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f,
	0x4f, 0x4e, 0x10, 0x10, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x49, 0x4e, 0x10, 0x11, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49,
	0x4e, 0x53, 0x10, 0x12, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e,
	0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x13, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x43, 0x4f, 0x52, 0x52,
	0x45, 0x43, 0x54, 0x53, 0x10, 0x14, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x43, 0x4f, 0x52, 0x52, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x10, 0x15, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x52,
	0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x53, 0x10, 0x16, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x52, 0x45,
	0x50, 0x4c, 0x41, 0x43, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x17, 0x1a, 0x2f, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x52, 0x45, 0x54, 0x52, 0x41, 0x43, 0x54, 0x53, 0x10, 0x18, 0x1a, 0x2f, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a,
	0x0c, 0x52, 0x45, 0x54, 0x52, 0x41, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x10, 0x19, 0x1a,
	0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3a, 0x0a, 0x05, 0x53, 0x49, 0x47, 0x4e, 0x53, 0x10, 0x1a, 0x1a, 0x2f, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x53, 0x49, 0x4d, 0x49, 0x4c, 0x41, 0x52, 0x5f, 0x54, 0x4f, 0x10, 0x1b, 0x1a, 0x2f, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a,
	0x08, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x10, 0x1c, 0x1a, 0x2f, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x1d,
	0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x53, 0x10,
	0x1e, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x45,
	0x44, 0x5f, 0x49, 0x4e, 0x54, 0x4f, 0x10, 0x1f, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x20, 0x1a,
	0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3e, 0x0a, 0x09, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x21, 0x1a,
	0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x45, 0x0a, 0x10, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4f, 0x46, 0x10, 0x22, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x23, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x29, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x43, 0x49,
	0x54, 0x45, 0x5f, 0x41, 0x53, 0x10, 0x24, 0x1a, 0x2f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x29, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x52,
	0x49, 0x4e, 0x54, 0x10, 0x25, 0x1a, 0x38, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x48, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x46, 0x10, 0x26, 0x1a,
	0x38, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x2d, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x1a, 0x3c, 0xca, 0xa5, 0x9a, 0xa0, 0x08,
	0x36, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x2d, 0x61, 0x6c, 0x6c, 0x22, 0xda, 0x0b, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xb9, 0x0b, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x46, 0x0a,
	0x0b, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x35,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x02, 0x1a,
	0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x41,
	0x0a, 0x09, 0x43, 0x41, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x03, 0x1a, 0x32, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x10, 0x04, 0x1a, 0x2f, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x59, 0x0a,
	0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x05, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1c, 0x43, 0x4f, 0x56, 0x45,
	0x52, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x10, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x1a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x07, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a,
	0x12, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x08, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x65, 0x0a, 0x1b, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x09, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x49, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x4d, 0x45, 0x44,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x0a, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d,
	0x0a, 0x0f, 0x4e, 0x55, 0x54, 0x52, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x10, 0x0b, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x4e, 0x75, 0x74, 0x72, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x59, 0x0a,
	0x15, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x43, 0x48, 0x45, 0x53, 0x54,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x11, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0c, 0x1a, 0x38, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x53, 0x55, 0x50, 0x50, 0x4c,
	0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0d, 0x1a, 0x37, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x0e, 0x1a, 0x2e,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x54, 0x61, 0x73, 0x6b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42,
	0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x12, 0x1a, 0x33, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0f, 0x1a, 0x3c, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x12, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x39, 0xca, 0xa5, 0x9a, 0xa0, 0x08,
	0x33, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x22, 0xa6, 0x63, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0x8d, 0x63,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x1a, 0x3c, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x41, 0x43, 0x54,
	0x4f, 0x52, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x95, 0x01,
	0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x20, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x96, 0x01, 0x1a, 0x48, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d,
	0x41, 0x44, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x1a,
	0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x41, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x41, 0x4c, 0x4c, 0x45, 0x52,
	0x47, 0x59, 0x5f, 0x49, 0x4e, 0x54, 0x4f, 0x4c, 0x45, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x04,
	0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x41, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x79, 0x49,
	0x6e, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x0b, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x1a,
	0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x06,
	0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x56, 0x0a, 0x13, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x45,
	0x53, 0x53, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x97, 0x01, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x12, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x41, 0x55, 0x44, 0x49, 0x54,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x08, 0x1a, 0x2f, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x42, 0x49,
	0x4e, 0x41, 0x52, 0x59, 0x10, 0x09, 0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1c, 0x42, 0x49, 0x4f, 0x4c,
	0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x44,
	0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x0a, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x1a, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x78, 0x0a, 0x25, 0x42, 0x49, 0x4f, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59,
	0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x44, 0x49, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x98, 0x01, 0x1a, 0x4c, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x22, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x10, 0x0b, 0x1a, 0x37,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x42, 0x6f, 0x64, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x42, 0x55, 0x4e, 0x44, 0x4c,
	0x45, 0x10, 0x0c, 0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x0d, 0x1a,
	0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x41,
	0x0a, 0x09, 0x43, 0x41, 0x52, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x0e, 0x1a, 0x32, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x41, 0x0a, 0x09, 0x43, 0x41, 0x52, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x0f,
	0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x61, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x10, 0x11, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x16, 0x43,
	0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x12, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x43, 0x49, 0x54, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x99, 0x01, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x4c,
	0x41, 0x49, 0x4d, 0x10, 0x13, 0x1a, 0x2f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x14, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x43, 0x4c, 0x49, 0x4e, 0x49, 0x43, 0x41, 0x4c, 0x5f,
	0x49, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x15, 0x1a, 0x3c, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x12, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x17, 0x43, 0x4c,
	0x49, 0x4e, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x9a, 0x01, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15,
	0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x16, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x17, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x15,
	0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x18, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x50, 0x41,
	0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x19, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x1a, 0x1a, 0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b,
	0x43, 0x4f, 0x4e, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x1b, 0x1a, 0x34, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x61, 0x70, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x1c, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x9b, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x1d, 0x1a, 0x31,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x1e, 0x1a,
	0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x10,
	0x1f, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1c, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x41, 0x47,
	0x45, 0x5f, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x20, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x68, 0x0a,
	0x1d, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x21,
	0x1a, 0x45, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1b, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x45, 0x54, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x22, 0x1a, 0x37, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0d, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x23,
	0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x53, 0x53,
	0x4f, 0x43, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x9c, 0x01, 0x1a, 0x3b, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x24, 0x1a,
	0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x9d,
	0x01, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x10, 0x25, 0x1a, 0x36,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x26, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x9e, 0x01, 0x1a, 0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a,
	0x11, 0x44, 0x49, 0x41, 0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x10, 0x28, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x53, 0x0a, 0x12, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x46,
	0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x2a, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x45, 0x4e, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x10, 0x2d, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x45, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x45, 0x4e, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x9f,
	0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x08, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x2e, 0x1a, 0x32, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x53, 0x0a, 0x12, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x2f, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x30, 0x1a, 0x3c, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x12, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x45,
	0x50, 0x49, 0x53, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x43, 0x41, 0x52, 0x45, 0x10, 0x31,
	0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4f,
	0x66, 0x43, 0x61, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x32, 0x1a,
	0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x45, 0x56,
	0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x33, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08,
	0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f,
	0x45, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0xa0, 0x01, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11,
	0x45, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x34, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x45, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x4f, 0x0a, 0x10, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41,
	0x52, 0x49, 0x4f, 0x10, 0x35, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x5a, 0x0a, 0x16, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4f, 0x46, 0x5f, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x54, 0x10, 0x36, 0x1a, 0x3e, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x14, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x66, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x15,
	0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x48, 0x49,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x37, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x46, 0x4c, 0x41, 0x47, 0x10, 0x38,
	0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x46, 0x6c, 0x61, 0x67, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x4c, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x4d, 0x55, 0x4c, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0xa1, 0x01, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x46, 0x6f, 0x72,
	0x6d, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x0d, 0x47, 0x45, 0x4e, 0x4f, 0x4d, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x59, 0x10,
	0xa2, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x47, 0x65, 0x6e, 0x6f, 0x6d, 0x69,
	0x63, 0x53, 0x74, 0x75, 0x64, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x47, 0x4f,
	0x41, 0x4c, 0x10, 0x39, 0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x47, 0x6f, 0x61, 0x6c,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x3a, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0f, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x3b,
	0x1a, 0x2f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x51, 0x0a, 0x11, 0x47, 0x55, 0x49, 0x44, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x3c, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10,
	0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x43, 0x41,
	0x52, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x3d, 0x1a, 0x3b, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x11, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x49, 0x4d, 0x41,
	0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xa3,
	0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a,
	0x0d, 0x49, 0x4d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x59, 0x10, 0x3e,
	0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x75, 0x64, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x49, 0x4d, 0x4d, 0x55,
	0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x3f, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0c, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x5d, 0x0a, 0x17, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x40, 0x1a,
	0x40, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x16, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x65, 0x0a, 0x1b, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x41, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x49, 0x4d, 0x50, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x55, 0x49, 0x44, 0x45,
	0x10, 0x42, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x65, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x45, 0x0a, 0x0a, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0xa4, 0x01, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x49, 0x4e, 0x53, 0x55,
	0x52, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x43, 0x1a, 0x37, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0d, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f,
	0x52, 0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0xa5, 0x01, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0xa6, 0x01, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0f, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x10, 0x44, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59,
	0x10, 0x45, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x4c, 0x49, 0x4e, 0x4b, 0x41, 0x47, 0x45,
	0x10, 0x46, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x47, 0x1a,
	0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x4c, 0x69, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x40, 0x0a, 0x08, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x48, 0x1a, 0x32, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x67, 0x0a, 0x1c, 0x4d, 0x41, 0x4e, 0x55, 0x46, 0x41, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x44, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0xa7, 0x01, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x4d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x4d, 0x45,
	0x41, 0x53, 0x55, 0x52, 0x45, 0x10, 0x49, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x45,
	0x41, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x4a, 0x1a, 0x37,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x4d, 0x45, 0x44, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4c, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x61, 0x0a,
	0x19, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4d, 0x1a, 0x42, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x18, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x55, 0x0a, 0x13, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x49, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x4e, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x12, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x4d, 0x45, 0x44, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x10,
	0x4f, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x53, 0x0a, 0x12, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x50, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x51, 0x1a,
	0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x67,
	0x0a, 0x1c, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xa8,
	0x01, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x5c, 0x1a,
	0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x5d,
	0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x4d, 0x4f, 0x4c,
	0x45, 0x43, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x5e, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x4d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c,
	0x61, 0x72, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49,
	0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0x5f, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x4e, 0x55, 0x54,
	0x52, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x54, 0x41, 0x4b, 0x45, 0x10, 0xa9, 0x01,
	0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x4e,
	0x55, 0x54, 0x52, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x60,
	0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x4e, 0x55,
	0x54, 0x52, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10,
	0xaa, 0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x0b, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x61, 0x1a,
	0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x62, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x63, 0x1a, 0x3d, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d,
	0x45, 0x10, 0x64, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x0c, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x65, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x18, 0x4f, 0x52, 0x47,
	0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x46, 0x46, 0x49, 0x4c, 0x49,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x66, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x17, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6c,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x1b, 0x50, 0x41,
	0x43, 0x4b, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xab, 0x01, 0x1a, 0x43, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x19, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10,
	0x67, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x50, 0x41, 0x54, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x68, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x50, 0x41, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x10, 0x69, 0x1a, 0x37, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x52, 0x45, 0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6a,
	0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0xac, 0x01, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x50, 0x45, 0x52, 0x53,
	0x4f, 0x4e, 0x10, 0x6b, 0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6c, 0x1a, 0x38, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x50, 0x52, 0x41, 0x43, 0x54, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x45, 0x52, 0x10, 0x6d, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x50,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x51, 0x0a, 0x11, 0x50, 0x52, 0x41, 0x43, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x45, 0x52, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x10, 0x6e, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x50, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x44, 0x55, 0x52, 0x45, 0x10,
	0x6f, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x4e,
	0x41, 0x4e, 0x43, 0x45, 0x10, 0x70, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x50, 0x72,
	0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0d,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x4e, 0x41, 0x49, 0x52, 0x45, 0x10, 0x71, 0x1a,
	0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x4e, 0x41, 0x49, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0x72, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x17, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0xad, 0x01, 0x1a, 0x40, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x16, 0x52, 0x65, 0x67, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x73, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52,
	0x43, 0x48, 0x45, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xae, 0x01, 0x1a, 0x3e,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49,
	0x0a, 0x0c, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0xaf,
	0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x52, 0x45, 0x53,
	0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x59, 0x10, 0x77, 0x1a, 0x37, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75,
	0x64, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52,
	0x43, 0x48, 0x5f, 0x53, 0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x78, 0x1a, 0x39, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x52, 0x49, 0x53, 0x4b, 0x5f,
	0x41, 0x53, 0x53, 0x45, 0x53, 0x53, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x7a, 0x1a, 0x38, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0e, 0x52, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55,
	0x4c, 0x45, 0x10, 0x7c, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x53, 0x45, 0x41, 0x52,
	0x43, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x7d, 0x1a, 0x39,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x7e, 0x1a, 0x38,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x53, 0x4c, 0x4f, 0x54,
	0x10, 0x7f, 0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x50, 0x45, 0x43, 0x49, 0x4d, 0x45, 0x4e, 0x10, 0x80,
	0x01, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x53, 0x50, 0x45, 0x43, 0x49, 0x4d, 0x45,
	0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x81, 0x01, 0x1a,
	0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a,
	0x14, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x82, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x54, 0x52, 0x55, 0x43,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x83, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x84, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56,
	0x0a, 0x13, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0xb0, 0x01, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x10, 0xb1, 0x01, 0x1a,
	0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09,
	0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x85, 0x01, 0x1a, 0x33, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x09, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x58, 0x0a, 0x14, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xb2, 0x01, 0x1a, 0x3d, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x13, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x53,
	0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x55, 0x43, 0x4c, 0x45, 0x49, 0x43,
	0x5f, 0x41, 0x43, 0x49, 0x44, 0x10, 0x86, 0x01, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14,
	0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x69, 0x63,
	0x41, 0x63, 0x69, 0x64, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x55, 0x42, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4d, 0x45, 0x52, 0x10, 0x87, 0x01,
	0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11,
	0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x45, 0x49,
	0x4e, 0x10, 0x88, 0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x6d, 0x0a, 0x1f, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45,
	0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x89, 0x01, 0x1a, 0x47, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1d, 0x53, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x61, 0x0a, 0x19, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x8a, 0x01, 0x1a,
	0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x17, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x59, 0x10, 0x8c, 0x01, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x8d, 0x01, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x39, 0x0a, 0x04, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x8e, 0x01, 0x1a, 0x2e, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x04, 0x54, 0x61, 0x73, 0x6b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x18, 0x54,
	0x45, 0x52, 0x4d, 0x49, 0x4e, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x5f, 0x43, 0x41, 0x50, 0x41, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x49, 0x45, 0x53, 0x10, 0x8f, 0x01, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x17, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x09, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0xb3, 0x01, 0x1a, 0x32, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x08, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x0b, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x90, 0x01, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x54, 0x45, 0x53,
	0x54, 0x5f, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x91, 0x01, 0x1a, 0x34, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0xb4,
	0x01, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x53, 0x45, 0x54, 0x10, 0x92, 0x01, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x10, 0x93, 0x01, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x94, 0x01, 0x1a, 0x3c, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x12, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x31, 0xca, 0xa5, 0x9a, 0xa0,
	0x08, 0x2b, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x85, 0x03,
	0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41,
	0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x42, 0x41, 0x54, 0x43, 0x48,
	0x10, 0x02, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65,
	0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x10, 0x03, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0e, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x04, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3d, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x37, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2d, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe8, 0x04, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xd1, 0x04, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x32, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x1a, 0x25,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41,
	0x4c, 0x10, 0x02, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x04, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x03, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x33, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x04, 0x1a, 0x28, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e,
	0x41, 0x4c, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x05, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x52, 0x45, 0x46, 0x4c, 0x45, 0x58, 0x5f, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x10, 0x06, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x10, 0x07, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0e,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x08,
	0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x1a, 0x2e, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x28, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0xf7, 0x04, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xdb, 0x04, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x37, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x1a, 0x2a,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x24, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x50, 0x52,
	0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x10, 0x02, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x03, 0x1a, 0x28, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10,
	0x04, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x4f,
	0x52, 0x49, 0x47, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x05, 0x1a,
	0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x52, 0x45, 0x46,
	0x4c, 0x45, 0x58, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x06, 0x1a, 0x28, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x52, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x07, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x10, 0x08, 0x1a, 0x28, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x1a, 0x28, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x33, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x2d, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa6, 0x05, 0x0a, 0x1e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0x83, 0x05,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x1a, 0x2d, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x56,
	0x52, 0x45, 0x41, 0x44, 0x10, 0x02, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x03, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73,
	0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x1a, 0x2d, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x10, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x06, 0x1a, 0x2d, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x48, 0x49,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x07, 0x1a, 0x2d, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x08, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x09, 0x1a, 0x2d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x27, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3b, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x35, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2d,
	0x72, 0x65, 0x73, 0x74, 0x66, 0x75, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x88, 0x03, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x4f, 0x66, 0x54,
	0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xf0, 0x02, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x01, 0x53, 0x10, 0x01, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x28, 0x0a, 0x03, 0x4d, 0x49, 0x4e, 0x10,
	0x02, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f,
	0x72, 0x67, 0x12, 0x26, 0x0a, 0x01, 0x48, 0x10, 0x03, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x26, 0x0a, 0x01, 0x44, 0x10,
	0x04, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f,
	0x72, 0x67, 0x12, 0x27, 0x0a, 0x02, 0x57, 0x4b, 0x10, 0x05, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x27, 0x0a, 0x02, 0x4d,
	0x4f, 0x10, 0x06, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x2e, 0x6f, 0x72, 0x67, 0x12, 0x26, 0x0a, 0x01, 0x41, 0x10, 0x07, 0x1a, 0x1f, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f,
	0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x1a, 0x30, 0xca, 0xa5,
	0x9a, 0xa0, 0x08, 0x2a, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2d, 0x6f, 0x66, 0x2d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xf3,
	0x03, 0x0a, 0x1d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x22, 0xd1, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x02, 0x45, 0x51, 0x10, 0x01, 0x1a, 0x2b, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x02, 0x47, 0x54,
	0x10, 0x02, 0x1a, 0x2b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x33, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x03, 0x1a, 0x2b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x25, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x02, 0x47, 0x45, 0x10, 0x04, 0x1a, 0x2b, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x02, 0x4c, 0x45, 0x10,
	0x05, 0x1a, 0x2b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x33,
	0x0a, 0x02, 0x53, 0x41, 0x10, 0x06, 0x1a, 0x2b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x25, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x02, 0x45, 0x42, 0x10, 0x07, 0x1a, 0x2b, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x3a, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x34,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x2d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0xcd, 0x83, 0x01, 0x0a, 0x2a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x22, 0x9d, 0x83, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x02, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x4f, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x6e, 0x0a, 0x20, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x1a, 0x48, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x41, 0x44, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x10, 0x05, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a,
	0x13, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x47, 0x59, 0x5f, 0x49, 0x4e, 0x54, 0x4f, 0x4c, 0x45, 0x52,
	0x41, 0x4e, 0x43, 0x45, 0x10, 0x06, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x41, 0x6c,
	0x6c, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x07, 0x1a, 0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14,
	0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x08, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43,
	0x54, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x53, 0x53, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x1a, 0x3c,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b,
	0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x0a, 0x1a, 0x34, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x0b, 0x1a, 0x2f,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x06, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x0c, 0x1a, 0x30, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x06, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a,
	0x1c, 0x42, 0x49, 0x4f, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x44, 0x45,
	0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x0d, 0x1a,
	0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x25, 0x42, 0x49, 0x4f, 0x4c, 0x4f, 0x47, 0x49,
	0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x0e,
	0x1a, 0x4c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x22, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b,
	0x0a, 0x0e, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x10, 0x0f, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x42, 0x6f, 0x64, 0x79, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x42,
	0x55, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x10, 0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x43, 0x41, 0x4e,
	0x4f, 0x4e, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10,
	0x11, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57,
	0x0a, 0x14, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x12, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x43, 0x41, 0x52, 0x45, 0x5f,
	0x50, 0x4c, 0x41, 0x4e, 0x10, 0x13, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x61,
	0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x43, 0x41,
	0x52, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x14, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x08, 0x43, 0x61, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a,
	0x0b, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x15, 0x1a, 0x34,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x16, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x16,
	0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x40, 0x0a, 0x08, 0x43, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x17, 0x1a, 0x32,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x10, 0x18, 0x1a, 0x2f, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b,
	0x0a, 0x0e, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x19, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x43,
	0x4c, 0x49, 0x4e, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x49, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x1a, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x43, 0x6c, 0x69, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x5c, 0x0a, 0x17, 0x43, 0x4c, 0x49, 0x4e, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x55,
	0x53, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x1b, 0x1a,
	0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x45, 0x0a, 0x0b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0x1c, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x55,
	0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x1d, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x1e, 0x1a, 0x3e,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b,
	0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x1f, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x43,
	0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x20, 0x1a, 0x35, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x4d,
	0x41, 0x50, 0x10, 0x21, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x4d, 0x61, 0x70, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x22, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57,
	0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x23, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x53, 0x45,
	0x4e, 0x54, 0x10, 0x24, 0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x43, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x41, 0x43, 0x54, 0x10, 0x25, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x43, 0x4f, 0x56,
	0x45, 0x52, 0x41, 0x47, 0x45, 0x10, 0x26, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1c, 0x43,
	0x4f, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x27, 0x1a, 0x44, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69,
	0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x1d, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f,
	0x45, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x28, 0x1a, 0x45, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1b, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x0e, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10,
	0x29, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x10, 0x2a, 0x1a, 0x30, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x2b,
	0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a,
	0x11, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x2c, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x4d, 0x0a, 0x0f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x45,
	0x4e, 0x53, 0x45, 0x10, 0x2d, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x49, 0x0a, 0x0d, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43,
	0x10, 0x2e, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x2f, 0x1a, 0x37,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x45, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x10, 0x30, 0x1a, 0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x51, 0x0a, 0x11, 0x44, 0x49, 0x41, 0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x31, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x32, 0x1a, 0x3b, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x44, 0x4f, 0x4d, 0x41,
	0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x33, 0x1a, 0x38, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x45, 0x4e, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x45, 0x52, 0x10, 0x34, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x45, 0x6e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x45,
	0x4e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x10, 0x35, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40,
	0x0a, 0x08, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x36, 0x1a, 0x32, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x53, 0x0a, 0x12, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x37, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x38, 0x1a, 0x3c,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0f,
	0x45, 0x50, 0x49, 0x53, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x43, 0x41, 0x52, 0x45, 0x10,
	0x39, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x4f, 0x66, 0x43, 0x61, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x3a,
	0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x45,
	0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x3b, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x08, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a,
	0x0f, 0x45, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x3c, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11,
	0x45, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x3d, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x45, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x4f, 0x0a, 0x10, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41,
	0x52, 0x49, 0x4f, 0x10, 0x3e, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x5a, 0x0a, 0x16, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4f, 0x46, 0x5f, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x54, 0x10, 0x3f, 0x1a, 0x3e, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x14, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x66, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x15,
	0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x48, 0x49,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x40, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x46, 0x4c, 0x41, 0x47, 0x10, 0x41,
	0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x46, 0x6c, 0x61, 0x67, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x4b, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x4d, 0x55, 0x4c, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0x42, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x46, 0x6f, 0x72, 0x6d,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a,
	0x0d, 0x47, 0x45, 0x4e, 0x4f, 0x4d, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x59, 0x10, 0x43,
	0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x47, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x53,
	0x74, 0x75, 0x64, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x47, 0x4f, 0x41, 0x4c,
	0x10, 0x44, 0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x47, 0x6f, 0x61, 0x6c, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x45, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x46, 0x1a, 0x2f,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x51, 0x0a, 0x11, 0x47, 0x55, 0x49, 0x44, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x47, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x47, 0x75,
	0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x43, 0x41, 0x52, 0x45,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x48, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x11, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x49, 0x4d, 0x41, 0x47, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x49, 0x1a, 0x3a,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x49, 0x4d,
	0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x59, 0x10, 0x4a, 0x1a, 0x36, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x75, 0x64,
	0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4b, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x49,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x5d, 0x0a, 0x17, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4c, 0x1a, 0x40, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x16, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x65,
	0x0a, 0x1b, 0x49, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4d, 0x1a,
	0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x55, 0x49, 0x44, 0x45, 0x10, 0x4e, 0x1a,
	0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x44,
	0x0a, 0x0a, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x4f, 0x1a, 0x34,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x49, 0x4e, 0x53, 0x55, 0x52, 0x41, 0x4e, 0x43,
	0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x50, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d,
	0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x10, 0x51, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4f,
	0x0a, 0x10, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x10, 0x52, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x53, 0x1a, 0x31, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x07, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x10, 0x54, 0x1a, 0x31, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x07, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x07, 0x4c, 0x49, 0x4e, 0x4b, 0x41, 0x47, 0x45, 0x10, 0x55, 0x1a, 0x31, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x07, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x38, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x56, 0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x4c, 0x4f, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x57, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1c, 0x4d,
	0x41, 0x4e, 0x55, 0x46, 0x41, 0x43, 0x54, 0x55, 0x52, 0x45, 0x44, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x58, 0x1a, 0x44, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x10, 0x59,
	0x1a, 0x31, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x5a, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x44, 0x0a, 0x0a, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x5b,
	0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x19, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x5c, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x18, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x4d, 0x45, 0x44,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x45, 0x4e, 0x53, 0x45,
	0x10, 0x5d, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x57, 0x0a, 0x14, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b,
	0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x10, 0x5e, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x4d, 0x45, 0x44,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x5f, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57,
	0x0a, 0x14, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x60, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1c, 0x4d, 0x45, 0x44, 0x49, 0x43,
	0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x61, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x1a, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x53, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x62, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x63, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x51, 0x0a, 0x11, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x64, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x4d, 0x4f, 0x4c, 0x45, 0x43, 0x55, 0x4c, 0x41,
	0x52, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x65, 0x1a, 0x3b, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x11, 0x4d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x4e, 0x41, 0x4d,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x66, 0x1a, 0x36, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0c, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x4e, 0x55, 0x54, 0x52, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x49, 0x4e, 0x54, 0x41, 0x4b, 0x45, 0x10, 0x67, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0f, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x61, 0x6b,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x4e, 0x55, 0x54, 0x52, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x68, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0e, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x4e, 0x55, 0x54, 0x52, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x69, 0x1a, 0x3a, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x10, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x4f, 0x42, 0x53, 0x45, 0x52,
	0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6a, 0x1a, 0x35, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x5b, 0x0a, 0x16, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6b, 0x1a, 0x3f, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x15, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x14,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6c, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x6d, 0x1a, 0x3a, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x4f, 0x52, 0x47, 0x41,
	0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6e, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x5f, 0x0a, 0x18, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x41, 0x46, 0x46, 0x49, 0x4c, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x6f,
	0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x17, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x1b, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x44, 0x5f,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x70, 0x1a, 0x43, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x19, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x71, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x07, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x72, 0x1a, 0x31, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x0e, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43,
	0x45, 0x10, 0x73, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c,
	0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x74, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x45, 0x52,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x75, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x06, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x76, 0x1a, 0x30, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4d, 0x0a,
	0x0f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x77, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c,
	0x50, 0x52, 0x41, 0x43, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x45, 0x52, 0x10, 0x78, 0x1a, 0x36,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x50, 0x52, 0x41, 0x43, 0x54, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x79, 0x1a, 0x3a, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x10, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x44, 0x55, 0x52, 0x45, 0x10, 0x7a, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x44, 0x0a,
	0x0a, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x7b, 0x1a, 0x34, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x4e,
	0x41, 0x49, 0x52, 0x45, 0x10, 0x7c, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x5b, 0x0a, 0x16, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x4e, 0x41, 0x49, 0x52, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x7d, 0x1a, 0x3f, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x15, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x17,
	0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52,
	0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x7e, 0x1a, 0x40, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x16, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x7f, 0x1a,
	0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x43, 0x48, 0x45, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x80, 0x01, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x53, 0x10, 0x81, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x4c, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x55, 0x44,
	0x59, 0x10, 0x82, 0x01, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x50, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x53, 0x55, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x10, 0x83, 0x01, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x84, 0x01, 0x1a, 0x32,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x52, 0x49, 0x53, 0x4b, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x53,
	0x53, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x85, 0x01, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e,
	0x52, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x86,
	0x01, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x87, 0x01, 0x1a, 0x39, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x88, 0x01, 0x1a, 0x38, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x53, 0x4c, 0x4f, 0x54, 0x10,
	0x89, 0x01, 0x1a, 0x2e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x50, 0x45, 0x43, 0x49, 0x4d, 0x45, 0x4e, 0x10, 0x8a,
	0x01, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x53, 0x50, 0x45, 0x43, 0x49, 0x4d, 0x45,
	0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x8b, 0x01, 0x1a,
	0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a,
	0x14, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x8c, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x54, 0x52, 0x55, 0x43,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x8d, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x8e, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56,
	0x0a, 0x13, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x8f, 0x01, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x90, 0x01, 0x1a,
	0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09,
	0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x91, 0x01, 0x1a, 0x33, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x09, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x58, 0x0a, 0x14, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x92, 0x01, 0x1a, 0x3d, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x13, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x53,
	0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x55, 0x43, 0x4c, 0x45, 0x49, 0x43,
	0x5f, 0x41, 0x43, 0x49, 0x44, 0x10, 0x93, 0x01, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x14,
	0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x69, 0x63,
	0x41, 0x63, 0x69, 0x64, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x55, 0x42, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4d, 0x45, 0x52, 0x10, 0x94, 0x01,
	0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11,
	0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x45, 0x49,
	0x4e, 0x10, 0x95, 0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x6d, 0x0a, 0x1f, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45,
	0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x96, 0x01, 0x1a, 0x47, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1d, 0x53, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x61, 0x0a, 0x19, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x97, 0x01, 0x1a,
	0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x17, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x59, 0x10, 0x98, 0x01, 0x1a, 0x38, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x99, 0x01, 0x1a, 0x37, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x39, 0x0a, 0x04, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x9a, 0x01, 0x1a, 0x2e, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x04, 0x54, 0x61, 0x73, 0x6b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x18, 0x54,
	0x45, 0x52, 0x4d, 0x49, 0x4e, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x5f, 0x43, 0x41, 0x50, 0x41, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x49, 0x45, 0x53, 0x10, 0x9b, 0x01, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x17, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x09, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x9c, 0x01, 0x1a, 0x32, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x08, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x0b, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x9d, 0x01, 0x1a, 0x34, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x54, 0x45, 0x53,
	0x54, 0x5f, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x9e, 0x01, 0x1a, 0x34, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x9f,
	0x01, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x53, 0x45, 0x54, 0x10, 0xa0, 0x01, 0x1a, 0x32, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x10, 0xa1, 0x01, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xa2, 0x01, 0x1a, 0x3c, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x12, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x1e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x09, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x53, 0x49, 0x54, 0x45, 0x10, 0xa3, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x08, 0x42, 0x6f, 0x64, 0x79, 0x53, 0x69, 0x74, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x4e,
	0x54, 0x52, 0x59, 0x10, 0xa4, 0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0xa5, 0x01, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x43, 0x6f, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x4c, 0x0a, 0x0c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0xa6, 0x01, 0x1a, 0x39, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a,
	0x10, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e,
	0x54, 0x10, 0xa7, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xa8, 0x01, 0x1a, 0x3e, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x14,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0xa9, 0x01, 0x1a, 0x40, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x44, 0x49, 0x41,
	0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0xaa, 0x01,
	0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x4f, 0x72, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x56, 0x0a, 0x11, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x49,
	0x46, 0x45, 0x53, 0x54, 0x10, 0xab, 0x01, 0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c,
	0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x19, 0x45, 0x46, 0x46, 0x45, 0x43,
	0x54, 0x5f, 0x45, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x48,
	0x45, 0x53, 0x49, 0x53, 0x10, 0xac, 0x01, 0x1a, 0x45, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x17, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x79, 0x6e,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5a,
	0x0a, 0x13, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xad, 0x01, 0x1a, 0x40, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12,
	0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x14, 0x45, 0x4c,
	0x49, 0x47, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0xae, 0x01, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x13, 0x45, 0x6c, 0x69,
	0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f,
	0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x45, 0x58, 0x50, 0x41,
	0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0xaf, 0x01,
	0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x54, 0x0a, 0x10, 0x49, 0x4d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x41, 0x4e, 0x49,
	0x46, 0x45, 0x53, 0x54, 0x10, 0xb0, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x49,
	0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x18, 0x49, 0x4d, 0x41, 0x47, 0x49, 0x4e,
	0x47, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0xb1, 0x01, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x16, 0x49, 0x6d, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x05, 0x4d,
	0x45, 0x44, 0x49, 0x41, 0x10, 0xb2, 0x01, 0x1a, 0x33, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x05, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x10,
	0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x10, 0xb3, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x10, 0xb4, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x0f, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f,
	0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x4d, 0x45, 0x44, 0x49,
	0x43, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0xb5, 0x01,
	0x1a, 0x3e, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x71, 0x0a, 0x1f, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0xb6, 0x01, 0x1a, 0x4b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1d, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x22, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e, 0x41, 0x4c,
	0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x49,
	0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xb7, 0x01, 0x1a, 0x4e, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x20, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x1c,
	0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xb8, 0x01, 0x1a,
	0x48, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1a, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d,
	0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x1c, 0x4d, 0x45, 0x44,
	0x49, 0x43, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49,
	0x4e, 0x47, 0x52, 0x45, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x10, 0xb9, 0x01, 0x1a, 0x48, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x1a, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x1d, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49,
	0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xba, 0x01, 0x1a, 0x49, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x1b, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x1e, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e,
	0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x46,
	0x41, 0x43, 0x54, 0x55, 0x52, 0x45, 0x44, 0x10, 0xbb, 0x01, 0x1a, 0x4a, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x1c, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x1a, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49,
	0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b,
	0x41, 0x47, 0x45, 0x44, 0x10, 0xbc, 0x01, 0x1a, 0x46, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x18, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x64, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x73, 0x0a, 0x20, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x48, 0x41, 0x52, 0x4d, 0x41, 0x43, 0x45, 0x55, 0x54, 0x49,
	0x43, 0x41, 0x4c, 0x10, 0xbd, 0x01, 0x1a, 0x4c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x1e, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x68,
	0x61, 0x72, 0x6d, 0x61, 0x63, 0x65, 0x75, 0x74, 0x69, 0x63, 0x61, 0x6c, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x7a, 0x0a, 0x24, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x49, 0x4e, 0x41,
	0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x53, 0x49,
	0x52, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0xbe, 0x01, 0x1a,
	0x4f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x21, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0xbf, 0x01, 0x1a, 0x33, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x50, 0x0a, 0x0e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x10, 0xc0, 0x01, 0x1a, 0x3b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08,
	0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x44, 0x55, 0x52, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xc1, 0x01, 0x1a, 0x3e, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xc2,
	0x01, 0x1a, 0x3c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x54, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x10, 0xc3, 0x01, 0x1a, 0x3d, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0f, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x41,
	0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xc4, 0x01, 0x1a, 0x3d, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x0f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0xc5, 0x01, 0x1a,
	0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x13, 0x52,
	0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0xc6, 0x01, 0x1a, 0x40, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x12, 0x52, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c,
	0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x45, 0x41,
	0x52, 0x43, 0x48, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xc7, 0x01, 0x1a, 0x47, 0xba, 0x96, 0xbb, 0xb2, 0x05,
	0x19, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x61, 0x0a, 0x17, 0x52, 0x49, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x49, 0x44, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x48, 0x45, 0x53, 0x49, 0x53, 0x10, 0xc8, 0x01,
	0x1a, 0x43, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x15, 0x52, 0x69, 0x73, 0x6b, 0x45, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43,
	0x45, 0x10, 0xc9, 0x01, 0x1a, 0x36, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x08, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x12,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0xca, 0x01, 0x1a, 0x3f, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x11, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2d, 0x6f, 0x6c, 0x64,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x53, 0x54, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0xcb, 0x01, 0x1a, 0x44, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x16, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2d, 0x6f, 0x6c, 0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x49, 0xca, 0xa5, 0x9a, 0xa0,
	0x08, 0x43, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x2d, 0x61, 0x6c, 0x6c, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xcf, 0x05, 0x0a, 0x17, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65,
	0x74, 0x22, 0xb3, 0x05, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c,
	0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x1a, 0x26, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x25, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x27, 0x0a, 0x02, 0x43,
	0x4d, 0x10, 0x02, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x2e, 0x6f, 0x72, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x4e, 0x5f, 0x49, 0x10, 0x03, 0x1a, 0x2b,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x5b, 0x69, 0x6e, 0x5f, 0x69, 0x5d, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x27, 0x0a, 0x02, 0x4b,
	0x47, 0x10, 0x04, 0x1a, 0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x2e, 0x6f, 0x72, 0x67, 0x12, 0x26, 0x0a, 0x01, 0x47, 0x10, 0x05, 0x1a, 0x1f, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f,
	0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x37, 0x0a, 0x05,
	0x4c, 0x42, 0x5f, 0x41, 0x56, 0x10, 0x06, 0x1a, 0x2c, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x07, 0x5b,
	0x6c, 0x62, 0x5f, 0x61, 0x76, 0x5d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x31, 0x0a, 0x03, 0x43, 0x45, 0x4c, 0x10, 0x07, 0x1a, 0x28,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x43, 0x65, 0x6c, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x36, 0x0a, 0x05, 0x44, 0x45, 0x47, 0x5f,
	0x46, 0x10, 0x08, 0x1a, 0x2b, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x06, 0x5b, 0x64, 0x65, 0x67, 0x46,
	0x5d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67,
	0x12, 0x36, 0x0a, 0x05, 0x4d, 0x4d, 0x5f, 0x48, 0x47, 0x10, 0x09, 0x1a, 0x2b, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x06, 0x6d, 0x6d, 0x5b, 0x48, 0x67, 0x5d, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x36, 0x0a, 0x07, 0x50, 0x45, 0x52, 0x5f,
	0x4d, 0x49, 0x4e, 0x10, 0x0a, 0x1a, 0x29, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x2f, 0x6d, 0x69,
	0x6e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67,
	0x12, 0x35, 0x0a, 0x05, 0x4b, 0x47, 0x5f, 0x4d, 0x32, 0x10, 0x0b, 0x1a, 0x2a, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x05, 0x6b, 0x67, 0x2f, 0x6d, 0x32, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x12, 0x27, 0x0a, 0x02, 0x4d, 0x32, 0x10, 0x0c, 0x1a,
	0x1f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x19, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x6f, 0x66, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67,
	0x1a, 0x35, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x2f, 0x75, 0x63, 0x75, 0x6d, 0x2d, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x73,
	0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x69, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescData = file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDesc
)

func file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDescData
}

var file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes = make([]protoimpl.EnumInfo, 25)
var file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_google_fhir_proto_r5_core_valuesets_proto_goTypes = []interface{}{
	(AdverseEventStatusValueSet_Value)(0),                 // 0: google.fhir.r5.core.AdverseEventStatusValueSet.Value
	(AppointmentResponseStatusValueSet_Value)(0),          // 1: google.fhir.r5.core.AppointmentResponseStatusValueSet.Value
	(BodyLengthUnitsValueSet_Value)(0),                    // 2: google.fhir.r5.core.BodyLengthUnitsValueSet.Value
	(BodyTemperatureUnitsValueSet_Value)(0),               // 3: google.fhir.r5.core.BodyTemperatureUnitsValueSet.Value
	(BodyWeightUnitsValueSet_Value)(0),                    // 4: google.fhir.r5.core.BodyWeightUnitsValueSet.Value
	(CarePlanIntentValueSet_Value)(0),                     // 5: google.fhir.r5.core.CarePlanIntentValueSet.Value
	(ColorCodesOrRGBValueSet_Value)(0),                    // 6: google.fhir.r5.core.ColorCodesOrRGBValueSet.Value
	(CommonLanguagesValueSet_Value)(0),                    // 7: google.fhir.r5.core.CommonLanguagesValueSet.Value
	(DetectedIssueStatusValueSet_Value)(0),                // 8: google.fhir.r5.core.DetectedIssueStatusValueSet.Value
	(EventTimingValueSet_Value)(0),                        // 9: google.fhir.r5.core.EventTimingValueSet.Value
	(ImmunizationEvaluationStatusCodesValueSet_Value)(0),  // 10: google.fhir.r5.core.ImmunizationEvaluationStatusCodesValueSet.Value
	(ImmunizationStatusCodesValueSet_Value)(0),            // 11: google.fhir.r5.core.ImmunizationStatusCodesValueSet.Value
	(InteractionTriggerValueSet_Value)(0),                 // 12: google.fhir.r5.core.InteractionTriggerValueSet.Value
	(LDLCodesValueSet_Value)(0),                           // 13: google.fhir.r5.core.LDLCodesValueSet.Value
	(RelatedArtifactTypeExpandedValueSet_Value)(0),        // 14: google.fhir.r5.core.RelatedArtifactTypeExpandedValueSet.Value
	(RequestResourceTypesValueSet_Value)(0),               // 15: google.fhir.r5.core.RequestResourceTypesValueSet.Value
	(ResourceTypeValueSet_Value)(0),                       // 16: google.fhir.r5.core.ResourceTypeValueSet.Value
	(SystemRestfulInteractionValueSet_Value)(0),           // 17: google.fhir.r5.core.SystemRestfulInteractionValueSet.Value
	(TaskIntentValueSet_Value)(0),                         // 18: google.fhir.r5.core.TaskIntentValueSet.Value
	(TransportIntentValueSet_Value)(0),                    // 19: google.fhir.r5.core.TransportIntentValueSet.Value
	(TypeRestfulInteractionValueSet_Value)(0),             // 20: google.fhir.r5.core.TypeRestfulInteractionValueSet.Value
	(UnitsOfTimeValueSet_Value)(0),                        // 21: google.fhir.r5.core.UnitsOfTimeValueSet.Value
	(ValueFilterComparatorValueSet_Value)(0),              // 22: google.fhir.r5.core.ValueFilterComparatorValueSet.Value
	(VersionIndependentResourceTypesAllValueSet_Value)(0), // 23: google.fhir.r5.core.VersionIndependentResourceTypesAllValueSet.Value
	(VitalSignsUnitsValueSet_Value)(0),                    // 24: google.fhir.r5.core.VitalSignsUnitsValueSet.Value
	(*AdverseEventStatusValueSet)(nil),                    // 25: google.fhir.r5.core.AdverseEventStatusValueSet
	(*AppointmentResponseStatusValueSet)(nil),             // 26: google.fhir.r5.core.AppointmentResponseStatusValueSet
	(*BodyLengthUnitsValueSet)(nil),                       // 27: google.fhir.r5.core.BodyLengthUnitsValueSet
	(*BodyTemperatureUnitsValueSet)(nil),                  // 28: google.fhir.r5.core.BodyTemperatureUnitsValueSet
	(*BodyWeightUnitsValueSet)(nil),                       // 29: google.fhir.r5.core.BodyWeightUnitsValueSet
	(*CarePlanIntentValueSet)(nil),                        // 30: google.fhir.r5.core.CarePlanIntentValueSet
	(*ColorCodesOrRGBValueSet)(nil),                       // 31: google.fhir.r5.core.ColorCodesOrRGBValueSet
	(*CommonLanguagesValueSet)(nil),                       // 32: google.fhir.r5.core.CommonLanguagesValueSet
	(*DetectedIssueStatusValueSet)(nil),                   // 33: google.fhir.r5.core.DetectedIssueStatusValueSet
	(*EventTimingValueSet)(nil),                           // 34: google.fhir.r5.core.EventTimingValueSet
	(*ImmunizationEvaluationStatusCodesValueSet)(nil),     // 35: google.fhir.r5.core.ImmunizationEvaluationStatusCodesValueSet
	(*ImmunizationStatusCodesValueSet)(nil),               // 36: google.fhir.r5.core.ImmunizationStatusCodesValueSet
	(*InteractionTriggerValueSet)(nil),                    // 37: google.fhir.r5.core.InteractionTriggerValueSet
	(*LDLCodesValueSet)(nil),                              // 38: google.fhir.r5.core.LDLCodesValueSet
	(*RelatedArtifactTypeExpandedValueSet)(nil),           // 39: google.fhir.r5.core.RelatedArtifactTypeExpandedValueSet
	(*RequestResourceTypesValueSet)(nil),                  // 40: google.fhir.r5.core.RequestResourceTypesValueSet
	(*ResourceTypeValueSet)(nil),                          // 41: google.fhir.r5.core.ResourceTypeValueSet
	(*SystemRestfulInteractionValueSet)(nil),              // 42: google.fhir.r5.core.SystemRestfulInteractionValueSet
	(*TaskIntentValueSet)(nil),                            // 43: google.fhir.r5.core.TaskIntentValueSet
	(*TransportIntentValueSet)(nil),                       // 44: google.fhir.r5.core.TransportIntentValueSet
	(*TypeRestfulInteractionValueSet)(nil),                // 45: google.fhir.r5.core.TypeRestfulInteractionValueSet
	(*UnitsOfTimeValueSet)(nil),                           // 46: google.fhir.r5.core.UnitsOfTimeValueSet
	(*ValueFilterComparatorValueSet)(nil),                 // 47: google.fhir.r5.core.ValueFilterComparatorValueSet
	(*VersionIndependentResourceTypesAllValueSet)(nil),    // 48: google.fhir.r5.core.VersionIndependentResourceTypesAllValueSet
	(*VitalSignsUnitsValueSet)(nil),                       // 49: google.fhir.r5.core.VitalSignsUnitsValueSet
}
var file_proto_google_fhir_proto_r5_core_valuesets_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r5_core_valuesets_proto_init() }
func file_proto_google_fhir_proto_r5_core_valuesets_proto_init() {
	if File_proto_google_fhir_proto_r5_core_valuesets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdverseEventStatusValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentResponseStatusValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyLengthUnitsValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyTemperatureUnitsValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyWeightUnitsValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarePlanIntentValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorCodesOrRGBValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonLanguagesValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectedIssueStatusValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTimingValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationEvaluationStatusCodesValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationStatusCodesValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionTriggerValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LDLCodesValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedArtifactTypeExpandedValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestResourceTypesValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTypeValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRestfulInteractionValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskIntentValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportIntentValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeRestfulInteractionValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitsOfTimeValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueFilterComparatorValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionIndependentResourceTypesAllValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VitalSignsUnitsValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDesc,
			NumEnums:      25,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r5_core_valuesets_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r5_core_valuesets_proto_depIdxs,
		EnumInfos:         file_proto_google_fhir_proto_r5_core_valuesets_proto_enumTypes,
		MessageInfos:      file_proto_google_fhir_proto_r5_core_valuesets_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r5_core_valuesets_proto = out.File
	file_proto_google_fhir_proto_r5_core_valuesets_proto_rawDesc = nil
	file_proto_google_fhir_proto_r5_core_valuesets_proto_goTypes = nil
	file_proto_google_fhir_proto_r5_core_valuesets_proto_depIdxs = nil
}
