//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/r5/core/resources/biologically_derived_product.proto

package biologically_derived_product_go_proto

import (
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for BiologicallyDerivedProduct.
// This resource reflects an instance of a biologically derived product.
// See http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct
type BiologicallyDerivedProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*anypb.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// organ | tissue | fluid | cells | biologicalAgent
	ProductCategory *datatypes_go_proto.Coding `protobuf:"bytes,21,opt,name=product_category,json=productCategory,proto3" json:"product_category,omitempty"`
	// A code that identifies the kind of this biologically derived product
	ProductCode *datatypes_go_proto.CodeableConcept `protobuf:"bytes,12,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	// The parent biologically-derived product
	Parent []*datatypes_go_proto.Reference `protobuf:"bytes,16,rep,name=parent,proto3" json:"parent,omitempty"`
	// Request to obtain and/or infuse this product
	Request []*datatypes_go_proto.Reference `protobuf:"bytes,14,rep,name=request,proto3" json:"request,omitempty"`
	// Instance identifier
	Identifier []*datatypes_go_proto.Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// An identifier that supports traceability to the event during which material
	// in this product from one or more biological entities was obtained or pooled
	BiologicalSourceEvent *datatypes_go_proto.Identifier `protobuf:"bytes,22,opt,name=biological_source_event,json=biologicalSourceEvent,proto3" json:"biological_source_event,omitempty"`
	// Processing facilities responsible for the labeling and distribution of this
	// biologically derived product
	ProcessingFacility []*datatypes_go_proto.Reference `protobuf:"bytes,23,rep,name=processing_facility,json=processingFacility,proto3" json:"processing_facility,omitempty"`
	// A unique identifier for an aliquot of a product
	Division *datatypes_go_proto.String `protobuf:"bytes,24,opt,name=division,proto3" json:"division,omitempty"`
	// available | unavailable
	ProductStatus *datatypes_go_proto.Coding `protobuf:"bytes,25,opt,name=product_status,json=productStatus,proto3" json:"product_status,omitempty"`
	// Date, and where relevant time, of expiration
	ExpirationDate *datatypes_go_proto.DateTime           `protobuf:"bytes,26,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	Collection     *BiologicallyDerivedProduct_Collection `protobuf:"bytes,17,opt,name=collection,proto3" json:"collection,omitempty"`
	// Product storage temperature requirements
	StorageTempRequirements *datatypes_go_proto.Range              `protobuf:"bytes,27,opt,name=storage_temp_requirements,json=storageTempRequirements,proto3" json:"storage_temp_requirements,omitempty"`
	Property                []*BiologicallyDerivedProduct_Property `protobuf:"bytes,28,rep,name=property,proto3" json:"property,omitempty"`
}

func (x *BiologicallyDerivedProduct) Reset() {
	*x = BiologicallyDerivedProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct) ProtoMessage() {}

func (x *BiologicallyDerivedProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0}
}

func (x *BiologicallyDerivedProduct) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetContained() []*anypb.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProductCategory() *datatypes_go_proto.Coding {
	if x != nil {
		return x.ProductCategory
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProductCode() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ProductCode
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetParent() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetRequest() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetBiologicalSourceEvent() *datatypes_go_proto.Identifier {
	if x != nil {
		return x.BiologicalSourceEvent
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProcessingFacility() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.ProcessingFacility
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetDivision() *datatypes_go_proto.String {
	if x != nil {
		return x.Division
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProductStatus() *datatypes_go_proto.Coding {
	if x != nil {
		return x.ProductStatus
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetExpirationDate() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetCollection() *BiologicallyDerivedProduct_Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetStorageTempRequirements() *datatypes_go_proto.Range {
	if x != nil {
		return x.StorageTempRequirements
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProperty() []*BiologicallyDerivedProduct_Property {
	if x != nil {
		return x.Property
	}
	return nil
}

// How this product was collected
type BiologicallyDerivedProduct_Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual performing collection
	Collector *datatypes_go_proto.Reference `protobuf:"bytes,4,opt,name=collector,proto3" json:"collector,omitempty"`
	// The patient who underwent the medical procedure to collect the product or
	// the organization that facilitated the collection
	Source    *datatypes_go_proto.Reference                     `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Collected *BiologicallyDerivedProduct_Collection_CollectedX `protobuf:"bytes,6,opt,name=collected,proto3" json:"collected,omitempty"`
}

func (x *BiologicallyDerivedProduct_Collection) Reset() {
	*x = BiologicallyDerivedProduct_Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Collection) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Collection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Collection.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Collection) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BiologicallyDerivedProduct_Collection) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetCollector() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Collector
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetSource() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetCollected() *BiologicallyDerivedProduct_Collection_CollectedX {
	if x != nil {
		return x.Collected
	}
	return nil
}

// A property that is specific to this BiologicallyDerviedProduct instance
type BiologicallyDerivedProduct_Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Code that specifies the property
	Type  *datatypes_go_proto.CodeableConcept         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value *BiologicallyDerivedProduct_Property_ValueX `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BiologicallyDerivedProduct_Property) Reset() {
	*x = BiologicallyDerivedProduct_Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Property) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Property) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Property.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Property) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BiologicallyDerivedProduct_Property) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property) GetType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property) GetValue() *BiologicallyDerivedProduct_Property_ValueX {
	if x != nil {
		return x.Value
	}
	return nil
}

// Time of product collection
type BiologicallyDerivedProduct_Collection_CollectedX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//
	//	*BiologicallyDerivedProduct_Collection_CollectedX_DateTime
	//	*BiologicallyDerivedProduct_Collection_CollectedX_Period
	Choice isBiologicallyDerivedProduct_Collection_CollectedX_Choice `protobuf_oneof:"choice"`
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) Reset() {
	*x = BiologicallyDerivedProduct_Collection_CollectedX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Collection_CollectedX) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Collection_CollectedX.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Collection_CollectedX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (m *BiologicallyDerivedProduct_Collection_CollectedX) GetChoice() isBiologicallyDerivedProduct_Collection_CollectedX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Collection_CollectedX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Collection_CollectedX_Period); ok {
		return x.Period
	}
	return nil
}

type isBiologicallyDerivedProduct_Collection_CollectedX_Choice interface {
	isBiologicallyDerivedProduct_Collection_CollectedX_Choice()
}

type BiologicallyDerivedProduct_Collection_CollectedX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type BiologicallyDerivedProduct_Collection_CollectedX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*BiologicallyDerivedProduct_Collection_CollectedX_DateTime) isBiologicallyDerivedProduct_Collection_CollectedX_Choice() {
}

func (*BiologicallyDerivedProduct_Collection_CollectedX_Period) isBiologicallyDerivedProduct_Collection_CollectedX_Choice() {
}

// Property values
type BiologicallyDerivedProduct_Property_ValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//
	//	*BiologicallyDerivedProduct_Property_ValueX_Boolean
	//	*BiologicallyDerivedProduct_Property_ValueX_Integer
	//	*BiologicallyDerivedProduct_Property_ValueX_CodeableConcept
	//	*BiologicallyDerivedProduct_Property_ValueX_Period
	//	*BiologicallyDerivedProduct_Property_ValueX_Quantity
	//	*BiologicallyDerivedProduct_Property_ValueX_Range
	//	*BiologicallyDerivedProduct_Property_ValueX_Ratio
	//	*BiologicallyDerivedProduct_Property_ValueX_StringValue
	//	*BiologicallyDerivedProduct_Property_ValueX_Attachment
	Choice isBiologicallyDerivedProduct_Property_ValueX_Choice `protobuf_oneof:"choice"`
}

func (x *BiologicallyDerivedProduct_Property_ValueX) Reset() {
	*x = BiologicallyDerivedProduct_Property_ValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Property_ValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Property_ValueX) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Property_ValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Property_ValueX.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Property_ValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (m *BiologicallyDerivedProduct_Property_ValueX) GetChoice() isBiologicallyDerivedProduct_Property_ValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Range); ok {
		return x.Range
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetRatio() *datatypes_go_proto.Ratio {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Property_ValueX) GetAttachment() *datatypes_go_proto.Attachment {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Property_ValueX_Attachment); ok {
		return x.Attachment
	}
	return nil
}

type isBiologicallyDerivedProduct_Property_ValueX_Choice interface {
	isBiologicallyDerivedProduct_Property_ValueX_Choice()
}

type BiologicallyDerivedProduct_Property_ValueX_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,2,opt,name=integer,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,3,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,4,opt,name=period,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,5,opt,name=quantity,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,6,opt,name=range,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_Ratio struct {
	Ratio *datatypes_go_proto.Ratio `protobuf:"bytes,7,opt,name=ratio,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,8,opt,name=string_value,json=string,proto3,oneof"`
}

type BiologicallyDerivedProduct_Property_ValueX_Attachment struct {
	Attachment *datatypes_go_proto.Attachment `protobuf:"bytes,9,opt,name=attachment,proto3,oneof"`
}

func (*BiologicallyDerivedProduct_Property_ValueX_Boolean) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_Integer) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_CodeableConcept) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_Period) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_Quantity) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_Range) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_Ratio) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_StringValue) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

func (*BiologicallyDerivedProduct_Property_ValueX_Attachment) isBiologicallyDerivedProduct_Property_ValueX_Choice() {
}

var File_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x69, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x18, 0x0a, 0x1a, 0x42,
	0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61,
	0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x58, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x20, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x1a, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x14, 0xf2, 0xff, 0xfc, 0xc2,
	0x06, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x17, 0x62, 0x69,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x15, 0x62, 0x69,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x12, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x19, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x17, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x54, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x1c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x82, 0x05, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x66, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x28, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x50, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x10, 0x50, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x09, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x1f, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x07,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x63, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x58, 0x52, 0x09, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0x93, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x58, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8,
	0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xa5, 0x07, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x58, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xbd, 0x04, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x12,
	0x38, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00,
	0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3b, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x41, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x3a, 0x4e, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97,
	0x06, 0x42, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x8c, 0x01, 0x98, 0xc6, 0xb0,
	0xb5, 0x07, 0x05, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x69,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x62, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescData = file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDesc
)

func file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDescData
}

var file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_goTypes = []interface{}{
	(*BiologicallyDerivedProduct)(nil),                       // 0: google.fhir.r5.core.BiologicallyDerivedProduct
	(*BiologicallyDerivedProduct_Collection)(nil),            // 1: google.fhir.r5.core.BiologicallyDerivedProduct.Collection
	(*BiologicallyDerivedProduct_Property)(nil),              // 2: google.fhir.r5.core.BiologicallyDerivedProduct.Property
	(*BiologicallyDerivedProduct_Collection_CollectedX)(nil), // 3: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.CollectedX
	(*BiologicallyDerivedProduct_Property_ValueX)(nil),       // 4: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX
	(*datatypes_go_proto.Id)(nil),                            // 5: google.fhir.r5.core.Id
	(*datatypes_go_proto.Meta)(nil),                          // 6: google.fhir.r5.core.Meta
	(*datatypes_go_proto.Uri)(nil),                           // 7: google.fhir.r5.core.Uri
	(*datatypes_go_proto.Code)(nil),                          // 8: google.fhir.r5.core.Code
	(*datatypes_go_proto.Narrative)(nil),                     // 9: google.fhir.r5.core.Narrative
	(*anypb.Any)(nil),                                        // 10: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                     // 11: google.fhir.r5.core.Extension
	(*datatypes_go_proto.Coding)(nil),                        // 12: google.fhir.r5.core.Coding
	(*datatypes_go_proto.CodeableConcept)(nil),               // 13: google.fhir.r5.core.CodeableConcept
	(*datatypes_go_proto.Reference)(nil),                     // 14: google.fhir.r5.core.Reference
	(*datatypes_go_proto.Identifier)(nil),                    // 15: google.fhir.r5.core.Identifier
	(*datatypes_go_proto.String)(nil),                        // 16: google.fhir.r5.core.String
	(*datatypes_go_proto.DateTime)(nil),                      // 17: google.fhir.r5.core.DateTime
	(*datatypes_go_proto.Range)(nil),                         // 18: google.fhir.r5.core.Range
	(*datatypes_go_proto.Period)(nil),                        // 19: google.fhir.r5.core.Period
	(*datatypes_go_proto.Boolean)(nil),                       // 20: google.fhir.r5.core.Boolean
	(*datatypes_go_proto.Integer)(nil),                       // 21: google.fhir.r5.core.Integer
	(*datatypes_go_proto.Quantity)(nil),                      // 22: google.fhir.r5.core.Quantity
	(*datatypes_go_proto.Ratio)(nil),                         // 23: google.fhir.r5.core.Ratio
	(*datatypes_go_proto.Attachment)(nil),                    // 24: google.fhir.r5.core.Attachment
}
var file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_depIdxs = []int32{
	5,  // 0: google.fhir.r5.core.BiologicallyDerivedProduct.id:type_name -> google.fhir.r5.core.Id
	6,  // 1: google.fhir.r5.core.BiologicallyDerivedProduct.meta:type_name -> google.fhir.r5.core.Meta
	7,  // 2: google.fhir.r5.core.BiologicallyDerivedProduct.implicit_rules:type_name -> google.fhir.r5.core.Uri
	8,  // 3: google.fhir.r5.core.BiologicallyDerivedProduct.language:type_name -> google.fhir.r5.core.Code
	9,  // 4: google.fhir.r5.core.BiologicallyDerivedProduct.text:type_name -> google.fhir.r5.core.Narrative
	10, // 5: google.fhir.r5.core.BiologicallyDerivedProduct.contained:type_name -> google.protobuf.Any
	11, // 6: google.fhir.r5.core.BiologicallyDerivedProduct.extension:type_name -> google.fhir.r5.core.Extension
	11, // 7: google.fhir.r5.core.BiologicallyDerivedProduct.modifier_extension:type_name -> google.fhir.r5.core.Extension
	12, // 8: google.fhir.r5.core.BiologicallyDerivedProduct.product_category:type_name -> google.fhir.r5.core.Coding
	13, // 9: google.fhir.r5.core.BiologicallyDerivedProduct.product_code:type_name -> google.fhir.r5.core.CodeableConcept
	14, // 10: google.fhir.r5.core.BiologicallyDerivedProduct.parent:type_name -> google.fhir.r5.core.Reference
	14, // 11: google.fhir.r5.core.BiologicallyDerivedProduct.request:type_name -> google.fhir.r5.core.Reference
	15, // 12: google.fhir.r5.core.BiologicallyDerivedProduct.identifier:type_name -> google.fhir.r5.core.Identifier
	15, // 13: google.fhir.r5.core.BiologicallyDerivedProduct.biological_source_event:type_name -> google.fhir.r5.core.Identifier
	14, // 14: google.fhir.r5.core.BiologicallyDerivedProduct.processing_facility:type_name -> google.fhir.r5.core.Reference
	16, // 15: google.fhir.r5.core.BiologicallyDerivedProduct.division:type_name -> google.fhir.r5.core.String
	12, // 16: google.fhir.r5.core.BiologicallyDerivedProduct.product_status:type_name -> google.fhir.r5.core.Coding
	17, // 17: google.fhir.r5.core.BiologicallyDerivedProduct.expiration_date:type_name -> google.fhir.r5.core.DateTime
	1,  // 18: google.fhir.r5.core.BiologicallyDerivedProduct.collection:type_name -> google.fhir.r5.core.BiologicallyDerivedProduct.Collection
	18, // 19: google.fhir.r5.core.BiologicallyDerivedProduct.storage_temp_requirements:type_name -> google.fhir.r5.core.Range
	2,  // 20: google.fhir.r5.core.BiologicallyDerivedProduct.property:type_name -> google.fhir.r5.core.BiologicallyDerivedProduct.Property
	16, // 21: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.id:type_name -> google.fhir.r5.core.String
	11, // 22: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.extension:type_name -> google.fhir.r5.core.Extension
	11, // 23: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.modifier_extension:type_name -> google.fhir.r5.core.Extension
	14, // 24: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.collector:type_name -> google.fhir.r5.core.Reference
	14, // 25: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.source:type_name -> google.fhir.r5.core.Reference
	3,  // 26: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.collected:type_name -> google.fhir.r5.core.BiologicallyDerivedProduct.Collection.CollectedX
	16, // 27: google.fhir.r5.core.BiologicallyDerivedProduct.Property.id:type_name -> google.fhir.r5.core.String
	11, // 28: google.fhir.r5.core.BiologicallyDerivedProduct.Property.extension:type_name -> google.fhir.r5.core.Extension
	11, // 29: google.fhir.r5.core.BiologicallyDerivedProduct.Property.modifier_extension:type_name -> google.fhir.r5.core.Extension
	13, // 30: google.fhir.r5.core.BiologicallyDerivedProduct.Property.type:type_name -> google.fhir.r5.core.CodeableConcept
	4,  // 31: google.fhir.r5.core.BiologicallyDerivedProduct.Property.value:type_name -> google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX
	17, // 32: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.CollectedX.date_time:type_name -> google.fhir.r5.core.DateTime
	19, // 33: google.fhir.r5.core.BiologicallyDerivedProduct.Collection.CollectedX.period:type_name -> google.fhir.r5.core.Period
	20, // 34: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.boolean:type_name -> google.fhir.r5.core.Boolean
	21, // 35: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.integer:type_name -> google.fhir.r5.core.Integer
	13, // 36: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.codeable_concept:type_name -> google.fhir.r5.core.CodeableConcept
	19, // 37: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.period:type_name -> google.fhir.r5.core.Period
	22, // 38: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.quantity:type_name -> google.fhir.r5.core.Quantity
	18, // 39: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.range:type_name -> google.fhir.r5.core.Range
	23, // 40: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.ratio:type_name -> google.fhir.r5.core.Ratio
	16, // 41: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.string_value:type_name -> google.fhir.r5.core.String
	24, // 42: google.fhir.r5.core.BiologicallyDerivedProduct.Property.ValueX.attachment:type_name -> google.fhir.r5.core.Attachment
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_init() }
func file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_init() {
	if File_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Collection_CollectedX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Property_ValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BiologicallyDerivedProduct_Collection_CollectedX_DateTime)(nil),
		(*BiologicallyDerivedProduct_Collection_CollectedX_Period)(nil),
	}
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*BiologicallyDerivedProduct_Property_ValueX_Boolean)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_Integer)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_CodeableConcept)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_Period)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_Quantity)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_Range)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_Ratio)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_StringValue)(nil),
		(*BiologicallyDerivedProduct_Property_ValueX_Attachment)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto = out.File
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_rawDesc = nil
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_goTypes = nil
	file_proto_google_fhir_proto_r5_core_resources_biologically_derived_product_proto_depIdxs = nil
}
